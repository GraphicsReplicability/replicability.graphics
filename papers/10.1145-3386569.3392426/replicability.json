[
    {
        "Variant name": "macOS",
        "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Operating system for the test": "macOS Catalina",
        "Title": "Exact and efficient polyhedral envelope containment check",
        "DOI": "10.1145/3386569.3392426",
        "Year": 2020,
        "ACM Keywords": [
            "Mesh generation"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "PDF URL": "https://cs.nyu.edu/~yixinhu/exact_envelope.pdf",
        "Project URL": "",
        "Code available (boolean)": true,
        "Code URL": "https://github.com/wangbolun300/fast-envelope",
        "Code URL2": "",
        "MD5 sum (for archives)": "",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number": "0d58124c589bed510acb83567674b8531e71a7e5",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:d3ae12d6c77cb685467977d8ee11bb91c9ac6def;origin=https://github.com/wangbolun300/fast-envelope.git;visit=swh:1:snp:85ad1113ac16bdaf3d2dd727ae1ed7baa224647b;anchor=swh:1:rev:0d58124c589bed510acb83567674b8531e71a7e5;path=//",
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
        "Software type {Code, Binary, Partial Code}": "Code",
        "Software language": "C++",
        "Code License (if any)": "MIT",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "cmake",
        "Dependencies": "libigl,geogram,eigen",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": false,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 0,
        "Dependencies score {0=NA, 1,2,3,4,5}": 0,
        "Build/configure score {0=NA, 1,2,3,4,5}": 0,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
        "Build instructions/comments": "When building the project, I got a first issue during the cmake when downloading the Eigen depency (wrong URL). This was easy to fix (just edit the cmake/FastEnvelopeDownloadExternal.cmake file and change the line 30 (GIT_TAG for libigl) to 21acee15fe4451e828b52bedcdba53b79d846376).\n\n The cmake is now ok but when building the project there is a missing file 'numerics.h' in the 'indirectPredicates' folder.",
        "Misc. comments": "The github project refers to a specific website (https://archive.nyu.edu/handle/2451/61221) to download the meshes that have been used in the paper."
    }
]