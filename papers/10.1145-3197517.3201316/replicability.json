[
    {
        "Variant name": "main",
        "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Single-photon 3D imaging with deep sensor fusion",
        "DOI": "10.1145/3197517.3201316",
        "Year": 2018,
        "ACM Keywords": [
            "Computational photography",
            "3D imaging",
            "Neural networks"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "http://www.computationalimaging.org/wp-content/uploads/2018/05/lindell_2018_siggraph.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "http://www.computationalimaging.org/publications/single-photon-3d-imaging-with-deep-sensor-fusion/",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "https://drive.google.com/open?id=1Yv6s3pD7g0pBnE9DVO_DkbQm-X_W8K6Z",
        "Code URL2": "",
        "MD5 sum (for archives)": "85ad8450d8eda8e1659cfcd6d27dc87a",
        "git/hg/svn commit hash or revision number": "",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "unspecified",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "Other script, Not applicable (python, Matlab..)",
        "Dependencies": "matlab/ torch / scikit_image / scipy/tqdm / numpy / skimage /tensorboardX / torchvision / opencv / libann",
        "Does the software require paywall/proprietary software/material (boolean)?": true,
        "Does the code need data (not examples) (boolean)": true,
        "Nature of the data (pretrained model, LUT...)": "Training data",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": false,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 1,
        "Dependencies score {0=NA, 1,2,3,4,5}": 1,
        "Build/configure score {0=NA, 1,2,3,4,5}": 1,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
        "Operating system for the test": "Linux",
        "Build instructions/comments": "We tried and failed to use the provided code three different time on linux and Mac OS, and could not generate the Training Data.\n\nTraining data generation requires many steps to convert the NYU dataset to simulated SPAD measurements. After downloading (see provided script download_nyu_dataset.bash) and inflating the NYUV2 dataset, I have done the following actions:\n 1. I compiled Opencv2.4 and libann. I modified simulated_data/intrinsic_texture/mex/compile.m with the installation paths of these library. The compilation of the mex files ran smoothly\n 2. I compiled simulated_data/nyu_utils/compile.m. I didn't have libfreenect in hand, so I commented the two first lines of the script. \n 3.In order to run the simulated_data/ConvertRGBD.m script, I had to move the opencv libraries to simulated_data, so matlab can dynamically link them (there is probably a better way to link, but I couldn't find it).\nMatlab finds the library, but triggers the following error: \nERROR: MATLAB:unexpectedCPPexception\nUnexpected Standard exception from MEX file.\nWhat() is:/mathworks/devel/bat/B3p1/build/3p/sources/OpenCV/modules/core/src/matrix.cpp:1319: error: (-213) Unknown/unsupported array type in function getMat_\n\nConsidering the time required to download the data and compile the dependencies, I stopped after 10 hours of experiments.",
        "Misc. comments": "",
        "Software language": "Python, Matlab / Mathematica / .."
    }
]