[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "How do people edit light fields?",
        "DOI": "10.1145/2601097.2601125",
        "Year": 2014,
        "ACM Keywords": [
            "Graphics systems and interfaces",
            "Graphics input devices"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "http://giga.cps.unizar.es/~ajarabo/pubs/lfeiSIG14/downloads/Jarabo_sig14.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": true,
        "Arxiv/OAI page URL": "https://hal.inria.fr/hal-01060860/",
        "Project URL": "http://giga.cps.unizar.es/~ajarabo/pubs/lfeiSIG14/index.html",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "http://giga.cps.unizar.es/~ajarabo/pubs/lfeiSIG14/code/downloads/LFEI_v0.9.zip",
        "Code URL2": "",
        "MD5 sum (for archives)": "0DD8A6D4EAC744A68039D219252F6908",
        "git/hg/svn commit hash or revision number": "",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "custom",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "IDE Project (VS,..)",
        "Dependencies": "Qt / QGlViewer / glew",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": true,
        "Nature of the data (pretrained model, LUT...)": "Images for experiment",
        "License of the data": "custom",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 1,
        "Dependencies score {0=NA, 1,2,3,4,5}": 5,
        "Build/configure score {0=NA, 1,2,3,4,5}": 2,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 2,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
        "Operating system for the test": "Windows",
        "Build instructions/comments": "I had numerous issues compiling and running the software in part due to outdated dependencies and to the lack of documentation.\nTo compile the code using a recent Qt (Qt 5.12.6, which needs to be installed and takes about 45GB!) and somewhat recent Visual Studio 2017 :\n- upgrade and retarget the VS project file (almost automatic)\n- change all includes that contain QtGui/QAction, QtGui/QApplication, QtGui/QButtonGroup, QtGui/QComboBox, QtGui/QDialog, QtGui/QHeaderView, QtGui/QLabel, QtGui/QPushButton in DialogQ6.h, Dialog7.h, and DialogQYear2.h, and change them to QtWidgets/QAction etc.\n- change the includes QFrame, QColorDialog and QFileDialog in qframemousepos.h, interface.cpp, main.cpp, lightfield.cpp and lightfieldViewer.cpp to QtWidgets/QFrame, QtWidgets/QColorDialog and QtWidgets/QFileDialog \n- add QT_DISABLE_DEPRECATED_BEFORE to the preprocessor directives due to some deprecated functions since Qt5\n- In lightfieldViewer.cpp, change all occurences of updateGL(); to update(); (changed since QGLViewer 2.7.0)\n- In lightfieldViewer's constructor, parameter should be a QOpenGLWidget*, not a QGLWidget*. The call to QGLViewer(parent,shareWidget) in the constructor can be safely changed to QGLViewer(parent).\n- You need to install libQGLViewer. In the config.h of QGLViewer, you may want to change #include <QOpenGLWidget> to QtWidgets/QOpenGLWidget (if you keep the search path for Qt includes unchanged, or otherwise add QtWidgets to the search path)\n- update the linked libraries in the project from Qt4 to Qt5 ; add Qt5Widgets.lib\n- do not use the glew32.lib provided but use a fresh glew, otherwise there are link errors\n- replace all hard coded instances of D:/Users/Adrian/Desktop/LF to the path where the lightfields were downloaded in main.cpp  (170 instances, don't do it manually)\n- In the downloaded lightfield dataset, rename Wanner to HCI, Kim_et_al to Disney, and Synthetic to Training. Move the TaskY2 folder within your lightfield data folder.\n- You can now run the software with the experiment number as a parameter. This parameter is an integer between 1 and 41. Some experiments cannot be run due to missing files (e.g., number 41 due to missing 11_Bike6.jpg or 31 due to missing 01_Couch.jpg).\nUltimately, once everything compiles and run, I managed to see the interface. Only in debug mode did I manage to see the lightfield show up. And in both release and debug mode, the interface seemed to be frozen : I could not complete a single task. I assume this is mostly due to changes in Qt over time.",
        "Misc. comments": "",
        "Software language": "C/C++"
    }
]