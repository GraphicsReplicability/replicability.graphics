[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Megapixel Adaptive Optics: Towards Correcting Large-scale Distortions in Computational Cameras",
        "DOI": "10.1145/3197517.3201299",
        "Year": 2018,
        "ACM Keywords": [
            "Computational photography"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": true,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "https://vccimaging.org/Publications/Wang2018AdaptiveOptics/Wang2018AdaptiveOptics.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "https://vccimaging.org/Publications/Wang2018AdaptiveOptics/",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "https://github.com/vccimaging/MegapixelAO",
        "Code URL2": "",
        "MD5 sum (for archives)": "",
        "git/hg/svn commit hash or revision number": "97fbc091e97a0d42d6c8cd3026416eb82af223b7",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:97fbc091e97a0d42d6c8cd3026416eb82af223b7;origin=https://github.com/vccimaging/MegapixelAO/",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "Creative Commons",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "CMakeLists",
        "Dependencies": "matlab / glad / KHR / cuda / OpenCV / GLFW / FlyCapture2",
        "Does the software require paywall/proprietary software/material (boolean)?": true,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": false,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": true,
        "Documentation score {0=NA,1,2,3}": 1,
        "Dependencies score {0=NA, 1,2,3,4,5}": 0,
        "Build/configure score {0=NA, 1,2,3,4,5}": 0,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
        "Operating system for the test": "Windows",
        "Build instructions/comments": "Part of the code requires an SLM to run, which I do not have ; this part also only compiles with VS2015 and not VS2017 (which I have), and has several dependencies. However, parts of the code (simple adaptive optics and the solver) also allow to reproduce some the paper's figures, and trivially run on matlab without dependencies.",
        "Misc. comments": "",
        "Software language": "Matlab / Mathematica / .., Shader language"
    }
]