[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Fast and Exact Discrete Geodesic Computation Based on Triangle-Oriented Wavefront Propagation",
        "DOI": "10.1145/2897824.2925930",
        "Year": 2016,
        "ACM Keywords": [
            "Shape modeling",
            "Computational geometry"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": true,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "https://i.cs.hku.hk/~yzyu/publication/VTPgeodesic-sig2016.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": true,
        "Arxiv/OAI page URL": "",
        "Project URL": "",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "https://github.com/YipengQin/VTP_source_code",
        "Code URL2": "",
        "MD5 sum (for archives)": "",
        "git/hg/svn commit hash or revision number": "3ef0700a63b100f446835d2a34811472720c959a",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:3ef0700a63b100f446835d2a34811472720c959a;origin=https://github.com/YipengQin/VTP_source_code/",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "unspecified",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "None",
        "Dependencies": "",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 1,
        "Dependencies score {0=NA, 1,2,3,4,5}": 0,
        "Build/configure score {0=NA, 1,2,3,4,5}": 5,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
        "Operating system for the test": "Windows",
        "Build instructions/comments": "The code comes with no makefile, but it is straightforward to compile it (a single main.cpp and a few .h, with no external dependencies, which is ideal). Given the stdafx.h, I compiled it with Visual Studio 2017, creating a solution in no effort. \nHowever, std::auto_ptr is soon to be deprecated. Right now, you need to #include <memory> in  geodesic_memory.h to compile it. Some people mention the preprocessor directive _HAS_AUTO_PTR_ETC=1 but this was not useful for me (perhaps VS2019).\nData were not provided, so I computed geodesics on meshes of my own. I managed to compute single source/all destinations geodesics of a 474K triangle mesh in 4.8 seconds on a 2.8GHz laptop, which matches timings in the paper (382K triangles in 4.13 seconds, on a 3.4GHz desktop machine).",
        "Misc. comments": "",
        "Software language": "C/C++"
    }
]