[
    {
        "Variant name": "main",
        "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Multimaterial Mesh-Based Surface Tracking",
        "DOI": "10.1145/2601097.2601146",
        "Year": 2014,
        "ACM Keywords": [
            "Simulation by animation"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "http://www.cs.columbia.edu/cg/multitracker/multitracker.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "http://www.cs.columbia.edu/cg/multitracker/",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "https://github.com/fangda-cu/MultiTracker",
        "Code URL2": "http://www.cs.columbia.edu/cg/multitracker/code/",
        "MD5 sum (for archives)": "",
        "git/hg/svn commit hash or revision number": "7719b2fd81ed3c17419b73b60aeb71b7fd83840c",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:ecbf8bddbafaedabe38ac1645a33e2d637fed7ae;origin=https://github.com/fangda-cu/MultiTracker/",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "Copyright (c) 2014, Fang Da (Columbia University), Christopher Batty  (University of Waterloo) and Eitan Grinspun (Columbia University) All rights reserved.",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "CMakeLists",
        "Dependencies": "Eigen/blas/lapack",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 0,
        "Dependencies score {0=NA, 1,2,3,4,5}": 5,
        "Build/configure score {0=NA, 1,2,3,4,5}": 5,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
        "Operating system for the test": "Mac OS",
        "Build instructions/comments": "No issue to build the code and run the examples. I had to look at the code to understand the keys for the viewer but it was quite explicit. Almost all figures have an example file to easily reproduce the results.",
        "Misc. comments": "",
        "Software language": "C/C++"
    }
]