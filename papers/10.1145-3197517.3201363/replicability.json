[
    {
        "Variant name": "main",
        "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Gradient-domain Volumetric Photon Density Estimation",
        "DOI": "10.1145/3197517.3201363",
        "Year": 2018,
        "ACM Keywords": [
            "Ray tracing"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "http://www.cim.mcgill.ca/~derek/files/gdvpm_author.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "https://beltegeuse.github.io/research/publication/2018_gradientvolumetricpm/",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "https://github.com/gradientpm/gvpm",
        "Code URL2": "",
        "MD5 sum (for archives)": "",
        "git/hg/svn commit hash or revision number": "5c9b5b8c49f415217f929e8b7c51c833a25c14f3",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:185c459fb313b95970b80e3d5d2266ab60c6e379;origin=https://github.com/gradientpm/gvpm/",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "GPL",
        "Are the code authors explicit? (boolean)": true,
        "Build/Configure mechanism": "Makefile, CMakeLists",
        "Dependencies": "mitsuba/boost/xerces/collada/eigen/fftw3/glew/IlmBase/OpenEXR",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 0,
        "Dependencies score {0=NA, 1,2,3,4,5}": 3,
        "Build/configure score {0=NA, 1,2,3,4,5}": 5,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 5,
        "Operating system for the test": "Linux",
        "Build instructions/comments": "Compiled and worked out of the box. Download a scene on the project website and run mitsuba name_of_your_scene.xml (mitsuba found in the \"binaries\" folder of the project).\nEasy to find/install dependencies: 2 because installing mitsuba on linux requires several changes on ubuntu 19.10.\n** In config.py I changed -std=c++11 into -std=gnu++11 ;\n** In mitsuba/build/release/mtsgui I changed QtCore, QtOpenGL (and so on) into Qt5Core, Qt5OpenGL (and so on)\n** in data/scons/qt5.py,line 392 changed QtCore into Qt5Core.",
        "Misc. comments": "",
        "Software language": "C/C++"
    }
]