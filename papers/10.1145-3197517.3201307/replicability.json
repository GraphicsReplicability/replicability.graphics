[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Gaussian material synthesis",
        "DOI": "10.1145/3197517.3201307",
        "Year": 2018,
        "ACM Keywords": [
            "Gaussian processes",
            "Neural networks",
            "Ray tracing"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": true,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "https://users.cg.tuwien.ac.at/~zsolnai/wp/wp-content/uploads/2018/04/gms.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": true,
        "Arxiv/OAI page URL": "https://arxiv.org/abs/1804.08369",
        "Project URL": "https://users.cg.tuwien.ac.at/zsolnai/gfx/gaussian-material-synthesis/",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "https://users.cg.tuwien.ac.at/zsolnai/wp/wp-content/uploads/2018/04/gms-supplementary.zip",
        "Code URL2": "",
        "MD5 sum (for archives)": "7436791C4E1A279051C66124D3F8064B",
        "git/hg/svn commit hash or revision number": "",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "MIT",
        "Are the code authors explicit? (boolean)": true,
        "Build/Configure mechanism": "Not applicable (python, Matlab..)",
        "Dependencies": "keras / tensorflow / blender / pillow / GPy / sklearn / climin",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": true,
        "Nature of the data (pretrained model, LUT...)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
        "License of the data": "MIT",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 1,
        "Dependencies score {0=NA, 1,2,3,4,5}": 4,
        "Build/configure score {0=NA, 1,2,3,4,5}": 0,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 2,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
        "Operating system for the test": "Windows",
        "Build instructions/comments": "There are minor bugs that need to be fixed, that include mixes of tab and space in the Python code (l.70 and 406 of gms.py), the syntax `i+1`.zfill(4) was deemed incorrect by my Python 3.6.8 (l.512, 674 and 690 of gms.py ; replaced by str(i+1).zfill(4)). Error as well on line 20 : from sklearn.gaussian_process import GaussianProcess ; it seems sklearn has evolved and doesn't have GaussianProcess (now separated as classifier or regressor). This line can be commented out.\nThe main issue for making it run was the lack of documentation both for installing and for running the code, appart from a short readme. In practice :\nGPy is a Gaussian Process library that needs to be installed with pip (I was looking for a GPy.py in the source folder!), sklearn needs to be installed, as well as climin, keras and tensorflow. Regarding tensorflow, it needs to be sufficiently recent to have tf_utils (1.14.0 worked, but not my older install).\nAlso, Pillow needs to be installed with pip. However, the trick is that it needs to be installed *with the Python provided with Blender* and not your usual Python install !\nUltimately, I could run gms.py and nn-predict.py (which both produce images) but I could not get the Python script within material-loader.blend to run : this script merely erased all .png images of the directory (included reference.png and resolution.png needed to run gms.py and nn-predict.py), and doesn't seem to produce anything. The code within this script is obscure : for instance, the file which likely should contain the output (called \"output.txt\") is merely erased at the begining of the code if it already exists, and then never used again later in the code for writing.\nI was expecting some kind of user interface (similarly to the one shown in the paper) to navigate within the latent space of BRDFs, but I didn't see one. Since there isn't much documentation, I am not sure what I am looking at and how to use the code.",
        "Misc. comments": "",
        "Software language": "Python"
    }
]