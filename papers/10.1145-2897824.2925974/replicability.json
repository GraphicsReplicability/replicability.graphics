[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Let there be color!: joint end-to-end learning of global and local image priors for automatic image colorization with simultaneous classification",
        "DOI": "10.1145/2897824.2925974",
        "Year": 2016,
        "ACM Keywords": [
            "Image processing",
            "Neural networks"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "http://iizuka.cs.tsukuba.ac.jp/projects/colorization/data/colorization_sig2016.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "http://iizuka.cs.tsukuba.ac.jp/projects/colorization/data/colorization_sig2016.pdf",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "https://github.com/satoshiiizuka/siggraph2016_colorization",
        "Code URL2": "",
        "MD5 sum (for archives)": "",
        "git/hg/svn commit hash or revision number": "83a00d7eba55043fe11730aa1d9b475083aaf690",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:83a00d7eba55043fe11730aa1d9b475083aaf690;origin=https://github.com/satoshiiizuka/siggraph2016_colorization/",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "CC BY-NC-SA 4.0",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "Not applicable (python, Matlab..)",
        "Dependencies": "torch / torch-nn",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": true,
        "Nature of the data (pretrained model, LUT...)": "Pre-trained models / Hardcoded data / lookup tables /...",
        "License of the data": "CC BY-NC-SA 4.0",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 1,
        "Dependencies score {0=NA, 1,2,3,4,5}": 3,
        "Build/configure score {0=NA, 1,2,3,4,5}": 0,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
        "Operating system for the test": "Windows",
        "Build instructions/comments": "The short LUA code comes with a downloadable pretrained network (the data to retrain the network is from http://places.csail.mit.edu/ but the code to train the network is not provided). I used the Ubuntu for Windows framework (with Windows 10) to run the code, which was simpler here.\nI still needed to perform a number of steps:\n- dos2unix download_model.sh to prevent including the \\r in the download URL\n- sudo apt-get install cmake and sudo apt-get install libreadline-dev for dependencies\n- installing torch with nn was slightly harder than the instructions on the torch website claim:\ngit clone https://github.com/torch/distro.git ~/torch --recursive\ncd ~/torch\nthen on line 178 of install--deps  you need to change\nsudo apt-get install -y python-software-properties\nto sudo apt-get install -y software-properties-common since python-software-properties is not supported anymore.\nThen you can run bash install-deps and ./install.sh\nBut then you still need to install nn:\nsudo apt install luarocks\nsudo ~/torch/install/bin/luarocks install torch\nsudo ~/torch/install/bin/luarocks install nn\nand finally run the colorize script, not directly with \"th\" but using:\n~/torch/install/bin/th colorize.lua ansel_colorado_1941.png out.png\nThen everything works fine, runs smoothly (counts 2-3 minutes on the CPU for the only example image provided, which exactly replicate the landscape result in the teaser).",
        "Misc. comments": "",
        "Software language": "Other"
    }
]