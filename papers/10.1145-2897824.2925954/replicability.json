[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "The Sketchy Database: Learning to Retrieve Badly Drawn Bunnies",
        "DOI": "10.1145/2897824.2925954",
        "Year": 2016,
        "ACM Keywords": [
            "Image representations",
            "Image processing"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "https://www.cc.gatech.edu/~hays/tmp/sketchy-database.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "http://sketchy.eye.gatech.edu/",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "https://github.com/janesjanes/sketchy",
        "Code URL2": "",
        "MD5 sum (for archives)": "",
        "git/hg/svn commit hash or revision number": "93d149faebeddf3871d68ee11ef02828bc430c3d",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:302e7288a608acb2038921ed0663ccb73758de7f;origin=https://github.com/janesjanes/sketchy/",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "MIT",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "Not applicable (python, Matlab..)",
        "Dependencies": "Caffe",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": true,
        "Nature of the data (pretrained model, LUT...)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 2,
        "Dependencies score {0=NA, 1,2,3,4,5}": 5,
        "Build/configure score {0=NA, 1,2,3,4,5}": 5,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 3,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 5,
        "Operating system for the test": "Linux",
        "Build instructions/comments": "The github repsitory provides two scripts, which both require to download the\" sketch and photos\"dataset (https://goo.gl/SNpMmK):\n- Retrieval_Example.ipynb, which demonstrates how to retrieve images from a sketch. I had to flatten the content of the directory \"256x256/photo/tx_00000000000\" to be able to load in the photo database (8th code block in jupyter notebook).\n- Compute_Sketchy_score.ipynb, which compute the network matching accuracy. I tried to flatten the directory \"256x256/sketch/tx_00000000000\", and replace the use of the file test_img_list.txt (which is not provided) by test_img_list = os.listdir(photo_paths). Unfortunatly, even with this change, I couldn't run the script, and I couldn't find a way to format the data as required by the last code block. No instruction is given on how to modify or adapt file loading and directory structure.\n\nBug fixes (for both scripts):\n - scripts use python2 syntax for the print function (ie. without parenthesis). Can be adapted to python3 by using parenthesis.\n - scripts attempt to load LSHForest from sklearn.neighbors, which is deprecated and not provided by modern sklearn packages. Replace \nfrom sklearn.neighbors import NearestNeighbors,LSHForest\nby \nfrom sklearn.neighbors import NearestNeighbors\n\nI have tested both scripts using caffe_cpu (see 4th code block in both scripts: caffe.set_mode_cpu()).\n\nThe provided scripts does not demonstrate how to retrieve sketches from an image. The broken script does not demonstrate a functionality of the approach but rather its performances, and so its failure does not impact the replicability of the approach.",
        "Misc. comments": "",
        "Software language": "Python"
    }
]