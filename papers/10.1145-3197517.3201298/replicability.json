[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Space-time tomography for continuously deforming objects",
        "DOI": "10.1145/3197517.3201298",
        "Year": 2018,
        "ACM Keywords": [
            "Computer Vision",
            "Computer Graphics"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": true,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "https://vccimaging.org/Publications/Zang2018Space-time/Zang2018Space-time.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "https://vccimaging.org/Publications/Zang2018Space-time/",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "https://github.com/gmzang/SpaceTimeTomography",
        "Code URL2": "",
        "MD5 sum (for archives)": "",
        "git/hg/svn commit hash or revision number": "a2e6a2b1dd1da48e502fc25126aa9b8a139ed543",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:a2e6a2b1dd1da48e502fc25126aa9b8a139ed543/",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "Creative Commons",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "None",
        "Dependencies": "argtable/eigen/cimg/glut/glew/libtiff",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": false,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 1,
        "Dependencies score {0=NA, 1,2,3,4,5}": 4,
        "Build/configure score {0=NA, 1,2,3,4,5}": 1,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 6,
        "Operating system for the test": "Windows",
        "Build instructions/comments": "There are multiple issues with the code. While no makefile is provided, it is relatively easy (though cumbersome because of several dependencies) to create a Visual Studio 2017 project. Not listed as a dependency is libtiff.\nIn main.cpp, due to issues with \"goto\", you need to move the declarations of data (line 142), proNo (line 148), scene (line 149), mainWindow (line 154) at the begining of the main. It should look like:\n\tVolumeData* data = new VolumeData;\n\tGLUTSceneContainer *mainWindow;\n\tint proNo;\n\tST_Tomography *scene;\naround line 49.\nIn ST_Tomography.cpp, strdup (line 188) should be replaced by _strdup because it is deprecated in Visual Studio 2017 (it produces a compilation error although the code is supposed to compile with Visual Studio 2015 and 2018 according to the Readme).\nBut then multiple files seems missing, and could either not be found on the internet (a \"linear_solver.h\" that contains a \"linear_solver\" namespace, a \"scope.h\" that includes a #define called \"utilities_scope_defines\", a file called \"image_blas.h\" that performs blas-like operations on images), or a generic and could be recoded (e.g., \"vec3.h\"). Similarly, \"str_format\" is not a standard function in Visual Studio, so I am not sure where it is supposed to come from.\nUltimately, I could not compile the code.\n\n--alternative test on linux--\nUnable to compile, had to create a CMakeLists (no build instruction), several bugfix needed: goto crosses initialization issues, includes missing (cstring) missing linear_solver.h file ...",
        "Misc. comments": "",
        "Software language": "C/C++"
    }
]