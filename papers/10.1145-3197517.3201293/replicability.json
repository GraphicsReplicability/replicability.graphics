[
    {
        "Variant name": "main",
        "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "A moving least squares material point method with displacement discontinuity and two-way rigid body coupling",
        "DOI": "10.1145/3197517.3201293",
        "Year": 2018,
        "ACM Keywords": [
            "Physical simulation"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "https://www.seas.upenn.edu/~cffjiang/research/mlsmpm/hu2018mlsmpm.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "https://yzhu.io/publication/mpm2018siggraph/",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "https://github.com/yuanming-hu/taichi_mpm",
        "Code URL2": "",
        "MD5 sum (for archives)": "",
        "git/hg/svn commit hash or revision number": "3bb90fbe4c901aafc048dbb2d8d8aa388226d011",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:3812456fcd194c48e749e24ad5b9a4189138375f;origin=https://github.com/yuanming-hu/taichi_mpm/",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "MIT",
        "Are the code authors explicit? (boolean)": true,
        "Build/Configure mechanism": "Commandline instructions in README",
        "Dependencies": "taichi.h",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 2,
        "Dependencies score {0=NA, 1,2,3,4,5}": 5,
        "Build/configure score {0=NA, 1,2,3,4,5}": 5,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
        "Operating system for the test": "Linux",
        "Build instructions/comments": "An example is provided in file mls.mpm88 (which is particularly well explained) which is consistent with the paper result. Many other examples are provided in the scripts folder, however this requires installing taichi (a legacy branch) which fails (even after adding a -fpermissive option which suppressed some errors) with:\n\"error: no match for \u2018operator+=\u2019 (operand types are \u2018taichi::RigidBody<2>::InertiaType\u2019 {aka \u2018float\u2019} and \u2018taichi::MatrixND<2, float, taichi::InstSetExt::AVX2>\u2019)\" \n\nHence I was not able to reproduce other results using the provided scripts.",
        "Misc. comments": "",
        "Software language": "C/C++"
    }
]