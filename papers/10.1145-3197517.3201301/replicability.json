[
    {
        "Variant name": "main",
        "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Point convolutional neural networks by extension operators",
        "DOI": "10.1145/3197517.3201301",
        "Year": 2018,
        "ACM Keywords": [
            "Neural networks",
            "Shape analysis"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": false,
        "PDF URL": "https://arxiv.org/pdf/1803.10091.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": true,
        "Arxiv/OAI page URL": "https://arxiv.org/abs/1803.10091",
        "Project URL": "",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "https://github.com/matanatz/pcnn",
        "Code URL2": "",
        "MD5 sum (for archives)": "",
        "git/hg/svn commit hash or revision number": "69a739b61e6e5cb32a666e2531bcd39f623936ce",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:f652ea26227984f55e60493ad9e84403a7cf6611;origin=https://github.com/matanatz/pcnn/",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "unspecified",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "Not applicable (python, Matlab..)",
        "Dependencies": "tensorflow / pyhocon / h5py",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": true,
        "Nature of the data (pretrained model, LUT...)": "Training data",
        "License of the data": "ModelNet40: All CAD models are downloaded from the Internet and the original authors hold the copyright of the CAD models. The label of the data was obtained by us via Amazon Mechanical Turk service and it is provided freely. This dataset is provided for the convenience of academic research only.",
        "Able to perform a replicability test (boolean)": false,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 0,
        "Dependencies score {0=NA, 1,2,3,4,5}": 4,
        "Build/configure score {0=NA, 1,2,3,4,5}": 0,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
        "Operating system for the test": "Linux",
        "Build instructions/comments": "I needed to install tensorflow and pyhocon manually. No trained models are given and I wasn't able to generate the models from the (provided) training data (timeout, 250 epoch required and the train.py refused to consider my GPU and thus did the training on CPU). \n\nAfter a single epoch, the evaluation script fails (version issue of the provider package?): \n\nAttributeError: module 'provider' has no attribute 'ClassificationProvider'",
        "Misc. comments": "",
        "Software language": "Python"
    }
]