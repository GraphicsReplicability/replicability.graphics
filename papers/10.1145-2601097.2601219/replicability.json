[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Unifying points, beams, and paths in volumetric light transport simulation",
        "DOI": "10.1145/2601097.2601219",
        "Year": 2014,
        "ACM Keywords": [
            "Ray tracing"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": true,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "https://cs.dartmouth.edu/~wjarosz/publications/krivanek14upbp.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "https://cs.dartmouth.edu/~wjarosz/publications/krivanek14upbp.html",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "https://github.com/PetrVevoda/smallupbp",
        "Code URL2": "",
        "MD5 sum (for archives)": "",
        "git/hg/svn commit hash or revision number": "15430256733938d529a2f5c7ef4cdcd940ae4208",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "https://archive.softwareheritage.org/browse/revision/15430256733938d529a2f5c7ef4cdcd940ae4208/?origin_url=https://github.com/PetrVevoda/smallupbp",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "MIT",
        "Are the code authors explicit? (boolean)": true,
        "Build/Configure mechanism": "Code",
        "Dependencies": "OpenEXR,embree",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 3,
        "Dependencies score {0=NA, 1,2,3,4,5}": 5,
        "Build/configure score {0=NA, 1,2,3,4,5}": 5,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
        "Operating system for the test": "",
        "Build instructions/comments": "Extremely easy to compile (tested under VS2017, which only required retargeting the solution) and run. Test scenes are directly provided as command line parameters as a scene number or scene file (scenes from the paper are provided), and equal-time comparisons are facilitated by an adjustable timeout.",
        "Misc. comments": "",
        "Software language": "C++"
    }
]