[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Compact Precomputed Voxelized Shadows",
        "DOI": "10.1145/2601097.2601221",
        "Year": 2014,
        "ACM Keywords": [
            "Texturing"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "http://www.cse.chalmers.se/~d00sint/CompressedShadowsPreprint.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "http://www.cse.chalmers.se/~d00sint/CPVS/CPVSStandalone.zip",
        "Code URL2": "",
        "MD5 sum (for archives)": "529FD85C18C15184D227287938EDB8B3",
        "git/hg/svn commit hash or revision number": "",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "unspecified",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "IDE Project (VS,..)",
        "Dependencies": "cuda / embree / glew / glut / wxWidgets",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 2,
        "Dependencies score {0=NA, 1,2,3,4,5}": 3,
        "Build/configure score {0=NA, 1,2,3,4,5}": 3,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 2,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
        "Operating system for the test": "Windows",
        "Build instructions/comments": "I compile the code with VS2017 and Cuda 10.2, which is quite far from the original project settings (VS2014 6.5). Step by step:\n- You need to edit the CPVS2014.vcxproj, replacing at line 55 <Import Project=\"$(VCTargetsPath)\\BuildCustomizations\\CUDA 6.5.props\" /> by the place where you have your Cuda 10 property sheets (in my case \"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.2\\extras\\visual_studio_integration\\MSBuildExtensions\\CUDA 10.2.props\"). And similarly in line 185 for the Cuda targets (same folder). And then open the project with visual studio, update/retarget the project file.\n- You need to use a fresh wxWidget, since the one provided is precompiled for VS2014. Go to https://www.wxwidgets.org/downloads/ and download the precompiled binaries for windows (headers and release DLLs). Replace the original wxWidget folder with these downloads (same fold hierarchy).\n- add wxMSVC_VERSION=14x as a preprocessor directive for the projects CHAGApp and CPVS2014 and remove wxMSVC_VERSION_AUTO\n- replace compute_20,sm_20 in Cuda C/C++->Device->Code Generation to compute_30,sm_30 in the project CPVS2014\n- add #include <intrin.h> in CompressedShadow.cpp\n- Change WINVER=0x0400 to WINVER=0x0500 in the preprocessor directives of CHAGApp and CPVS2014\n- Change the library path ../wxWidgets/lib/vc120_x64_dll  to ../wxWidgets/lib/vc14x_x64_dll\n- Change the libraries being linked from wxmsw30u_core.lib and wxbase30u.lib to wxmsw31u_core.lib and wxbase31u.lib\n- In line 115 of GLSLProgramManager.cpp, replace return shader; by return \"#version 420 compatibility\\n\"+shader;  This is quite a hack, but works in my case. Remove *all* mentions of #version 400 or 420 in all shader files (Application.glsl, CPVSBuilder.glsl, Scene.glsl) since you are now only allowed a single call to \"#version\" in the first line of the shader.\n- Compile the code, and put the .exe and the wxWidgets dll in the CPVS2014 folder (where there is a subfolder \"media\").\nYou can now launch the .exe and play with it. There is a very nice Readme.pdf that gives step by step instructions to compress shadow maps. I lowered the reproducibility score for the main reason that the proposed implementation differs from what is explained in the paper (the Readme.pdf explains the differences), and for the secondary reason that the scene files used in the paper are not provided, so it is difficult to appreciate the differences between the new and original implementation in term of results. However, the code works well and shows crisp shadows.",
        "Misc. comments": "",
        "Software language": "C/C++"
    }
]