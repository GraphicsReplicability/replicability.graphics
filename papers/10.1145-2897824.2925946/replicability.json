[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Fidelity vs. Simplicity: a Global Approach to Line Drawing Vectorization",
        "DOI": "10.1145/2897824.2925946",
        "Year": 2016,
        "ACM Keywords": [
            "Reconstruction",
            "Parametric curve and surface models"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "https://hal.inria.fr/hal-01309271/document",
        "PDF on Arxiv or any openarchive initiatives (boolean)": true,
        "Arxiv/OAI page URL": "https://hal.inria.fr/hal-01309271",
        "Project URL": "http://www-sop.inria.fr/reves/Basilic/2016/FLB16/",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "http://www-sop.inria.fr/reves/Basilic/2016/FLB16/2016sig_line_drawing_vectorization_executable_x64.zip",
        "Code URL2": "",
        "MD5 sum (for archives)": "8564085BC004C5DAE6F70721CAAD85AF",
        "git/hg/svn commit hash or revision number": "",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "",
        "Software type {Code, Binary, Partial Code}": "Binary",
        "Code License (if any)": "unspecified",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "Not applicable (python, Matlab..)",
        "Dependencies": "",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 0,
        "Dependencies score {0=NA, 1,2,3,4,5}": 0,
        "Build/configure score {0=NA, 1,2,3,4,5}": 0,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
        "Operating system for the test": "Windows",
        "Build instructions/comments": "The software is quite intuitive and easy to use. There is a zipped data file that can be downloaded that includes the drawings for all figures in the paper which is ideal. However, there seems to be some parameter fiddling to obtain the results. For instance, in Fig. 11, I had to specify a \"min region size\" of 8 instead of the default 7 to reproduce the two rightmost images (and this parameter set also works for the two leftmost images).",
        "Misc. comments": "",
        "Software language": "Cannot answer"
    }
]