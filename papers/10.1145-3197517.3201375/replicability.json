[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Integer-only cross field computation",
        "DOI": "10.1145/3197517.3201375",
        "Year": 2018,
        "ACM Keywords": [
            "Mesh models"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": true,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "http://www.cs.technion.ac.il/~mirela/publications/ioq.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "http://www.cs.technion.ac.il/~mirela/code/ioq.zip",
        "Code URL2": "",
        "MD5 sum (for archives)": "61FEC827546EC73CB208F078BC13564A",
        "git/hg/svn commit hash or revision number": "",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "unspecified",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "Other script, Not applicable (python, Matlab..)",
        "Dependencies": "matlab / libigl",
        "Does the software require paywall/proprietary software/material (boolean)?": true,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 2,
        "Dependencies score {0=NA, 1,2,3,4,5}": 5,
        "Build/configure score {0=NA, 1,2,3,4,5}": 5,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
        "Operating system for the test": "Windows",
        "Build instructions/comments": "Minor fixes to the code: when running the examples from the examples directory, you need to replace './data/bunny.off' by '../data/bunny.off' in the demo files, and similarly change the '.' to '..' in the vis_vector_field.m file in addOptional(p, 'BinaryPath', fullfile('..', 'bin', 'vis_vector_field', 'vis_vector_field_bin.exe')); \nI also had to add my visual studio bin directory to my PATH.\nAlso, the readme mentions a code snippet to compute cross fields. There is an error in the routine to display the result : it is not m.draw(CF, alpha) but m.plot(CF, alpha) (the method draw is not a method of the class Mesh, and 'draw_face_field' is not correct either).\nA single example (bunny) is provided, though I believe it should work similarly well on other examples.\nIt took me significant time making this code run only because I had to perform a fresh cuda install -- it otherwise trivially installs.",
        "Misc. comments": "",
        "Software language": "Matlab / Mathematica / .., Shader language"
    }
]