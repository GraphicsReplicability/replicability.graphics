[
    {
        "Variant name": "main",
        "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Visual Rhythm and Beat",
        "DOI": "10.1145/3197517.3201371",
        "Year": 2018,
        "ACM Keywords": [
            "Graphics input devices",
            "Sound-based input / output",
            "Computational photography",
            "Image processing",
            "Image-based rendering"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "http://www.abedavis.com/files/papers/VisualRhythm_Davis18.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "http://abedavis.com/visualbeat/",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "https://github.com/abedavis/visbeat/",
        "Code URL2": "",
        "MD5 sum (for archives)": "",
        "git/hg/svn commit hash or revision number": "e6b7c5da1d2007b98fd53ba4b5ca6d58c75f17c0",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:2d2e048b547c32d61ff64422e06cd5a9a64f554b;origin=https://github.com/abedavis/visbeat/",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "Stanford",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "Not applicable (python, Matlab..)",
        "Dependencies": "numpy/scipy/moviepy/librosa/bs4/librosa/imageio/requests/moviepy/termcolor/youtube-dl/matplotlib",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 1,
        "Dependencies score {0=NA, 1,2,3,4,5}": 5,
        "Build/configure score {0=NA, 1,2,3,4,5}": 5,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
        "Operating system for the test": "Mac OS",
        "Build instructions/comments": "Very easy to setup and play with on MacOS thanks to the \"pip install visbeat\" and the examples.\n\n\n-- Aternative build on windows --\n\nWhile the paper is accompanied by a very nice website to explore all results, and effort has been made to make code execution easy, I still did not manage to run the code. The docker file was not working. This is due to matplotlib and imageio-ffmpeg not supporting anymore Python 2.7 (Python 2.7 is being discontinued as of January 2020 anyway) and I am not familiar with docker to fix it. Going back to manual installation of the libraries, it turns out that only imageio version 2.4.1 is able to execute the required  imageio.ffmpeg.download() command (and pip install imageio-ffmpeg does not work on Python 2.7). It also turns out that installing matplotlib for Python 2.7 is also difficult (ended up upgrading my pip and setuptools \"python -m pip install -U pip setuptools\" before the pip install matplotlib, despite Python 2.7 being a fresh install -- I otherwise had \"Command python setup.py egg_info failed with error code 1\"). I also had to add \"sys.path.insert(0, \"../visbeat/\")\" in the dancefer.py example file for python to search in the correct folder. Ultimately, running the TLDR example results in the error \"AssertionError: Wrong number of files for ./VisBeatAssets/VideoSources\\fDWFVI8PQOI\\Versions\\\\Original\\maxheight_240\\\\Snap! - Rhythm is a Dancer-fDWFVI8PQOI.mp4 Found: []\". Thinking this could be due to mixes of slashes and backslashes I fixed that in the code to no avail. I realized this file actually did not exist : instead, there was a file called \"Snap! - Rhythm is a Dancer-fDWFVI8PQOI.f133.mp4\" which did not have audio, and a \"Snap! - Rhythm is a Dancer-fDWFVI8PQOI.f140.m4a\" which was the audio file. I merged both in Premiere to create the desired \"Snap! - Rhythm is a Dancer-fDWFVI8PQOI.f133.mp4\" file, ran the code again. This time, this resulted in \"Issue loading audio for ./VisBeatAssets/VideoSources/fDWFVI8PQOI/Versions/Original/maxheight_240/Snap! - Rhythm is a Dancer-fDWFVI8PQOI.mp4\". I tried again with MPEG audio instead of AAC. This didn't work either. I gave up after a day.",
        "Misc. comments": "",
        "Software language": "Python"
    }
]