[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Style Transfer for Headshot Portraits",
        "DOI": "10.1145/2601097.2601137",
        "Year": 2014,
        "ACM Keywords": [
            "Computer vision",
            "Image manipulation"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": true,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "https://people.csail.mit.edu/yichangshih/portrait_web/2014_portrait_hires.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "https://people.csail.mit.edu/yichangshih/portrait_web/",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "http://groups.csail.mit.edu/graphics/face/tracker/release/zipfiles/code.zip",
        "Code URL2": "",
        "MD5 sum (for archives)": "96189EDEDD41476BEC17B8EBFD5FDBBC",
        "git/hg/svn commit hash or revision number": "",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "unspecified",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "Not applicable (python, Matlab..)",
        "Dependencies": "matlab / SIFTflow / iris / image_pyramids",
        "Does the software require paywall/proprietary software/material (boolean)?": true,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 1,
        "Dependencies score {0=NA, 1,2,3,4,5}": 5,
        "Build/configure score {0=NA, 1,2,3,4,5}": 5,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
        "Operating system for the test": "Windows",
        "Build instructions/comments": "To make it run on Windows with Matlab R2018a : comment out #define _LINUX_MAC (as instructed) in project.h of both mexDenseSIFT and mexDiscreteFlow.\nThen \"int\" should be changed to \"mwSize\" in Image.h of mexDenseSIFT (lines 1651 and 1760), in Matrix.cpp of mexDenseSIFT (lines 400 and 410), in Vector.h of mexDenseSIFT (lines 271 and 279), in mexDiscreteFlow.cpp of mexDiscreteFlow (lines 11, 17, 27 and 58), and in Image.h of mexDiscreteFlow  (lines 1452 and 1560).\nThe code then runs smoothly and produces a pixel wise replica of the images in supplementary materials (up to cropping: the images were adjusted to a 1000x1320 resolution with this exact aspect ratio, so padding had to be done on this input images). It produces 1480 results out of 99+3 images, which is slightly more than the supplemental material (91 test images ; the best result out of 5 were selected for each test image and each of 3 styles).\nHowever, the code relies on computed landmarks per image, stored in *.lm files, for which no code is provided. The paper indicates they come from [Saraghi et al. 2009]. It seems some code for this paper can be found here : https://github.com/kylemcdonald/FaceTracker/ , though I did not test if this code directly produces these .lm files.\nSimilarly, the GrabCut+Matting Laplacian to obtain the face segmentation is not provided, nor the griddata call for inpainting the bakground. The iris/highlights extraction that uses [Daugman 1993] and [Levin et al. 2008] is not provided as well, though there is a folder called \"iris\" containing some matlab code (it is unclear but it seems it only performs eye detection and does not correspond to this highlight extraction). The code test_eye_transfer.m does not work due to missing eye data.\nFor these reasons I slightly lowered the replicability score although the obtained results match those of the paper.",
        "Misc. comments": "",
        "Software language": "Matlab / Mathematica / .."
    }
]