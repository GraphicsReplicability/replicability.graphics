[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "A Compressive Light Field Projection System",
        "DOI": "10.1145/2601097.2601144",
        "Year": 2014,
        "ACM Keywords": [
            "Displays and imagers",
            "Computations on matrices",
            "Linear algebra algorithms",
            "Rendering",
            "Image manipulation",
            "Graphics systems and interfaces"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "http://web.media.mit.edu/~gordonw/CompressiveLightFieldProjector/CompressiveLightFieldProjector.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": true,
        "Arxiv/OAI page URL": "",
        "Project URL": "http://web.media.mit.edu/~gordonw/CompressiveLightFieldProjector/",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
        "Code URL": "http://web.media.mit.edu/~gordonw/CompressiveLightFieldProjector/supplement.zip",
        "Code URL2": "",
        "MD5 sum (for archives)": "cbf2b8f46f242eb6043d689a424fd1fe",
        "git/hg/svn commit hash or revision number": "",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "unspecified",
        "Are the code authors explicit? (boolean)": true,
        "Build/Configure mechanism": "Not applicable (python, Matlab..)",
        "Dependencies": "matlab",
        "Does the software require paywall/proprietary software/material (boolean)?": true,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 1,
        "Dependencies score {0=NA, 1,2,3,4,5}": 5,
        "Build/configure score {0=NA, 1,2,3,4,5}": 5,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
        "Operating system for the test": "Linux",
        "Build instructions/comments": "The provided code contains two examples:\n - HDR Super-resolution: reproduce similar results than Figure 11 in the paper\n - light field factorization: implement the nonnegative light field factorization (Eq.10 in the paper) further described in supplementary materials. \nThese two examples work out of the box and produce similar results than those found in the paper. \nHowever they cover only a subset of the proposed method, and specific hardware would be required for fully reproduce this work.",
        "Misc. comments": "",
        "Software language": "Matlab / Mathematica / .."
    }
]