[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Automatic Triage for a Photo Series",
        "DOI": "10.1145/2897824.2925908",
        "Year": 2016,
        "ACM Keywords": [
            "Computational photography",
            "Image processing",
            "Neural networks",
            "Content ranking"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": true,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "https://juew.org/publication/sig16-triage.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "https://gfx.cs.princeton.edu/pubs/Chang_2016_ATF/index.php",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "https://phototriage.cs.princeton.edu/data/vggsms.zip",
        "Code URL2": "https://phototriage.cs.princeton.edu/data/alexsms.zip",
        "MD5 sum (for archives)": "562b3802e8b454a46c44e324c9a68704",
        "git/hg/svn commit hash or revision number": "",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "unspecified",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "Not applicable (python, Matlab..)",
        "Dependencies": "caffe",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": true,
        "Nature of the data (pretrained model, LUT...)": "Training data",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": false,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 0,
        "Dependencies score {0=NA, 1,2,3,4,5}": 5,
        "Build/configure score {0=NA, 1,2,3,4,5}": 5,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
        "Operating system for the test": "Linux",
        "Build instructions/comments": "I managed to install all the dependencies and prepare the data using the provided scripts.\nI could also call the train.py script (requires 30GB of RAM), unfortunately after several hours of training, the script ended but didn't generate the file weights.hdf5. As such, I couldn't evaluate the network.\nNote that two models are provided by the authors online (https://phototriage.cs.princeton.edu/download.html), but there is no indication on how to use them in practice.",
        "Misc. comments": "",
        "Software language": "Other"
    }
]