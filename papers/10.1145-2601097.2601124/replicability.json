[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Flower Modeling via X-ray Computed Tomography",
        "DOI": "10.1145/2601097.2601124",
        "Year": 2014,
        "ACM Keywords": [
            "Computational geometry",
            "Shape modeling",
            "Graphics systems and interfaces",
            "Interest point and salient region detections",
            "Graphics input devices"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "http://takashiijiri.com/papers/ijiri_SIGGRAPH14_takaflower2.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "http://www2.riken.jp/brict/Ijiri/flowerctlib/index.html",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "http://www2.riken.jp/brict/Ijiri/flowerctlib/takaflower2.zip",
        "Code URL2": "",
        "MD5 sum (for archives)": "26a99a5449982ef6903ae1206f983676",
        "git/hg/svn commit hash or revision number": "",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "",
        "Software type {Code, Binary, Partial Code}": "Binary",
        "Code License (if any)": "unspecified",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "Not applicable (python, Matlab..), None",
        "Dependencies": "nvidia cg toolkit",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 1,
        "Dependencies score {0=NA, 1,2,3,4,5}": 5,
        "Build/configure score {0=NA, 1,2,3,4,5}": 5,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
        "Operating system for the test": "Windows",
        "Build instructions/comments": "The authors provide a user documentation to describe how to use their tool. They also mention a video on youtube (https://www.youtube.com/watch?v=yD_cSRJ7Gho) which allows to see how to use the GUI in practice (I couldn't use the tool without watching the video). \n\nNote that the tools depend on nvidia cgtoolkit, which is deprecated but still available for now (might not last for long).",
        "Misc. comments": "",
        "Software language": "Cannot answer"
    }
]