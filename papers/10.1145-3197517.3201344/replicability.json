[
    {
        "Variant name": "macOS",
        "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Singularity-constrained octahedral fields for hexahedral meshing",
        "DOI": "10.1145/3197517.3201344",
        "Year": 2018,
        "ACM Keywords": [
            "Mesh models",
            "Mesh geometry models",
            "Volumetric models"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "http://cgg.unibe.ch/media/papers/SCOF_SG2018.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "http://cgg.unibe.ch/publication/017/",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
        "Code URL": "https://graphics.rwth-aachen.de:9000/SCOF/SingularityConstrainedOctahedralFields",
        "Code URL2": "",
        "MD5 sum (for archives)": "",
        "git/hg/svn commit hash or revision number": "925bb7ed990ec3932f4b30d31740dd3c15a1127d",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "GPLv3",
        "Are the code authors explicit? (boolean)": true,
        "Build/Configure mechanism": "cmake",
        "Dependencies": "OpenVolumeMesh, GMM, Eigen (included during cmake)",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 1,
        "Dependencies score {0=NA, 1,2,3,4,5}": 5,
        "Build/configure score {0=NA, 1,2,3,4,5}": 5,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 2,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
        "Operating system for the test": "macOS catalina",
        "Build instructions/comments": "Easy build from the building instructions. The example works perfectly from the provdied input file (the project page also contains additional input data). The software outputs an openvolumemesh file (.ovmn ascii file) which can be seen using OpenFlipper https://www.graphics.rwth-aachen.de/software/openflipper/. Using this tool, I was able to visualize a tetrahedrization of the input geometry but not the hexahedral one.\n\nComment from the Disqus: I think the code output the frames as rotation matrices. Getting the hexahedral mesh is not part of the project.",
        "Misc. comments": "",
        "Software language": "c++"
    },
    {
        "Variant name": "main",
        "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
        "Is master variant (boolean)": false,
        "Is variant deprecated (boolean)": true,
        "Title": "Singularity-constrained octahedral fields for hexahedral meshing",
        "DOI": "10.1145/3197517.3201344",
        "Year": 2018,
        "ACM Keywords": [
            "Mesh models",
            "Mesh geometry models",
            "Volumetric models"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "https://people.csail.mit.edu/jsolomon/assets/singularity_constrained_octahedral.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "",
        "Code available (boolean)": false,
        "If code not available, pseudo-code available (boolean)": true,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": 2,
        "Code URL": "",
        "Code URL2": "",
        "MD5 sum (for archives)": "",
        "git/hg/svn commit hash or revision number": "",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "",
        "Software type {Code, Binary, Partial Code}": "",
        "Code License (if any)": "",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "",
        "Dependencies": "",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": false,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 0,
        "Dependencies score {0=NA, 1,2,3,4,5}": "",
        "Build/configure score {0=NA, 1,2,3,4,5}": "",
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
        "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
        "Operating system for the test": "",
        "Build instructions/comments": "",
        "Misc. comments": "",
        "Software language": ""
    }
]