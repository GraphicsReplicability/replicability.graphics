[
    {
        "Variant name": "Ubuntu 20.04",
        "Reviewer name": " Julie Digne <julie.digne@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Operating system for the test": "Ubuntu 20.04",
        "Title": "Instant Field-Aligned Meshes ",
        "DOI": "10.1145/2816795.2818078",
        "Year": 2015,
        "ACM Keywords": [
            "Shape Modeling",
            "Randomness, geometry and discrete structures"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "PDF URL": "https://igl.ethz.ch/projects/instant-meshes/instant-meshes-SA-2015-jakob-et-al.pdf",
        "Project URL": "https://igl.ethz.ch/projects/instant-meshes/",
        "Code available (boolean)": true,
        "Code URL": "https://github.com/wjakob/instant-meshes",
        "Code URL2": "",
        "MD5 sum (for archives)": "",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number": "7b3160864a2e1025af498c84cfed91cbfb613698",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "",
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
        "Software type {Code, Binary, Partial Code}": "Code",
        "Software language": "C++",
        "Code License (if any)": "Specific",
        "Are the code authors explicit? (boolean)": true,
        "Build/Configure mechanism": "CMake/Make",
        "Dependencies": "libxrandr-dev, libxinerama-dev, libxcursor-dev, libxi-dev ",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 2,
        "Dependencies score {0=NA, 1,2,3,4,5}": 5,
        "Build/configure score {0=NA, 1,2,3,4,5}": 5,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
        "Build instructions/comments": "The only error I could find is a segfault when closing the interface, which does not prevent using this code.",
        "Misc. comments": "The data and corresponding command lines used for all examples in the paper are available in the data zip file available on the project's webpage. The program can be used from command line or through an interface. No documentation explains the different parameters."
    }
]