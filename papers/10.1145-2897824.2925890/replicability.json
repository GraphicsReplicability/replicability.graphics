[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Bijective Maps from Simplicial Foliations",
        "DOI": "10.1145/2897824.2925890",
        "Year": 2016,
        "ACM Keywords": [
            "Mesh geometry models",
            "Volumetric models"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "https://www.graphics.rwth-aachen.de/media/papers/Campen2016_SimplicialFoliations_9vLSbPA.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "Project URL": "",
        "Code available (boolean)": false,
        "If code not available, pseudo-code available (boolean)": true,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": 3,
        "Code URL": "",
        "Code URL2": "",
        "MD5 sum (for archives)": "",
        "git/hg/svn commit hash or revision number": "",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "",
        "Software type {Code, Binary, Partial Code}": "",
        "Code License (if any)": "",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "",
        "Dependencies": "",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": false,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 0,
        "Dependencies score {0=NA, 1,2,3,4,5}": "",
        "Build/configure score {0=NA, 1,2,3,4,5}": "",
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
        "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
        "Operating system for the test": "",
        "Build instructions/comments": "",
        "Misc. comments": "The algorithm seems rather easy to implement (a couple of self-contained lines) but only produce the direction field. But hidden behind this simplicity are less trivial tricks (e.g., the paper mentions that the choice of the next free simplex is guided by a harmonic field, which requires solving a linear system ; the field is further processed by a Laplacian smoothing operator...), which is why I didn't rate the algorithm higher in simplicity.",
        "Software language": ""
    }
]