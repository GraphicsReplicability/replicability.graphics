[
    {
        "Variant name": "main",
        "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Operating system for the test": "Ubuntu 20.04",
        "Title": "Orienting point clouds with dipole propagation",
        "DOI": "10.1145/3450626.3459835",
        "Year": 2021,
        "ACM Keywords": [
            "Mesh models",
            "Point-based models",
            "Neural networks"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF on Arxiv or any openarchive initiatives (boolean)": true,
        "Arxiv/OAI page URL": "https://arxiv.org/abs/2105.01604",
        "PDF URL": "https://arxiv.org/pdf/2105.01604.pdf",
        "Project URL": "https://galmetzer.github.io/dipole-normal-prop/",
        "Code available (boolean)": true,
        "Code URL": "https://github.com/galmetzer/dipole-normal-prop",
        "Code URL2": "",
        "MD5 sum (for archives)": "",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number": "0887b893b153f4ce6b09e4dd485f9b042f15b706",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:1ace3985b7c1a75822d15501f0a98f97c5857f09;origin=https://github.com/galmetzer/dipole-normal-prop;visit=swh:1:snp:93fc6a5b4bb8e4ce305be51eb01d4cf02f3fdadc;anchor=swh:1:rev:0887b893b153f4ce6b09e4dd485f9b042f15b706",
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
        "Software type {Code, Binary, Partial Code}": "Code",
        "Software language": "python",
        "Code License (if any)": "no",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "NA",
        "Dependencies": "pytorch,pytorch-geometric,argparse,Open3D",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": false,
        "Nature of the data (pretrained model, LUT...)": "",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 1,
        "Dependencies score {0=NA, 1,2,3,4,5}": 5,
        "Build/configure score {0=NA, 1,2,3,4,5}": 0,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
        "Build instructions/comments": "I installed python 3.6, pytorch1.8 and pytorch-geometric with anaconda (instructions similar to script install_cu102.sh).",
        "Misc. comments": "I was able to run the program on several models: lion, hand, fandisk."
    }
]