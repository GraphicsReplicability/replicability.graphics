[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Bonneel",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Operating system for the test": "Windows",
        "Title": "General Virtual Sketching Framework for Vector Line Art",
        "DOI": "10.1145/3450626.3459833",
        "Year": 2021,
        "ACM Keywords": [
            "Parametric curve and surface models",
            "Neural networks"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": true,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF on Arxiv or any openarchive initiatives (boolean)": false,
        "Arxiv/OAI page URL": "",
        "PDF URL": "https://esslab.jp/publications/HaoranSIGGRAPH2021.pdf",
        "Project URL": "https://markmohr.github.io/virtual_sketching/",
        "Code available (boolean)": true,
        "Code URL": "https://github.com/MarkMoHR/virtual_sketching",
        "Code URL2": "",
        "MD5 sum (for archives)": "",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number": "958efe45a9120b9d467ba7701efba28c11e38f8f",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:958efe45a9120b9d467ba7701efba28c11e38f8f;origin=https://github.com/MarkMoHR/virtual_sketching;visit=swh:1:snp:cf2dcf4e7f4ce568119e6768da981adaa1305fcc",
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
        "Software type {Code, Binary, Partial Code}": "Code",
        "Software language": "Python",
        "Code License (if any)": "Apache License 2.0",
        "Are the code authors explicit? (boolean)": false,
        "Build/Configure mechanism": "",
        "Dependencies": "Tensorflow,opencv,pillow,scipy,gizeh",
        "Does the software require paywall/proprietary software/material (boolean)?": false,
        "Does the code need data (not examples) (boolean)": true,
        "Nature of the data (pretrained model, LUT...)": "pretrained models and training data (images) provided",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 2,
        "Dependencies score {0=NA, 1,2,3,4,5}": 5,
        "Build/configure score {0=NA, 1,2,3,4,5}": 5,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
        "Build instructions/comments": "Instructions are clear, dependencies were easily installed with pip. I only ran into a CudNN issue: \"E tensorflow/stream_executor/cuda/cuda_dnn.cc:319] Loaded runtime CuDNN library: 7.5.0 but source was compiled with: 7.6.0.\" which was easily fixed by reinstalling CudNN. \n The code produces many warnings, during initialization (e.g., \"WARNING:tensorflow:From test_vectorization.py:325: The name tf.global_variables_initializer is deprecated. Please use tf.compat.v1.global_variables_initializer instead.\"  or \"WARNING:tensorflow:From NeuralRenderer.py:69: The name tf.depth_to_space is deprecated. Please use tf.compat.v1.depth_to_space instead\" or \"WARNING:tensorflow:From VGG16.py:80: max_pooling2d (from tensorflow.python.layers.pooling) is deprecated and will be removed in a future version. Instructions for updating: Use keras.layers.MaxPooling2D instead.\") and runtime (e.g., \"test_vectorization.py:74: RuntimeWarning: invalid value encountered in true_divide\" or \"W tensorflow/core/common_runtime/colocation_graph.cc:983] Failed to place the graph without changing the devices of some resources. Some of the operations (that had to be colocated with resource generating operations) are not supported on the resources' devices. Current candidate devices are [  /job:localhost/replica:0/task:0/device:CPU:0].\"), but nothing that prevents from getting reasonable outputs.\n\n The deprecated functions might indicate that the code may not run in the near future.\n\nA small difference with the paper is acknowledged : the stroke thickness in the exported svg files is constant, while it is varying in the paper. While it precludes direct and exact comparisons, the effect of the varying stroke thickness in the paper is very subtle. ",
        "Misc. comments": ""
    }
]