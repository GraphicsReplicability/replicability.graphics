[
    {
        "Variant name": "main",
        "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
        "Is master variant (boolean)": true,
        "Is variant deprecated (boolean)": false,
        "Title": "Transient Attributes for High-Level Understanding and Editing of Outdoor Scenes",
        "DOI": "10.1145/2601097.2601101",
        "Year": 2014,
        "ACM Keywords": [
            "Video segmentation",
            "Scene understanding"
        ],
        "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
        "Co-authors from academia (boolean)": true,
        "Co-authors from industry (boolean)": false,
        "ACM Open Access (boolean)": false,
        "PDF on the authors' webpage / institution (boolean)": true,
        "PDF URL": "http://transattr.cs.brown.edu/files/TransientAttributes-paper.pdf",
        "PDF on Arxiv or any openarchive initiatives (boolean)": true,
        "Arxiv/OAI page URL": "",
        "Project URL": "http://transattr.cs.brown.edu/",
        "Code available (boolean)": true,
        "If code not available, pseudo-code available (boolean)": false,
        "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
        "Code URL": "http://transattr.cs.brown.edu/files/regressors_v1.2.tar",
        "Code URL2": "",
        "MD5 sum (for archives)": "01998723F8D4DE7B65B1172468A68F14",
        "git/hg/svn commit hash or revision number": "",
        "MD5 sum (for archives) URL2": "",
        "git/hg/svn commit hash or revision number URL2": "",
        "Software Heritage permalink": "",
        "Software type {Code, Binary, Partial Code}": "Code",
        "Code License (if any)": "custom",
        "Are the code authors explicit? (boolean)": true,
        "Build/Configure mechanism": "Not applicable (python, Matlab..)",
        "Dependencies": "matlab / libsvm",
        "Does the software require paywall/proprietary software/material (boolean)?": true,
        "Does the code need data (not examples) (boolean)": true,
        "Nature of the data (pretrained model, LUT...)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
        "License of the data": "",
        "Able to perform a replicability test (boolean)": true,
        "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
        "Documentation score {0=NA,1,2,3}": 2,
        "Dependencies score {0=NA, 1,2,3,4,5}": 1,
        "Build/configure score {0=NA, 1,2,3,4,5}": 1,
        "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
        "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
        "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
        "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
        "Operating system for the test": "Windows",
        "Build instructions/comments": "Regarding installation, I ran the code on Windows with Matlab R2018a amd Visual Studio in 64bits, so I had to adjust the code.\n* VLfeat\n- download the precompiled window binaries of vlfeat-0.9.18. Just put the win64 folder in vlfeat-0.9.18\\bin\n- comment line 315 of host.h in vlfeat\n- then compile vl feat using vl_compile and install, as per the instructions\n* VOC:\n- resize.cc, line 36: alphainfo ofs[len]; should be replaced by  alphainfo* ofs = new alphainfo[len];\n- resize.cc: insert after line 77: delete[] ofs;\n- resize.cc, line 70: bzero(dst, chan*width*dheight*sizeof(double)); => memset(dst, 0, chan*width*dheight*sizeof(double));\n- resize.cc, line 86: const int *sdims = mxGetDimensions(mxsrc); => const mwSize* sdims = mxGetDimensions(mxsrc);\n- resize.cc, line 95: int ddims[3]; => mwSize ddims[3];  (same for casts in lines 96, 97)\n- dt.cc, line 50: const int *dims = mxGetDimensions(prhs[0]);  => const mwSize *dims = mxGetDimensions(prhs[0]);\n- dt.cc: add in line 16: typedef int int32_t;\n- features.cc, line 38: const int *dims = mxGetDimensions(mximage); => const mwSize *dims = mxGetDimensions(mximage);\n- features.cc, line 54: int out[3]; => mwSize out[3];\n- compile.m, line 13: replace mex -O fconv.cc -o fconv by  mex -O fconv.cc -output fconv \n- fconv.cc, line 23: void *process(void *thread_arg)  => void process(void *thread_arg) \n- sparse2dense.m, line 60: idx = sub2ind([M, N], yi, xi) ; => idx = sub2ind([M, N], yi(:), xi(:));\n... and now it should work. Note however one trick: the code results in many messages displayed containing: \"Squared correlation coefficient = -nan(ind) (regression)\" .... and this is fine, though undocumented !\nWhile trying to \"fix\" this issue, having to recompile libSVM, it seemed the one precompiled didn't match the source code, and this resulted in additional errors: if you want to recompile libSVM, you need:\n- to edit the matlab file run_regressor_on_images.m, line 242, \tadd before svmpredict:\nmodel.sv_indices = [];\nmodel.nSV = length(model.SVs);\nsince the model structure has changed and now contains a field sv_indices.\n- then, line 244, [score,err] = svmpredict([0], K_input, model); should be changed to [score] = svmpredict([0], K_input, model); since the 2-parameter output doesn't exist anymore (there can be 1 or 3 parameters, not 2).\n- then in svm_model_matlab.c, line 228, replace:\n\tfor(i=0;i<num_of_fields;i++)\n\t\trhs[i] = mxGetFieldByNumber(matlab_struct, 0, i);\nby\n\trhs[0] = mxGetField(matlab_struct, 0, \"Parameters\");\n\trhs[1] = mxGetField(matlab_struct, 0, \"nr_class\");\n\trhs[2] = mxGetField(matlab_struct, 0, \"totalSV\"); \n\trhs[3] = mxGetField(matlab_struct, 0, \"rho\");\n\trhs[4] = mxGetField(matlab_struct, 0, \"Label\");\n\trhs[5] = mxGetField(matlab_struct, 0, \"sv_indices\");\n\trhs[6] = mxGetField(matlab_struct, 0, \"ProbA\");\n\trhs[7] = mxGetField(matlab_struct, 0, \"ProbB\");\n\trhs[8] = mxGetField(matlab_struct, 0, \"nSV\");\n\trhs[9] = mxGetField(matlab_struct, 0, \"sv_coef\");\n\trhs[10] = mxGetField(matlab_struct, 0, \"SVs\");\nThis is due to the ordering of the structure's field having changed. I found it cleared to index by name rather than indices to avoid such issues in the future. Debugging this took me most of the time, and was not absolutely necessary.\n\nFinally, I reduce the reproducibility score as the provided matlab script allows to predict the transient attributes and it seems to work, but no code is provided to perform the image editing based on changing transient attributes.",
        "Misc. comments": "",
        "Software language": "C/C++, Matlab , Mathematica , .."
    }
]