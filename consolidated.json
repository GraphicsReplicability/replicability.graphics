[
  [
    {
      "Variant name": "Ubuntu 20.04",
      "Reviewer name": " Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Instant Field-Aligned Meshes ",
      "DOI": "10.1145/2816795.2818078",
      "Year": 2015,
      "ACM Keywords": [
        "Shape Modeling",
        "Randomness, geometry and discrete structures"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://igl.ethz.ch/projects/instant-meshes/instant-meshes-SA-2015-jakob-et-al.pdf",
      "Project URL": "https://igl.ethz.ch/projects/instant-meshes/",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/wjakob/instant-meshes",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "7b3160864a2e1025af498c84cfed91cbfb613698",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++",
      "Code License (if any)": "Specific",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "CMake/Make",
      "Dependencies": "libxrandr-dev, libxinerama-dev, libxcursor-dev, libxi-dev ",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Build instructions/comments": "The only error I could find is a segfault when closing the interface, which does not prevent using this code.",
      "Misc. comments": "The data and corresponding command lines used for all examples in the paper are available in the data zip file available on the project's webpage. The program can be used from command line or through an interface. No documentation explains the different parameters."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Adaptive Nonlinearity for Collisions in Complex Rod Assemblies",
      "DOI": "10.1145/2601097.2601100",
      "Year": 2014,
      "ACM Keywords": [
        "Simulation by animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.columbia.edu/cg/adonis/adonis.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.columbia.edu/cg/adonis/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 2,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Transient Attributes for High-Level Understanding and Editing of Outdoor Scenes",
      "DOI": "10.1145/2601097.2601101",
      "Year": 2014,
      "ACM Keywords": [
        "Video segmentation",
        "Scene understanding"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://transattr.cs.brown.edu/files/TransientAttributes-paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://transattr.cs.brown.edu/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://transattr.cs.brown.edu/files/regressors_v1.2.tar",
      "Code URL2": "",
      "MD5 sum (for archives)": "01998723F8D4DE7B65B1172468A68F14",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "custom",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab / libsvm",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 1,
      "Build/configure score {0=NA, 1,2,3,4,5}": 1,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Regarding installation, I ran the code on Windows with Matlab R2018a amd Visual Studio in 64bits, so I had to adjust the code.\n* VLfeat\n- download the precompiled window binaries of vlfeat-0.9.18. Just put the win64 folder in vlfeat-0.9.18\\bin\n- comment line 315 of host.h in vlfeat\n- then compile vl feat using vl_compile and install, as per the instructions\n* VOC:\n- resize.cc, line 36: alphainfo ofs[len]; should be replaced by  alphainfo* ofs = new alphainfo[len];\n- resize.cc: insert after line 77: delete[] ofs;\n- resize.cc, line 70: bzero(dst, chan*width*dheight*sizeof(double)); => memset(dst, 0, chan*width*dheight*sizeof(double));\n- resize.cc, line 86: const int *sdims = mxGetDimensions(mxsrc); => const mwSize* sdims = mxGetDimensions(mxsrc);\n- resize.cc, line 95: int ddims[3]; => mwSize ddims[3];  (same for casts in lines 96, 97)\n- dt.cc, line 50: const int *dims = mxGetDimensions(prhs[0]);  => const mwSize *dims = mxGetDimensions(prhs[0]);\n- dt.cc: add in line 16: typedef int int32_t;\n- features.cc, line 38: const int *dims = mxGetDimensions(mximage); => const mwSize *dims = mxGetDimensions(mximage);\n- features.cc, line 54: int out[3]; => mwSize out[3];\n- compile.m, line 13: replace mex -O fconv.cc -o fconv by  mex -O fconv.cc -output fconv \n- fconv.cc, line 23: void *process(void *thread_arg)  => void process(void *thread_arg) \n- sparse2dense.m, line 60: idx = sub2ind([M, N], yi, xi) ; => idx = sub2ind([M, N], yi(:), xi(:));\n... and now it should work. Note however one trick: the code results in many messages displayed containing: \"Squared correlation coefficient = -nan(ind) (regression)\" .... and this is fine, though undocumented !\nWhile trying to \"fix\" this issue, having to recompile libSVM, it seemed the one precompiled didn't match the source code, and this resulted in additional errors: if you want to recompile libSVM, you need:\n- to edit the matlab file run_regressor_on_images.m, line 242, \tadd before svmpredict:\nmodel.sv_indices = [];\nmodel.nSV = length(model.SVs);\nsince the model structure has changed and now contains a field sv_indices.\n- then, line 244, [score,err] = svmpredict([0], K_input, model); should be changed to [score] = svmpredict([0], K_input, model); since the 2-parameter output doesn't exist anymore (there can be 1 or 3 parameters, not 2).\n- then in svm_model_matlab.c, line 228, replace:\n\tfor(i=0;i<num_of_fields;i++)\n\t\trhs[i] = mxGetFieldByNumber(matlab_struct, 0, i);\nby\n\trhs[0] = mxGetField(matlab_struct, 0, \"Parameters\");\n\trhs[1] = mxGetField(matlab_struct, 0, \"nr_class\");\n\trhs[2] = mxGetField(matlab_struct, 0, \"totalSV\"); \n\trhs[3] = mxGetField(matlab_struct, 0, \"rho\");\n\trhs[4] = mxGetField(matlab_struct, 0, \"Label\");\n\trhs[5] = mxGetField(matlab_struct, 0, \"sv_indices\");\n\trhs[6] = mxGetField(matlab_struct, 0, \"ProbA\");\n\trhs[7] = mxGetField(matlab_struct, 0, \"ProbB\");\n\trhs[8] = mxGetField(matlab_struct, 0, \"nSV\");\n\trhs[9] = mxGetField(matlab_struct, 0, \"sv_coef\");\n\trhs[10] = mxGetField(matlab_struct, 0, \"SVs\");\nThis is due to the ordering of the structure's field having changed. I found it cleared to index by name rather than indices to avoid such issues in the future. Debugging this took me most of the time, and was not absolutely necessary.\n\nFinally, I reduce the reproducibility score as the provided matlab script allows to predict the transient attributes and it seems to work, but no code is provided to perform the image editing based on changing transient attributes.",
      "Misc. comments": "",
      "Software language": "C/C++, Matlab , Mathematica , .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Topology-Varying 3D Shape Creation via Structural Blending",
      "DOI": "10.1145/2601097.2601102",
      "Year": 2014,
      "ACM Keywords": [
        "Shape modeling",
        "Randomness, geometry and discrete structures"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://kevinkaixu.net/papers/alhashim_sig14_topo.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://ialhashim.github.io/projects/topo/index.html",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/ialhashim/topo-blend",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "39b13612ebd645a65eda854771b517371f2f858a",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:39b13612ebd645a65eda854771b517371f2f858a;origin=https://github.com/ialhashim/topo-blend/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "IDE Project (VS,..)",
      "Dependencies": "Qt / GLee / starlib / Eigen",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 1,
      "Build/configure score {0=NA, 1,2,3,4,5}": 1,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "I updated the code so that it runs on current generation of libraries, that is, Qt 5.14 (with VS 2017) instead of Qt 4.2, Glew instead of GLee, and the last version of the StarLib dependency, which compiles with Qt 5. For that, a large number of steps need to be performed, which took me more than a day to investigate.\nFirst, building the last Starlib:mini. First, install Qt 5.14 (about 40GB), add the Eigen path to the include paths in starlib.pro: INCLUDEPATH += c:\\absolute_path_to_starlab\\core\\external\\eigen-3.2.5\\ and add the path to your Visual Studio cl.exe in the system path (typically, :\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\Hostx64\\x64).\nThen, go to a command prompt, and \"moc\" the following cpp files by executing:\nmoc ParametersFrame.h -o moc_ParametersFrame.cpp\nmoc RichParameterSet.h -o moc_RichParameterSet.cpp\nmoc RichParameterWidget.h -o moc_RichParameterWidget.cpp\nin the right folders.\nThen add moc_ParametersFrame.cpp, moc_RichParameterSet.cpp and moc_RichParameterWidget.cpp to the project for them to be compiled (folder core/starlib/Sources/parameters).\n\nThen you need to compile the old topo-blend project, and a number of edits need to be performed:\n* The Eigen constructor Vector3(float) doesn't exist. You thus need to edit:\n- CustomDrawObjects.h, line 332: glv(Vector3(center + ((Vector3d)n[i] * 0.2 * scale))); to glv(Vector3(center + (Vector3d(n[i].x(), n[i].y(), n[i].z()) * 0.2 * scale)));\n- CustomDrawObjects.h, line 299: Voxel corner (Vector3d((minimum - Vector3d(voxel_size)) / voxel_size)); to Voxel corner (Vector3d((minimum - Vector3d(voxel_size, voxel_size, voxel_size)) / voxel_size));\n- StructureNode.h, lines 48-49\n        inline Vector4d minCoord(){ return Vector4d(0.0); } to inline Vector4d minCoord(){ return Vector4d(0.0, 0.0, 0.0, 0.0); }\n        inline Vector4d maxCoord(){ return Vector4d(1.0); } to inline Vector4d maxCoord(){ return Vector4d(1.0, 1.0, 1.0, 1.0); }\n- nurbs_plugin.cpp, line 965: createSheet(Vector3d(0,0,0),Vector3d(0.01)); => createSheet(Vector3d(0,0,0),Vector3d(0.01, 0.01, 0.01));        \n\n* The file QtConcurrentRun is now in the folder QtConcurrent. You need to edit:\n#include <QtConcurrentRun> to #include <QtConcurrent/QtConcurrentRun>\nin GraphExplorer.cpp and Scheduler.cpp and SynthesisManager.cpp and DemoGlobal.cpp\n\n* For some reasons, colors like Qt::lightGray cannot be accessed. Changing them to the corresponding constants uglily but quickly fixes the error:\n- GraphModifyWidget.cpp, line 129: node->vis_property[\"color\"] = Qt::lightGray; change  Qt::lightGray; to the constant 6\n- GraphModifyWidget.cpp, lines 135 and 138: change Qt::red to 7, and Qt::green to 8\n- QuickGroup.cpp, lines 82 and 88: same thing.\n- QuickAlignment.cpp, lines 99, 104, 110, 113:  same thing. \n- landmarks_dialog.cpp, lines 248, 254, 257, 264, 270, 273, 289, 296, 306, 309, 677, 684, 693, 696: same things (use Qt::yellow=12)\n\n* A number of string literals are typed char* instead of const char* which produces compile errors.\n- StructureGlobal.h, line 532: static inline std::string exec(char* cmd) { should be changed to static inline std::string exec(const char* cmd) {\n- kmeans.h, line 296: void init_Mu( ExtMat &X, ExtMat &Mu, char* initname ) to void init_Mu( ExtMat &X, ExtMat &Mu, const char* initname )\n- PlyFile.cpp, line 41: char *type_names[] = to const char *type_names[] =\n- PlyFile.cpp, line 1457: int equal_strings(char *s1, char *s2) to int equal_strings(const char *s1, const char *s2), and change the definition in PlyFile.h\n- Ply.h, line 85: char *name; to QString name; and #include <QString>  (outside of the extern \"C\" !!)\n\n* stdext::hash_map is now obsolete and now part of the STL under the name \"unordered_map\". You thus need to change:\n- Geometry.h, line 278: hash_map<long long,int> edgeMap; to unordered_map<long long,int> edgeMap;\n- Hash.h, line 4: #include <hash_map> to #include <unordered_map>\n- Hash.h, line 5: using stdext::hash_map; to using std::unordered_map;\n- MultiGridOctreeData.h, lines 244, 310, 312: hash_map< long long , std::pair< RootInfo< OutputDensity > , int > >* vertexCount; to unordered_map<...>\n- Geometry.inl, line 325: same thing.\n- MultiGridOctreeData.inl, lines 2877, 3004, 3955, 3994, 4096, 4097: same thing. \n- resample/disjoint_set.h and topoblenderlib/disjoint_set.h, lines 6--8 : hash_map to unordered_map, hash_set to unordered_set, and #define STDEXT stdext to #define STDEXT std\n- resample/disjoint_set.h and topoblenderlib/disjoint_set.h, lines 58-59 hash_map => unordered_map\n\n* some includes are missing.\n- MultiGridOctreeData.h, add #include \"Octree.h\"\n- GraphEmbed.h, add #include \"StructureNode.h\"\n- ShapeRenderer.cpp, add #include \"qglviewer/manipulatedCameraFrame.h\" before the #include \"qglviewer/camera.h\"\n- GraphItem.cpp, Scene.cpp, BlendPathRenderer.cpp, also add #include \"qglviewer/manipulatedCameraFrame.h\" \n\n* other edits:\n- Task.h, line 9: add Q_OBJECT, before public\n- ProductEvaluators.h (in Eigen), lines 181--192: comment out the function. It produces an error otherwise, and should not impact much performances. \n- PlyFile.h, lines 148-149: remove extern char *my_alloc(); and replace #define myalloc(mem_size) my_alloc((mem_size), __LINE__, __FILE__) by #define myalloc(mem_size) malloc((mem_size))\n- ProgressItem.cpp, line 9: replace items = new QGraphicsItemGroup(0,scene); by items = new QGraphicsItemGroup(0); and then immediately call scene->addItem(items);\n- ProgressItem.cpp, lines 98-100:\n        spinner->translate( 0.5 * x,  0.5 * y);\n        spinner->rotate(10);\n        spinner->translate(-0.5 * x, -0.5 * y);\nshould be replace by \n                spinner->setTransform(QTransform().translate(0.5*x, 0.5*y).rotate(10).translate(-0.5*x, -0.5*y));\n- qglviewer/camera.h, line 334: move the definition of ManipulatedCameraFrame* frame() const { return frame_; } to the cpp file.\nthe .h file should look like ManipulatedCameraFrame* frame() const; \nand the camera.cpp file should have a function ManipulatedCameraFrame* Camera::frame() const { return frame_; }        \n- BlendPathRenderer.cpp, lines 176 and 213: replace event->posF(); by event->localPos();\n- poissonrecon.cpp: add #pragma once at the begining        \n- QtAwesome.cpp, line 15: remove Q_INIT_RESOURCE_EXTERN(QtAwesome), and put Q_INIT_RESOURCE(QtAwesome); in line 121, in QtAwesome's constructor (this may not be needed though)\n- ShapeRenderer.cpp, line 124: replace setRevolveAroundPoint by setPivotPoint (otherwise annoying warnings during execution, but this is not mandatory)\n- GraphItem.cpp, line 52: replace setRevolveAroundPoint by setPivotPoint\n- BlendPathRenderer.cpp, line 185: replace revolveAroundPoint by pivotPoint\n- Scene.cpp, line 243: replace revolveAroundPoint by pivotPoint\n- topo-blend.cpp, line 640: replace revolveAroundPoint by pivotPoint\n\n* Replacing GLee by a fresh Glew install.\n- GlSplatRendererLib/GlSplatRendererLib.pro: replace Glee by Glew\n- change all the #include of Glee to GL/glew.h.\n- topo_blend_widget.cpp: add an #include <GL/glew.h> before all other includes, otherwise glew complains that other gl libraries were included before glew.\n- GLSplat.cpp, line 16: put an #include <GL/glew.h> before all other includes\n- GLSplat.cpp,line 124 and 314, 321, 329, 407, 421: glActiveTexture should be changed to __glewActiveTexture\n- GLSplat.cpp,line 191 and 206: glFramebufferTexture2DEXT => __glewFramebufferTexture2D\n- GLSplat.cpp,line 250: glDrawBuffersARB => __glewDrawBuffersARB\n- GLSplat.cpp,line 345, 350, 355, 360: glMultiTexCoord2f => __glewMultiTexCoord2f\n- GLSplat.cpp,line 411: glBlendFuncSeparate => __glewBlendFuncSeparate\n- GLSplat.cpp,line 426: glPointParameterf => __glewPointParameterf\n- Shader.h, lines 103, 109, 112, 115, 118, 121, 124: glUniform*(glGetUniformLocation(...)) => __glewUniform*(__glewGetUniformLocation\n- demo.pro and topo-blend.pro: add LIBS += -lglew32 -LC:/[path-to-glew]/glew-2.1.0/lib/Release/x64 \n\n\n* toAscii does not exist anymore:\n- GLSplat.cpp, line 56, 102, 103: .toAscii() => .toLocal8Bit()\n- nurbs_plugin.cpp, line 426: toAscii() => toLatin1()\n- poissonrecon.cpp, line 18: toAscii() => toLatin1()\n\n\n* the way Qt plugins are handled has changed:\n- voxel_resampler.cpp, line 170: remove the line Q_EXPORT_PLUGIN\n- nurbs_plugin.cpp, line 1014: remove the line Q_EXPORT_PLUGIN\n- topo-blend.cpp, line 996: remove the line Q_EXPORT_PLUGIN\n- voxel_resampler.h, line 10: add Q_PLUGIN_METADATA(IID \"voxel_resampler\") \n- nurbs_plugin.h, line 25: add Q_PLUGIN_METADATA(IID \"nurbs_plugin\") \n- topo-blend.h, line 26: add Q_PLUGIN_METADATA(IID \"topoblend\") \n\n* __iob_func does not exist anymore:\n- voxel_resampler.cpp and nurbs_plugin.cpp: add at the begining: extern \"C\" { FILE __iob_func[3] = { *stdin,*stdout,*stderr }; }\n- voxel_resampler.pro and nurbs_plugin.pro: LIBS += -llegacy_stdio_definitions\n\n\nmake sure starlib.lib is present in the newly created release directory\n\n* Now going to linking errors:\n- Src/PoissonRecon.cpp, line 494, add \n    SimpleMesh s;\n    PoissonRecon::makeFromCloud(std::vector<std::vector<float>>(), std::vector<std::vector<float>>(), s, 0);\nand #include \"poissonrecon.h\" at the beginning. Otherwise the makeFromCloud symbol does not get exported if it is never used. This is a hack but works.\n- It is unclear if this is needed, but at some point I had to put  ../Reconstruction/poissonrecon.cpp in the compiled sources in the project file TopoBlenderLib.pro and add LIBS += $$PWD/../Reconstruction/$$CFG/lib/Reconstruction.lib at the end. It randomly changes between \"undefined reference to ...\" to \"duplicate reference to ...\", and changes if I compile in debug or release.\n\n* Now going to execution errors:\n- ShapesGallery.cpp, lines 94--10 : comment out everything. This relates to shadows, and crashes the program.\n- BlendPathRenderer.cpp, line 42 and 78, replace updateGL by paintGL. Otherwise the interpolated chair thumbnails are black. This is ackwards since updateGL is supposed to call paintGL though.\n- SynthesisManager.cpp, lines 971--973, comment out the inside of bufferCleanup(). This is a hack which can have side effects, but otherwise crashes.\n\n\nOn my machine, the code only runs within the Qt Creator environment, otherwise some VCRUNTIME140_APP.dll/MSVCP140.dll error appear.\nAlso the program crashes when exporting the mesh, during the rendering of the snapshot. However, it still outputs the obj mesh, so it is possible to use that mesh for comparison purpose. In practice, the authors have made available a demo compiled for Windows, and shows a better rendering output than the code compiled with the instructions above.\nWhile the interface is quite intuitive, my main issues are the lack of documentation, and most importantly, that I have no idea how the input data directories were generated and thus I have no clue as to how I would interpolate my own models. In particular, it seems that the provided xml files (likely?) contain the skeletonized and B-spline fits of the meshes, which is a non trivial step.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Temporal Frequency Probing for 5D Analysis of Global Light Transport",
      "DOI": "10.1145/2601097.2601103",
      "Year": 2014,
      "ACM Keywords": [
        "Epipolar geometry"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.toronto.edu/~motoole/papers/14.siggraph.temporalprobing.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.cmu.edu/~motoole2/temporalprobing.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "High-Order Similarity Relations in Radiative Transfer",
      "DOI": "10.1145/2601097.2601104",
      "Year": 2014,
      "ACM Keywords": [
        "3D imaging",
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.cornell.edu/projects/translucency/downloads/similarity-sg14.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.cornell.edu/projects/translucency/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://www.cs.cornell.edu/projects/translucency/downloads/similarity-sg14-code.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "3a8cf298ea1cace6c4fb8e9efca115c5",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "Matlab",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "To make it work with matlab 2019b, in ComputeAlteredParameters.m, change the matlab solver from 'active-set' to 'interior-point-convex' : line 119, opt = optimset('LargeScale', 'off',             'Algorithm', 'interior-point-convex', 'Display', 'off', 'MaxIter', 10000); method 'active-set' no longer exists. Reproduces figs 1 and 8 in the paper (file demo.m)",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Extending the graphics pipeline with adaptive, multi-rate shading",
      "DOI": "10.1145/2601097.2601105",
      "Year": 2014,
      "ACM Keywords": [
        "Graphics processors"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://graphics.cs.cmu.edu/projects/multirate/multirate.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://graphics.cs.cmu.edu/projects/multirate/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 4,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "Shader snippets very precisely describer.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Wire Mesh Design",
      "DOI": "10.1145/2601097.2601106",
      "Year": 2014,
      "ACM Keywords": [
        "Geometric topology",
        "Physical simulation",
        "Shape modeling",
        "Computer-aided design",
        "Architecture (buildings)"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.columbia.edu/~akash/wmd.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Interactive Tile-based Adaptive Sampling with User-Specified Fourier Spectra",
      "DOI": "10.1145/2601097.2601107",
      "Year": 2014,
      "ACM Keywords": [
        "Image and video acquisition"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.geometry.caltech.edu/pubs/WPCBS+14.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://perso.liris.cnrs.fr/david.coeurjolly/publications/dcoeurjo_SIGGRAPH14.html",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/polyhex-sampling/sampler",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "fb14743731354d53d6825ff378265739975da43c",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:847c65c8eb971efae13c11b17694a0fde26bf5f5;origin=https://github.com/polyhex-sampling/sampler/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "qt/boost/sdl/sdl_image/opengl/glsl",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Pre-trained models / Hardcoded data / lookup tables /...",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "The Natural-Constraint Representation of the Path Space for Efficient Light Transport Simulation",
      "DOI": "10.1145/2601097.2601108",
      "Year": 2014,
      "ACM Keywords": [
        "Ray tracing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://lightrig.de/publications/p2014/HSLT/HSLT_preprint.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://cg.ivd.kit.edu/english/HSLT.php",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 2,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The pseudo-code is clear but only partially covers the method described in the paper.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Organizing Heterogeneous Scene Collections through Contextual Focal Points",
      "DOI": "10.1145/2601097.2601109",
      "Year": 2014,
      "ACM Keywords": [
        "Computational geometry",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.sfu.ca/~cza68/papers/xu_sig14_focal.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://kevinkaixu.net/projects/focal.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 3,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Exploratory Font Selection Using Crowdsourced Attributes",
      "DOI": "10.1145/2601097.2601110",
      "Year": 2014,
      "ACM Keywords": [
        "Integrated and visual development environments"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.dgp.toronto.edu/~donovan/font/fontSelection.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.dgp.toronto.edu/~donovan/font/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://www.dgp.toronto.edu/~donovan/font/similarity.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "7eedee95a1c075297b94c3f5da2e0d76",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Creative Commons license:  Attribution-NonCommercial (CC BY-NC)",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Pre-trained models / Hardcoded data / lookup tables /...",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The code works out of the box for learning the similarity. However only the metric learning part is provided and it is not trivial to test it on two new fonts since it would require computing features for which no code is provided.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Functional Map Networks for Analyzing and Browsing Large Shape Collections",
      "DOI": "10.1145/2601097.2601111",
      "Year": 2014,
      "ACM Keywords": [
        "Computational geometry",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://cs233.stanford.edu/ReferencedPapers/cycleS_hwg-fmnaelsc-14.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Tangible and Modular Input Device for Character Articulation",
      "DOI": "10.1145/2601097.2601112",
      "Year": 2014,
      "ACM Keywords": [
        "Graphics input devices"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://igl.ethz.ch/projects/character-articulation-input-device/tangible-and-modular-input-device-for-character-articulation-siggraph-2014-jacobson-et-al.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://igl.ethz.ch/projects/character-articulation-input-device/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/alecjacobson/puppet",
      "Code URL2": "https://igl.ethz.ch/projects/character-articulation-input-device/tangible-and-modular-input-device-for-character-articulation-supplemental.zip",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:d05d3b3d6f8da238eac7344a332965a8f2489371;origin=https://github.com/alecjacobson/puppet/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "ftd2xx / libigl / boost / matlab / mosek / tetgen",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": true,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The paper is likely reproducible given the appropriate hardware. It includes a thorough open hardware description, and firmware/driver code, as well as the app to deform meshes.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Factored Axis-Aligned Filtering for Rendering Multiple Distribution Effects",
      "DOI": "10.1145/2601097.2601113",
      "Year": 2014,
      "ACM Keywords": [
        ""
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://cseweb.ucsd.edu/~ravir/aaf.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://graphics.berkeley.edu/papers/Udaymehta-FAA-2014-07/index.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "Project page returns 404 error",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Defending Continuous Collision Detection against Errors",
      "DOI": "10.1145/2601097.2601114",
      "Year": 2014,
      "ACM Keywords": [
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://web.cse.ohio-state.edu/~wang.3602/Wang-2014-DCC/Wang-2014-DCC.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 4,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Physics-Inspired Adaptive Fracture Refinement",
      "DOI": "10.1145/2601097.2601115",
      "Year": 2014,
      "ACM Keywords": [
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://web.cse.ohio-state.edu/~wang.3602/Chen-2014-PIA/Chen-2014-PIA.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Projective Dynamics: Fusing Constraint Projections for Fast Simulation",
      "DOI": "10.1145/2601097.2601116",
      "Year": 2014,
      "ACM Keywords": [
        "Animation",
        "Simulation by animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.utah.edu/~ladislav/bouaziz14projective/bouaziz14projective.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://lgg.epfl.ch/publications/2014/ProjectiveDynamics/index.php",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Shape2Pose: Human-Centric Shape Analysis",
      "DOI": "10.1145/2601097.2601117",
      "Year": 2014,
      "ACM Keywords": [
        "Randomness, geometry and discrete structures",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.vovakim.com/papers/14_SIGGRAPH_Shape2Pose.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://gfx.cs.princeton.edu/pubs/Kim_2014_SHS/index.php",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://web.archive.org/web/20160602231129/http://www.cs.princeton.edu/~vk/projects/Shape2Pose/doc_code.php",
      "Code URL2": "",
      "MD5 sum (for archives)": "4eb3b03f148ae49655469922df975b1e",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Makefile",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 5,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Could not fix what appear to be a scheduling bug: command line ./train.py small exp1_small examples/train_small.txt yielded \"[WARNING] Error executing: TempDir/exp1_small/points_even_1000/607.sh.\" due to a false assertion in ScheduleJob",
      "Misc. comments": "",
      "Software language": "C/C++, Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Pixie dust: graphics generated by levitated and animated objects in computational acoustic-potential field",
      "DOI": "10.1145/2601097.2601118",
      "Year": 2014,
      "ACM Keywords": [
        "Human-centered computing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://hoshistar81.jp/pdf/2014ToG.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "The Visual Microphone: Passive Recovery of Sound from Video",
      "DOI": "10.1145/2601097.2601119",
      "Year": 2014,
      "ACM Keywords": [
        "Scene understanding",
        "Video segmentation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://people.csail.mit.edu/mrub/papers/VisualMic_SIGGRAPH2014.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://people.csail.mit.edu/mrub/VisualMic/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://people.csail.mit.edu/abedavis/research/VisMic/VMSlim.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "05EF484CB2D16F8886F3DCE13187991B",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab / pyrTools",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The code partially implements the paper, as there is no support for low-framerate videos by exploiting rolling shutter.\nFor the remaining high fps videos, some of them did not work at all as they resulted in errors (randomly either \"Unable to read the file.\" or \"Dot indexing is not supported for variables of this type (l. 275 of VideoReader/read)) which I could not debug, perhaps due to some codec issue. This was the case of Chips2-2200Hz-Mary_MIDI-input.avi,Chips1-2200Hz-Mary_Had-input.avi and Plant-2200Hz-Mary_MIDI-input.avi).\nI successfully ran the code on Chips1-20000Hz-Mary_Had-input.avi. The script (which loads a file 'crabchipsRamp.avi' which I did not find) needs to be adapted so that dsamplefactor = 1 instead of 0.1, otherwise the result is almost pure noise, and of course samplingrate = 20000. **Beware** as well that the default nscales = 1 while the paper's results were produced with nscales = 4 (page 4 in the paper), although I didn't hear much difference in the result.\nWith these settings, I managed to recover a sound in about 1.5 hours on a good laptop, but the sound is much noisier (though still impressive!) than the result shown in the accompanying webpage. The resulting spectrogram can be found here: https://pasteboard.co/ILOq404.png\nand the corresponding sound here: https://voca.ro/3qdSKf1zGkX\nThe webpage states that the output were further processed with \"speech enhancement audio denoising\" (the paper indicates [Loizou 2005]), though I could not find code for that algorithm.\nSince matlab R2015, wavwrite has been replaced by audiowrite.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Cascaded Displays: Spatiotemporal Superresolution using Offset Pixel Layers",
      "DOI": "10.1145/2601097.2601120",
      "Year": 2014,
      "ACM Keywords": [
        "Rendering",
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://research.nvidia.com/sites/default/files/pubs/2014-08_Cascaded-Displays-Spatiotemporal/cascaded_displays.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://research.nvidia.com/publication/cascaded-displays-spatiotemporal-superresolution-using-offset-pixel-layers",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Learning Bicycle Stunts",
      "DOI": "10.1145/2601097.2601121",
      "Year": 2014,
      "ACM Keywords": [
        "Animation",
        "Simulation by animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.jie-tan.net/project/LearningBicycleStunts_preprint.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.jie-tan.net/project/learningBicycleStunts.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Eyeglasses-free Display: Towards Correcting Visual Aberrations with Computational Light Field Displays",
      "DOI": "10.1145/2601097.2601122",
      "Year": 2014,
      "ACM Keywords": [
        "Image manipulation",
        "Rendering",
        "Human computer interaction (HCI)",
        "Displays and imagers"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://graphics.berkeley.edu/papers/Huang-EFD-2014-08/Huang-EFD-2014-08.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://graphics.berkeley.edu/papers/Huang-EFD-2014-08/index.html",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://graphics.berkeley.edu/papers/Huang-EFD-2014-08/supplement.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "348d54a063230a4dbbd0493c3cd4f94d",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:      * Redistributions of source code must retain the above copyright       notice, this list of conditions and the following disclaimer.     * Redistributions in binary form must reproduce the above copyright       notice, this list of conditions and the following disclaimer in       the documentation and/or other materials provided with the distribution     * Neither the name of the University of British Columbia nor the names       of its contributors may be used to endorse or promote products derived       from this software without specific prior written permission.",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab/L-BFGS-B",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 5,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "I had to use another version of l-bfgs-b to make it work with Matlab2019b on linux. I found it at https://github.com/stephenbeckr/L-BFGS-B-C. Simply copied the lbfgsb_wrapper.mexa64  and all .m files from the downloaded L-BFGS-B-C/Matlab to LBFGSB/ directory in the provided code. Most images of the paper, and the code runs on it, however the hardware to actually see the result was not available.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Provably Good Planar Mappings",
      "DOI": "10.1145/2601097.2601123",
      "Year": 2014,
      "ACM Keywords": [
        "Randomness, geometry and discrete structures",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://inf.ethz.ch/personal/poranner/papers/provably.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://web.archive.org/web/20160514114145/http://www.wisdom.weizmann.ac.il/~roip/Code/PGPM.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "01C85DFFF3FC6BB7E1D5E99922F22741",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab / mosek / gui",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 2,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Important : the original link to the source code is broken, and I could only find a version stored by the WayBack Machine.\nTested on Matlab R2018a and a few things have changed since R2013a. Need to change all widthlimits to WidthLimits (same for height) ; set(gcf,'wvisualmode','auto') does not exist (I changed to RenderMode, but I am not sure this is the same). The addpath at the begining of Deform.m should be changed to the correct Mosek/Matlab version number.\nThe reason I do not put higher score to \"fixing bugs\" is that there still seems to be an image normalization issue which makes all images appear near white (I'd say in the range 253 to 255), perhaps due to the \"wvisualmode\" setting. I did not manage to fix it in a reasonable amount of time. However, the deformation pipeline seemed to work well, to the extent I could see the very bright result.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Flower Modeling via X-ray Computed Tomography",
      "DOI": "10.1145/2601097.2601124",
      "Year": 2014,
      "ACM Keywords": [
        "Computational geometry",
        "Shape modeling",
        "Graphics systems and interfaces",
        "Interest point and salient region detections",
        "Graphics input devices"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://takashiijiri.com/papers/ijiri_SIGGRAPH14_takaflower2.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www2.riken.jp/brict/Ijiri/flowerctlib/index.html",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://www2.riken.jp/brict/Ijiri/flowerctlib/takaflower2.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "26a99a5449982ef6903ae1206f983676",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..), None",
      "Dependencies": "nvidia cg toolkit",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The authors provide a user documentation to describe how to use their tool. They also mention a video on youtube (https://www.youtube.com/watch?v=yD_cSRJ7Gho) which allows to see how to use the GUI in practice (I couldn't use the tool without watching the video). \n\nNote that the tools depend on nvidia cgtoolkit, which is deprecated but still available for now (might not last for long).",
      "Misc. comments": "",
      "Software language": "Cannot answer"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "How do people edit light fields?",
      "DOI": "10.1145/2601097.2601125",
      "Year": 2014,
      "ACM Keywords": [
        "Graphics systems and interfaces",
        "Graphics input devices"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://giga.cps.unizar.es/~ajarabo/pubs/lfeiSIG14/downloads/Jarabo_sig14.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.inria.fr/hal-01060860/",
      "Project URL": "http://giga.cps.unizar.es/~ajarabo/pubs/lfeiSIG14/index.html",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://giga.cps.unizar.es/~ajarabo/pubs/lfeiSIG14/code/downloads/LFEI_v0.9.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "0DD8A6D4EAC744A68039D219252F6908",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "custom",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "IDE Project (VS,..)",
      "Dependencies": "Qt / QGlViewer / glew",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Images for experiment",
      "License of the data": "custom",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 2,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 2,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "I had numerous issues compiling and running the software in part due to outdated dependencies and to the lack of documentation.\nTo compile the code using a recent Qt (Qt 5.12.6, which needs to be installed and takes about 45GB!) and somewhat recent Visual Studio 2017 :\n- upgrade and retarget the VS project file (almost automatic)\n- change all includes that contain QtGui/QAction, QtGui/QApplication, QtGui/QButtonGroup, QtGui/QComboBox, QtGui/QDialog, QtGui/QHeaderView, QtGui/QLabel, QtGui/QPushButton in DialogQ6.h, Dialog7.h, and DialogQYear2.h, and change them to QtWidgets/QAction etc.\n- change the includes QFrame, QColorDialog and QFileDialog in qframemousepos.h, interface.cpp, main.cpp, lightfield.cpp and lightfieldViewer.cpp to QtWidgets/QFrame, QtWidgets/QColorDialog and QtWidgets/QFileDialog \n- add QT_DISABLE_DEPRECATED_BEFORE to the preprocessor directives due to some deprecated functions since Qt5\n- In lightfieldViewer.cpp, change all occurences of updateGL(); to update(); (changed since QGLViewer 2.7.0)\n- In lightfieldViewer's constructor, parameter should be a QOpenGLWidget*, not a QGLWidget*. The call to QGLViewer(parent,shareWidget) in the constructor can be safely changed to QGLViewer(parent).\n- You need to install libQGLViewer. In the config.h of QGLViewer, you may want to change #include <QOpenGLWidget> to QtWidgets/QOpenGLWidget (if you keep the search path for Qt includes unchanged, or otherwise add QtWidgets to the search path)\n- update the linked libraries in the project from Qt4 to Qt5 ; add Qt5Widgets.lib\n- do not use the glew32.lib provided but use a fresh glew, otherwise there are link errors\n- replace all hard coded instances of D:/Users/Adrian/Desktop/LF to the path where the lightfields were downloaded in main.cpp  (170 instances, don't do it manually)\n- In the downloaded lightfield dataset, rename Wanner to HCI, Kim_et_al to Disney, and Synthetic to Training. Move the TaskY2 folder within your lightfield data folder.\n- You can now run the software with the experiment number as a parameter. This parameter is an integer between 1 and 41. Some experiments cannot be run due to missing files (e.g., number 41 due to missing 11_Bike6.jpg or 31 due to missing 01_Couch.jpg).\nUltimately, once everything compiles and run, I managed to see the interface. Only in debug mode did I manage to see the lightfield show up. And in both release and debug mode, the interface seemed to be frozen : I could not complete a single task. I assume this is mostly due to changes in Qt over time.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Blending Liquids",
      "DOI": "10.1145/2601097.2601126",
      "Year": 2014,
      "ACM Keywords": [
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cc.gatech.edu/~turk/my_papers/blending_liquids.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Design and Fabrication by Example",
      "DOI": "10.1145/2601097.2601127",
      "Year": 2014,
      "ACM Keywords": [
        "Randomness, geometry and discrete structures",
        "Shape modeling",
        "Graphics recognition and interpretation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://fabbyexample.csail.mit.edu/fabByExample_preprint.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://fabbyexample.csail.mit.edu",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "Database of fabrication design available.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "True2Form: 3D Curve Networks from 2D Sketches via Selective Regularization",
      "DOI": "10.1145/2601097.2601128",
      "Year": 2014,
      "ACM Keywords": [
        "Randomness, geometry and discrete structures",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www-sop.inria.fr/reves/Basilic/2014/XCSBMS14/True2Form.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.inria.fr/hal-01060850",
      "Project URL": "http://www.cs.ubc.ca/labs/imager/tr/2014/True2Form/index.htm",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Pteromys: Interactive Design and Optimization of Free-formed Free-flight Model Airplanes",
      "DOI": "10.1145/2601097.2601129",
      "Year": 2014,
      "ACM Keywords": [
        "Geometric topology",
        "Physical simulation",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.nobuyuki-umetani.com/publication/2014_sigg_pteromys/2014_siggraph_GliderDesign.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.nobuyuki-umetani.com/publication/2014_sigg_pteromys/2014_siggraph_GliderDesign.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Point morphology",
      "DOI": "10.1145/2601097.2601130",
      "Year": 2014,
      "ACM Keywords": [
        ""
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://perso.telecom-paristech.fr/boubek/papers/PointMorphology/PointMorphology.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://perso.telecom-paristech.fr/boubek/papers/PointMorphology/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 2,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "Index Terms are not available\" in dl.acm",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "A Similarity Measure for Illustration Style",
      "DOI": "10.1145/2601097.2601131",
      "Year": 2014,
      "ACM Keywords": [
        "Computer graphics"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://webdiis.unizar.es/~elenag/projects/SIG2014_styleSim/downloads/GarcesSIG2014_preprint.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://webdiis.unizar.es/~elenag/projects/SIG2014_styleSim/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The project page contains the dataset and some resulting data (features and weights). Several html pages to display the results do not work anymore.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Adaptive Tearing and Cracking of Thin Sheets",
      "DOI": "10.1145/2601097.2601132",
      "Year": 2014,
      "ACM Keywords": [
        "Animation",
        "Simulation by animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://graphics.berkeley.edu/papers/Pfaff-ATC-2014-07/Pfaff-ATC-2014-07.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://graphics.berkeley.edu/papers/Pfaff-ATC-2014-07/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://graphics.eecs.berkeley.edu/site_root/resources/ARCSim/",
      "Code URL2": "http://graphics.eecs.berkeley.edu/site_root/resources/ARCSim/arcsim-0.3.1.tar.gz",
      "MD5 sum (for archives)": "3df8fdbd84b2d902baf30aabc02bef06",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Copyright (c)2013 The Regents of the University of California (Regents). (see LICENSE for details)",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Makefile",
      "Dependencies": "boost / libpng /BLAS/ freeglut / gfortran / lapack",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 2,
      "Build/configure score {0=NA, 1,2,3,4,5}": 1,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "I got a C++ issue when building the project on MacOS (after setting a -std=c+11 in the Makefile.mac):\n\nIn file included from src/auglag.cpp:27:\nIn file included from src/optimization.hpp:30:\nsrc/sparse.hpp:118:18: error: invalid operands to binary expression ('basic_ostream<char, std::__1::char_traits<char> >' and 'std::fstream' (aka 'basic_fstream<char>'))\n    file << \"}]\" << file;\n    ~~~~~~~~~~~~ ^  ~~~~\n\n. On both linux/macos, the TAUCS dependency cannot be built due to a missing \"intel cilk\" library which should be optional but the configure was not able to handle the issue (no  'taucs_config_tests.h' generated).",
      "Misc. comments": "The paper code seems to be included in the ARCSIM project. I wasn't able to check the part of the software containing it (few documentation and build issues).",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Capturing and Stylizing Hair for 3D Fabrication",
      "DOI": "10.1145/2601097.2601133",
      "Year": 2014,
      "ACM Keywords": [
        "Image and video acquisition",
        "Document scanning"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://studios.disneyresearch.com/wp-content/uploads/2019/03/Capturing-and-Stylizing-Hair-for-3D-Fabrication.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://studios.disneyresearch.com/2014/07/27/capturing-and-stylizing-hair-for-3d-fabrication/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Color Map Optimization for 3D Reconstruction with Consumer Depth Cameras",
      "DOI": "10.1145/2601097.2601134",
      "Year": 2014,
      "ACM Keywords": [
        "Computational geometry",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://vladlen.info/papers/color-mapping.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://vladlen.info/publications/color-map-optimization-for-3d-reconstruction-with-consumer-depth-cameras/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Intrinsic Video and Applications",
      "DOI": "10.1145/2601097.2601135",
      "Year": 2014,
      "ACM Keywords": [
        "Reflectance modeling",
        "Scene understanding",
        "Computer vision problems"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.elenagarces.es/pdf_papers/SIG2014_IntrinsicVideo.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://webdiis.unizar.es/~elenag/projects/SIG2014_intrinsicvideo/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 2,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Sensitivity-optimized Rigging for Example-based Real-time Clothing Synthesis",
      "DOI": "10.1145/2601097.2601136",
      "Year": 2014,
      "ACM Keywords": [
        "Animation",
        "Simulation by animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://www.researchgate.net/profile/Xiaogang_Jin2/publication/275482953_Sensitivity-optimized_Rigging_for_Example-based_Real-Time_Clothing_Synthesis/links/555957a808ae980ca6106a04/Sensitivity-optimized-Rigging-for-Example-based-Real-Time-Clothing-Synthesis.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.autodeskresearch.com/publications/realtimeclothing",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Style Transfer for Headshot Portraits",
      "DOI": "10.1145/2601097.2601137",
      "Year": 2014,
      "ACM Keywords": [
        "Computer vision",
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://people.csail.mit.edu/yichangshih/portrait_web/2014_portrait_hires.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://people.csail.mit.edu/yichangshih/portrait_web/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://groups.csail.mit.edu/graphics/face/tracker/release/zipfiles/code.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "96189EDEDD41476BEC17B8EBFD5FDBBC",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab / SIFTflow / iris / image_pyramids",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "To make it run on Windows with Matlab R2018a : comment out #define _LINUX_MAC (as instructed) in project.h of both mexDenseSIFT and mexDiscreteFlow.\nThen \"int\" should be changed to \"mwSize\" in Image.h of mexDenseSIFT (lines 1651 and 1760), in Matrix.cpp of mexDenseSIFT (lines 400 and 410), in Vector.h of mexDenseSIFT (lines 271 and 279), in mexDiscreteFlow.cpp of mexDiscreteFlow (lines 11, 17, 27 and 58), and in Image.h of mexDiscreteFlow  (lines 1452 and 1560).\nThe code then runs smoothly and produces a pixel wise replica of the images in supplementary materials (up to cropping: the images were adjusted to a 1000x1320 resolution with this exact aspect ratio, so padding had to be done on this input images). It produces 1480 results out of 99+3 images, which is slightly more than the supplemental material (91 test images ; the best result out of 5 were selected for each test image and each of 3 styles).\nHowever, the code relies on computed landmarks per image, stored in *.lm files, for which no code is provided. The paper indicates they come from [Saraghi et al. 2009]. It seems some code for this paper can be found here : https://github.com/kylemcdonald/FaceTracker/ , though I did not test if this code directly produces these .lm files.\nSimilarly, the GrabCut+Matting Laplacian to obtain the face segmentation is not provided, nor the griddata call for inpainting the bakground. The iris/highlights extraction that uses [Daugman 1993] and [Levin et al. 2008] is not provided as well, though there is a folder called \"iris\" containing some matlab code (it is unclear but it seems it only performs eye detection and does not correspond to this highlight extraction). The code test_eye_transfer.m does not work due to missing eye data.\nFor these reasons I slightly lowered the replicability score although the obtained results match those of the paper.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Multiplexed Metropolis Light Transport",
      "DOI": "10.1145/2601097.2601138",
      "Year": 2014,
      "ACM Keywords": [
        "Ray tracing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://www.ci.i.u-tokyo.ac.jp/~hachisuka/mmlt.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://www.ci.i.u-tokyo.ac.jp/~hachisuka/smallmmlt.cpp",
      "Code URL2": "",
      "MD5 sum (for archives)": "dc9397b18b3737ac0d69532ff54f1ae7",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "C++ Compiler",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Ubuntu 18.04.4 LTS",
      "Build instructions/comments": "The code is provided as a single file. There is no build/run instructions, however I could compile by calling `g++ smallmmlt.cpp` (I used gcc 7.5.0), and ran it as `./a.out`. By default, the renderer runs for 3 minutes (see smallmmlt.cpp:525). It generates a ppm images with a cornell box contained 3 spheres (not in the paper, but similar to Figure 8). The 3d scene is defined in code, and thus adapting to other contexts might require some development effort.",
      "Misc. comments": "Another (unofficial) implementation can be found in EDXRay (https://github.com/behindthepixels/EDXRay/commit/3af2fb67237de651e6ac6877ac07acb38b9fafd5)"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "A Comprehensive Framework for Rendering Layered Materials",
      "DOI": "10.1145/2601097.2601139",
      "Year": 2014,
      "ACM Keywords": [
        "Texturing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.cornell.edu/projects/layered-sg14/layered.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.cornell.edu/projects/layered-sg14/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://www.mitsuba-renderer.org/repos/mitsuba.git",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "26355676fa45feb5acca3f42b023a055ad2bb7e3",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:181f97e051f8a768b9287883d652651001778eed;origin=https://www.mitsuba-renderer.org/repos/mitsuba.git/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "GPL",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "SCONS",
      "Dependencies": "qt4/libpng/fftw3/libpcrecpp/eigen3/openexr/boost/xerces/ilmbase/jpeg/glewmx/libxxf86vm",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 3,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "layered\" branch of mitsuba: Compiling went fine provided CXXflags in config.py are modified from  -std=c++11 into -std=gnu++11 (ubuntu 18.04) . The branch was successfully linked against qt4 . However the interface kept crashing (failed assertion). No example scene is given so I was not able to reproduce the results. There seems to be another implementation of this work called layerlab. But this mitsuba code was the one referenced from the project's webpage.",
      "Misc. comments": "",
      "Software language": "C/C++, Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "A Reflectance Display",
      "DOI": "10.1145/2601097.2601140",
      "Year": 2014,
      "ACM Keywords": [
        "Rendering",
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://vision.seas.harvard.edu/reflectance_display/reflectance_display.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://vision.seas.harvard.edu/reflectance_display/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Pinlight Displays: Wide Field of View Augmented Reality Eyeglasses using Defocused Point Light Sources",
      "DOI": "10.1145/2601097.2601141",
      "Year": 2014,
      "ACM Keywords": [
        "Displays and imagers",
        "Mixed / augmented reality",
        "Virtual reality",
        "Graphics systems and interfaces"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.unc.edu/%7Emaimone/media/pinlights_siggraph_2014.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://pinlights.info/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "ACM keywords 2,3,4 are grey",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Controlling Singular Values with Semidefinite Programming",
      "DOI": "10.1145/2601097.2601142",
      "Year": 2014,
      "ACM Keywords": [
        "Computational geometry",
        "Design and analysis of algorithms",
        "Shape modeling",
        "Mathematical optimization"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://sites.fas.harvard.edu/~cs277/papers/svcont.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://shaharkov.github.io/ContSingVal.html",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/shaharkov/ContSingVal",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "7260397ef8bd663bb4b9fd61c7c1ab2ebc7a91e0",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:5937f7a0fe91e98342be9c92d4d9756364b6c3e1;origin=https://github.com/shaharkov/ContSingVal/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "provided as-is for academic use only and without any guarantees",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "yalmip/mosek/matlab",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The provided code works equivalently with recommended or more recent dependencies (yalm R20190425 and mosek 9.1). The library addaxis, provided with the code, needs a simple fix (replace 'colorord' by 'ColorOrder' in addaxis/aa_splot.m).\nFigures 2 (exampleBarDeformation) and 1 (exampleExtremalQuasiConformal) can be partly reproduced.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Computational Design of Linkage-Based Characters",
      "DOI": "10.1145/2601097.2601143",
      "Year": 2014,
      "ACM Keywords": [
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://crl.ethz.ch/papers/SIG2014_linkages.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.ri.cmu.edu/publications/computational-design-of-linkage-based-characters/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "A Compressive Light Field Projection System",
      "DOI": "10.1145/2601097.2601144",
      "Year": 2014,
      "ACM Keywords": [
        "Displays and imagers",
        "Computations on matrices",
        "Linear algebra algorithms",
        "Rendering",
        "Image manipulation",
        "Graphics systems and interfaces"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://web.media.mit.edu/~gordonw/CompressiveLightFieldProjector/CompressiveLightFieldProjector.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://web.media.mit.edu/~gordonw/CompressiveLightFieldProjector/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "http://web.media.mit.edu/~gordonw/CompressiveLightFieldProjector/supplement.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "cbf2b8f46f242eb6043d689a424fd1fe",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The provided code contains two examples:\n - HDR Super-resolution: reproduce similar results than Figure 11 in the paper\n - light field factorization: implement the nonnegative light field factorization (Eq.10 in the paper) further described in supplementary materials. \nThese two examples work out of the box and produce similar results than those found in the paper. \nHowever they cover only a subset of the proposed method, and specific hardware would be required for fully reproduce this work.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "AverageExplorer: interactive exploration and alignment of visual data collections",
      "DOI": "10.1145/2601097.2601145",
      "Year": 2014,
      "ACM Keywords": [
        "Computer Graphics",
        "Graphics recognition and interpretation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://people.csail.mit.edu/junyanz/projects/averageExplorer/averageExplorer.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://people.csail.mit.edu/junyanz/projects/averageExplorer/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Multimaterial Mesh-Based Surface Tracking",
      "DOI": "10.1145/2601097.2601146",
      "Year": 2014,
      "ACM Keywords": [
        "Simulation by animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.columbia.edu/cg/multitracker/multitracker.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.columbia.edu/cg/multitracker/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/fangda-cu/MultiTracker",
      "Code URL2": "http://www.cs.columbia.edu/cg/multitracker/code/",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "7719b2fd81ed3c17419b73b60aeb71b7fd83840c",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:ecbf8bddbafaedabe38ac1645a33e2d637fed7ae;origin=https://github.com/fangda-cu/MultiTracker/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Copyright (c) 2014, Fang Da (Columbia University), Christopher Batty  (University of Waterloo) and Eitan Grinspun (Columbia University) All rights reserved.",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "Eigen/blas/lapack",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Mac OS",
      "Build instructions/comments": "No issue to build the code and run the examples. I had to look at the code to understand the keys for the viewer but it was quite explicit. Almost all figures have an example file to easily reproduce the results.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "From capture to simulation: connecting forward and inverse problems in fluids",
      "DOI": "10.1145/2601097.2601147",
      "Year": 2014,
      "ACM Keywords": [
        "Image manipulation",
        "Document scanning",
        "Graphics recognition and interpretation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.ubc.ca/labs/imager/tr/2014/FromCaptureToSimulation/FromCaptureToSimulation_Gregson2014.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.ubc.ca/labs/imager/tr/2014/FromCaptureToSimulation/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 4,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Modeling and Optimizing Eye Vergence Response to Stereoscopic Cuts",
      "DOI": "10.1145/2601097.2601148",
      "Year": 2014,
      "ACM Keywords": [
        "Rendering",
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://resources.mpi-inf.mpg.de/VergenceModel/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://resources.mpi-inf.mpg.de/VergenceModel/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "Matlab code is provided: however, the code only allows to browse results (similarly to a website) rather than allowing to produce results (which would be difficult in this case of experimental paper).",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "A Constructive Theory of Sampling for Image Synthesis using Reproducing Kernel Bases",
      "DOI": "10.1145/2601097.2601149",
      "Year": 2014,
      "ACM Keywords": [
        "Reflectance modeling",
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://cybertron.cg.tu-berlin.de/lessig/projects/cosalt/data/cosalt.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://cybertron.cg.tu-berlin.de/lessig/projects/cosalt/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 2,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "Technically there is mathematica, matlab and python code, but they respectively allow to demonstrate formulas in the paper and correspond to a tutorial on reproducing kernel bases.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Simulating and compensating changes in appearance between day and night vision",
      "DOI": "10.1145/2601097.2601150",
      "Year": 2014,
      "ACM Keywords": [
        "Rendering",
        "Image manipulation",
        "Computer vision"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://luminance-retargeting.bangor.ac.uk/wanat14lum_retargeting.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Unified Particle Physics for Real-Time Applications",
      "DOI": "10.1145/2601097.2601152",
      "Year": 2014,
      "ACM Keywords": [
        "Geometric topology",
        "Physical simulation",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://mmacklin.com/uppfrta_preprint.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://blog.mmacklin.com/project/flex/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 3,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Bridging the Gap: Automated Steady Scaffoldings for 3D Printing",
      "DOI": "10.1145/2601097.2601153",
      "Year": 2014,
      "ACM Keywords": [
        "Computational geometry",
        "Shape modeling",
        "Graphics recognition and interpretation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.loria.fr/~jdumas/files/papers/scaffoldings/bridging-the-gap.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Robust Field-Aligned Global Parametrization",
      "DOI": "10.1145/2601097.2601154",
      "Year": 2014,
      "ACM Keywords": [
        "Randomness, geometry and discrete structures",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.ashishmyles.com/projects/files/14fieldtrace.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://vcg.isti.cnr.it/Publications/2014/MPZ14/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Rendering Glints on High-Resolution Normal-Mapped Specular Surfaces",
      "DOI": "10.1145/2601097.2601155",
      "Year": 2014,
      "ACM Keywords": [
        "Texturing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://rgl.s3.eu-central-1.amazonaws.com/media/papers/Yan2014Rendering.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://rgl.epfl.ch/publications/Yan2014Rendering",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Animating Deformable Objects using Sparse Spacetime Constraints",
      "DOI": "10.1145/2601097.2601156",
      "Year": 2014,
      "ACM Keywords": [
        "Geometric topology",
        "Physical simulation",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://graphics.tudelft.nl/~klaus/papers/sparseSpacetimeConstraints.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Spin-It: Optimizing Moment of Inertia for Spinnable Objects",
      "DOI": "10.1145/2601097.2601157",
      "Year": 2014,
      "ACM Keywords": [
        "Geometric topology",
        "Physical simulation",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://igl.ethz.ch/projects/spin-it/SpinItPaper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://igl.ethz.ch/projects/spin-it/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 2,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "Pseudo-code is given un supplementary material to evaluate mass properties of triangulated solid.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Lifted Bijections for Low Distortion Surface Mappings",
      "DOI": "10.1145/2601097.2601158",
      "Year": 2014,
      "ACM Keywords": [
        "Computational geometry",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://noamaig.github.io/html/projects/lifted/lifted.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 2,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The pseudo-codes given in the paper cover only sub-parts of the approach, and one might need some effort to replicate this work.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Estimating Image Depth Using Shape Collections",
      "DOI": "10.1145/2601097.2601159",
      "Year": 2014,
      "ACM Keywords": [
        "Randomness, geometry and discrete structures",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://ai.stanford.edu/~haosu/SIG14/imageShapeNet.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://ai.stanford.edu/~haosu/SIG14/depthtransfer.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The 2014 paper project page mentions two followup papers (sigasia 2015 and ICCV 2015) that may contain some relevant code if we want to reimplement the paper (without more details). We have decided not to evaluate the replicability of the paper.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Subspace Clothing Simulation Using Adaptive Bases",
      "DOI": "10.1145/2601097.2601160",
      "Year": 2014,
      "ACM Keywords": [
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://graphics.pixar.com/library/SubspaceClothing/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://graphics.pixar.com/library/SubspaceClothing/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Robust and Accurate Skeletal Rigging from Mesh Sequences",
      "DOI": "10.1145/2601097.2601161",
      "Year": 2014,
      "ACM Keywords": [
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://binh.graphics/papers/2014s-ske/skeleton-draft.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://binh.graphics/papers/2014s-ske/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://graphics.cs.uh.edu/ble/papers/2014s-ske/SkeRig_v1.0.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "84D4C8FC1CC75475B167A0B24D77714D",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "None",
      "Dependencies": "windows",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 2,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The provided binary is shipped with 1 example input (an animated cat model). It produces a text file as output that contains a skeleton, bone transformations and skinning weights. Without an appropriate tool to visualize the animation produced by this text file (in non standard format, though explained in the readme -- I would need to implement one), I cannot check how much the results match the ones shown in the paper.",
      "Misc. comments": "",
      "Software language": "Cannot answer"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Inverse Procedural Modeling of Facade Layouts",
      "DOI": "10.1145/2601097.2601162",
      "Year": 2014,
      "ACM Keywords": [
        "Computer graphics",
        "Graphics recognition and interpretation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://peterwonka.net/Publications/pdfs/2014.SG.Wu.InverseFacadeModeling.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1308.0419",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Floating Scale Surface Reconstruction",
      "DOI": "10.1145/2601097.2601163",
      "Year": 2014,
      "ACM Keywords": [
        "Randomness, geometry and discrete structures",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.gcc.tu-darmstadt.de/media/gcc/papers/Fuhrmann-2014-FSS.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.gcc.tu-darmstadt.de/home/proj/fssr/index.en.jsp",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/simonfuhrmann/mve",
      "Code URL2": "https://github.com/andre-schulz/mve",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "30e5ba73556ec6d9d23df2147e7626c31bdc84a7",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:30e5ba73556ec6d9d23df2147e7626c31bdc84a7;origin=https://github.com/simonfuhrmann/mve/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "BSD",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "glew / zlib / libpng / libjpeg-turbo / libtiff / gtest / Qt5",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Contained in the MVE library. Very easy to build on windows using the CMAKE branch of the github project, especially given the number of dependencies (all shipped in a 3rd party directory). The dependencies I listed are the one required by the entire MVE library, but they may not be all used by the fssrecon app.\nIt was long to compile all dependencies, but it worked out of the box without any effort. A single very simple example (corresponding to Fig. 2 : four overlapping planar patches) is provided so it is hard to tell how well it works on reasonably complex cases.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Computing layouts with deformable templates",
      "DOI": "10.1145/2601097.2601164",
      "Year": 2014,
      "ACM Keywords": [
        "Computational geometry",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://peterwonka.net/Publications/pdfs/2014.SG.Peng.Computing_Layouts_with_Deformable_Templates.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Real-Time Non-Rigid Reconstruction Using an RGB-D Camera",
      "DOI": "10.1145/2601097.2601165",
      "Year": 2014,
      "ACM Keywords": [
        "Image manipulation",
        "Image and video acquisition",
        "Document scanning",
        "Graphics recognition and interpretation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://graphics.stanford.edu/~mdfisher/papers/deformables.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.microsoft.com/en-us/research/publication/real-time-non-rigid-reconstruction-using-an-rgb-d-camera-2/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Designing Inflatable Structures",
      "DOI": "10.1145/2601097.2601166",
      "Year": 2014,
      "ACM Keywords": [
        "Geometric topology",
        "Physical simulation",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://s3-us-west-1.amazonaws.com/disneyresearch/wp-content/uploads/20140808191506/Project_DesigningInflatableStructures_SIGGRAPH14_paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://la.disneyresearch.com/publication/designing-inflatable-structures/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Detailed Water with Coarse Grids: Combining Surface Meshes and Adaptive Discontinuous Galerkin",
      "DOI": "10.1145/2601097.2601167",
      "Year": 2014,
      "ACM Keywords": [
        "Physical simulation",
        "Shape modeling",
        "Geometric topology"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.639.8920&rep=rep1&type=pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Build-to-Last: Strength to Weight 3D Printed Objects",
      "DOI": "10.1145/2601097.2601168",
      "Year": 2014,
      "ACM Keywords": [
        "Parametric curve and surface models",
        "Volumetric models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://homes.cs.washington.edu/~haisen/BuildtoLast/3DP_SIG2014.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://homes.cs.washington.edu/~haisen/BuildtoLast/index.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Vector Graphics Complexes",
      "DOI": "10.1145/2601097.2601169",
      "Year": 2014,
      "ACM Keywords": [
        "Graphics systems and interfaces",
        "Parametric curve and surface models",
        "Point-based models",
        "Volumetric models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.borisdalstein.com/research/vgc/vgc.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.borisdalstein.com/research/vgc/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/dalboris/vpaint",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "bd1cc30cbcb3ca7afba8c7407616a9ec9bf54785",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:a0654bc262f8965cf1ea3cf769789b92cfab6a0d;origin=https://github.com/dalboris/vpaint/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Apache License Version 2.0",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Makefile, qmake",
      "Dependencies": "QT5",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Bugfix: had to comment out  a line in GLUtils.cpp: //format.setColorSpace(QSurfaceFormat::DefaultColorSpace);",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Interactive Manipulation of Large-Scale Crowd Animation",
      "DOI": "10.1145/2601097.2601170",
      "Year": 2014,
      "ACM Keywords": [
        "Virtual reality"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://mrl.snu.ac.kr/research/ProjectCrowdEditing/crowd_editing_preprint.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://mrl.snu.ac.kr/research/ProjectCrowdEditing/CrowdEditing.htm",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Smoke Rings from Smoke",
      "DOI": "10.1145/2601097.2601171",
      "Year": 2014,
      "ACM Keywords": [
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://multires.caltech.edu/pubs/Smoke.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://multires.caltech.edu/pubs/SRfS/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://dl.acm.org/ft_gateway.cfm?id=2601171&type=zip&path=%2F2610000%2F2601171%2Fsupp%2Fa140%2Dweismann%2Ezip&supp=1&dwn=1",
      "Code URL2": "",
      "MD5 sum (for archives)": "c2e4fb85aed6e26d56f80ebae737612c",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "This implementation is provided by Albert Chern and comes with no warranty of fitness or performance either explicit or implied. Use for commercial purposes is explicitly prohibited without prior permission from the authors.",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Code works out of the box. Readme clearly states it misses some features and is less efficient. Adaptation to octave is very easy. It only requires commenting out two lines (lines 23-24 in PlotFilaments.m: l23: camproj perspective; l24 cameratoolbar).",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Continuous Projection for Fast L1 Reconstruction",
      "DOI": "10.1145/2601097.2601172",
      "Year": 2014,
      "ACM Keywords": [
        "Randomness, geometry and discrete structures",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cg.tuwien.ac.at/research/publications/2014/preiner2014clop/preiner2014clop-paper_small.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.cg.tuwien.ac.at/research/publications/2014/preiner2014clop/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://users.cg.tuwien.ac.at/preiner/projects/clop/code/clopdemo-09.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "840DE5F6A7F5BA87399F4F2AD94D13EC",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "custom",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "IDE Project (VS,..)",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 2,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Easy to compile with VS2017 using the VS2013 project provided and slight changes (adding preprocessor directive _SILENCE_STDEXT_HASH_DEPRECATION_WARNINGS ).\nHowever, it is only a partial reference implementation of the paper. While the paper sells speed over concurrent approaches, the reference monothreaded CPU implementation does not allow to reproduce the timings given in the paper. The implementation also does not reconstruct the surfaces (only the point projection is implemented) so the surfaces shown in the paper cannot be reproduced from this implementation. The implementation is also missing the normal projection step.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Boxelization: Folding 3D Objects into Boxes",
      "DOI": "10.1145/2601097.2601173",
      "Year": 2014,
      "ACM Keywords": [
        "Randomness, geometry and discrete structures",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://pdfs.semanticscholar.org/0048/c96e65f80803f587b5298e32b59e669847fb.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://la.disneyresearch.com/publication/boxelization-folding-3d-objects-into-boxes-2/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Darkroom: Compiling High-Level Image Processing Code into Hardware Pipelines",
      "DOI": "10.1145/2601097.2601174",
      "Year": 2014,
      "ACM Keywords": [
        "Logic Design",
        "Hardware Architecture",
        "Graphics Processors",
        "Methodology and Techniques—Languages",
        "General—Image Processing Software"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://graphics.stanford.edu/papers/darkroom14/darkroom14.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://graphics.stanford.edu/papers/darkroom14/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://darkroom-lang.org",
      "Code URL2": "http://github.com/jameshegarty/darkroom",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "ffc3bf21fa008d280bdfd00661ba88caafa7fab7",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Commandline instructions in README",
      "Dependencies": "Terra",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Mac OS",
      "Build instructions/comments": "I've installed the 2015-08-03 version of terra and tried to compile the examples but all examples failed due to some #include \"stdio.h\" issues.\n\n> import \"darkroom\"\n<buffer>:1:10: fatal error: 'stdio.h' file not found\n#include \"stdio.h\"\n         ^\ncompilation of included c code failed\n\nstack traceback:\n\tsrc/terralib.lua:3664: in function 'includec'\n\t./darkroom.t:1: in main chunk\n\t[C]: at 0x010690af60\n\t[C]: in function 'xpcall'\n\tsrc/terralib.lua:4506: in function <src/terralib.lua:4505>\n\n----\nSame issue on Linux",
      "Misc. comments": "",
      "Software language": "Other"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Earth mover's distances on discrete surfaces",
      "DOI": "10.1145/2601097.2601175",
      "Year": 2014,
      "ACM Keywords": [
        "Randomness, geometry and discrete structures",
        "Design and analysis of algorithms",
        "Shape modeling",
        "Convex optimization"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://people.csail.mit.edu/jsolomon/assets/w1.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://people.csail.mit.edu/jsolomon/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://people.csail.mit.edu/jsolomon/assets/emdadmm.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "bc31a29a349655c6014ff8919ba95dc8",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Bugfix: add T=double(T) at readOff.m:38.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Augmented MPM for phase-change and varied materials",
      "DOI": "10.1145/2601097.2601176",
      "Year": 2014,
      "ACM Keywords": [
        "Animation",
        "Simulation by animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.math.ucla.edu/~jteran/papers/SSJCTS14.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Eigenmode Compression for Modal Sound Models",
      "DOI": "10.1145/2601097.2601177",
      "Year": 2014,
      "ACM Keywords": [
        "Geometric topology",
        "Physical simulation",
        "Shape modeling",
        "Virtual reality",
        "Simulation by animation",
        "Music retrieval",
        "Sound and music computing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.cornell.edu/projects/Sound/modec/modec.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.cornell.edu/projects/Sound/modec/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "project webpage states \"Code and Model Data Coming Soon!",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Inverse-Foley Animation: Synchronizing rigid-body motions to sound",
      "DOI": "10.1145/2601097.2601178",
      "Year": 2014,
      "ACM Keywords": [
        "Virtual reality",
        "Simulation by animation",
        "Music retrieval",
        "Sound and music computing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.cornell.edu/projects/Sound/ifa/ifa.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.cornell.edu/projects/Sound/ifa/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Frame Fields: Anisotropic and Non-Orthogonal Cross Fields",
      "DOI": "10.1145/2601097.2601179",
      "Year": 2014,
      "ACM Keywords": [
        "Parametric curve and surface models",
        "Volumetric models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://vcg.isti.cnr.it/Publications/2014/PPTS14/frame-fields.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://vcg.isti.cnr.it/Publications/2014/PPTS14/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://vcg.isti.cnr.it/Publications/2014/PPTS14/source-code.zip",
      "Code URL2": "https://github.com/libigl",
      "MD5 sum (for archives)": "D2C432F2CE65F7475F7E25E460A853B8",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "None",
      "Dependencies": "libigl / comiso / eigen / glad / glfw /",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 2,
      "Build/configure score {0=NA, 1,2,3,4,5}": 2,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 2,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The code provided on the project website consists in a single downloadable main.cpp file. It is unclear if the core implementation is in libigl (mentioned in the includes) or in the main.cpp. To make the main compile, it has to be updated since it relies on a very old libigl :\n- replace #include <igl/viewer/Viewer.h> by #include <igl/opengl/glfw/Viewer.h>\n- replace #include <igl/comiso/nrosy.h>,  <igl/comiso/miq.h> and <igl/comiso/frame_field.h> by #include <igl/copyleft/comiso/nrosy.h>,  <igl/copyleft/comiso/miq.h>, and <igl/copyleft/comiso/frame_field.h>\n- replace igl::Viewer& viewer by igl::opengl::glfw::Viewer& viewer in key_down(..)\n- replace igl::Viewer viewer; by igl::opengl::glfw::Viewer viewer; in main()\n- replace all viewer.data. by viewer.data(). (24 times)\n- replace viewer.core.show_lines by viewer.data().show_lines \n- replace viewer.core.show_texture by viewer.data().show_texture\n- replace igl::nrosy, igl::miq and igl::frame_field  by igl::copyleft::comiso::nrosy, igl::copyleft::comiso::miq and igl::copyleft::comiso::frame_field\n- replace Eigen::Matrix<char,Eigen::Dynamic,Eigen::Dynamic> texture_R, texture_G, texture_B; by Eigen::Matrix<unsigned char,Eigen::Dynamic,Eigen::Dynamic> texture_R, texture_G, texture_B; (otherwise you get an YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY error in Eigen) ; you similarly need to change the parameters of line_texture by replacing char with unsigned char.\n- add #include <igl/local_basis.h> and #include <igl/rotate_vectors.h>\n- *** IGL bug *** : in igl/grad.cpp, in lines 226 and 228, grad_tri and grad_tet should be replaced by igl::grad_tri and igl::grad_tet since they are outside of the namespace.\nSince no CMakeList is given, you need to add the following preprocessor directives (tested on Visual Studio 2017) :\n- EIGEN_NO_DEPRECATED_WARNING; since Eigen::DynamicSparseMatrix is deprecated (and might just not work in the near future)\n- _CRT_SECURE_NO_WARNINGS; _SCL_SECURE_NO_DEPRECATE ; IGL_STATIC_LIBRARY (to prevent linking issues with Comiso), _USE_MATH_DEFINES\n- the blas shipped with Eigen should be compiled and linked to the project (it compiles smoothly with the provided CMakeList).\n- my list of linked libraries looks like: igl_opengl_glfw.lib;igl_opengl.lib;igl.lib;comiso.lib;igl_comiso.lib;eigen_blas_static.lib;glad.lib;glfw3.lib\n- I had to compile it in Multithread (MT), not the default Multithread DLL, due to the way igl is compiled by default (it seems).\nUltimately, I managed to run the provided example. The data is shipped with the IGL tutorial data. This is the only object provided with constraints stored as a dmat file (how can I generate one ?). All the figure results are provided in a separate archive, but without the constraint file, I cannot test whether it works.\nI also couldn't get the cross frame to render like in the paper : part of the shape show cross frames over a red mesh (by pressing '1'), but part of the shape remains white with no frames. This might be due to the char -> unsigned char bug fix (?).",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Reflectance scanning: estimating shading frame and BRDF with generalized linear light sources",
      "DOI": "10.1145/2601097.2601180",
      "Year": 2014,
      "ACM Keywords": [
        "3D imaging",
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://yuedong.shading.me/project/refscan/refscan.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://yuedong.shading.me/project/refscan/refscan.htm",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 4,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Simulating articulated subspace self-contact",
      "DOI": "10.1145/2601097.2601181",
      "Year": 2014,
      "ACM Keywords": [
        "Geometric topology",
        "Physical simulation",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.tkim.graphics/SASS/TengOtaduyKim2014.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.tkim.graphics/SASS/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "Many data and results are given in the project page.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Rigid Stabilization of Facial Expressions",
      "DOI": "10.1145/2601097.2601182",
      "Year": 2014,
      "ACM Keywords": [
        "Image manipulation",
        "Document scanning",
        "Graphics recognition and interpretation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://studios.disneyresearch.com/wp-content/uploads/2019/03/Rigid-Stabilization-of-Facial-Expressions.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://studios.disneyresearch.com/2014/07/27/rigid-stabilization-of-facial-expressions/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Look Over Here: Attention-Directing Composition of Manga Elements",
      "DOI": "10.1145/2601097.2601183",
      "Year": 2014,
      "ACM Keywords": [
        "Computer graphics",
        "Graphics recognition and interpretation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.ying-cao.com/projects/manga_composition/files/composition_paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.ying-cao.com/projects/manga_composition/manga_composition.htm",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Parametric Wave Field Coding for Precomputed Sound Propagation",
      "DOI": "10.1145/2601097.2601184",
      "Year": 2014,
      "ACM Keywords": [
        "Virtual reality",
        "Sound and music computing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.nikunjr.com/Projects/Triton/ParametricWaveField.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Meta-representations of Shape Families",
      "DOI": "10.1145/2601097.2601185",
      "Year": 2014,
      "ACM Keywords": [
        "Randomness, geometry and discrete structures",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://vecg.cs.ucl.ac.uk/Projects/SmartGeometry/metarep/paper_docs/metaRepresentation_sigg14.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://vecg.cs.ucl.ac.uk/Projects/SmartGeometry/metarep/metaRep_sigg14.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Discrete Stochastic Microfacet Models",
      "DOI": "10.1145/2601097.2601186",
      "Year": 2014,
      "ACM Keywords": [
        "Texturing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.cornell.edu/projects/stochastic-sg14/stochastic.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.cornell.edu/projects/stochastic-sg14/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://www.mitsuba-renderer.org/",
      "Code URL2": "https://github.com/mitsuba-renderer/mitsuba",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "26355676fa45feb5acca3f42b023a055ad2bb7e3",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:181f97e051f8a768b9287883d652651001778eed;origin=https://www.mitsuba-renderer.org/repos/mitsuba.git/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "GPL",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "SCONS",
      "Dependencies": "qt5/libpng/fftw3/libpcrecpp/eigen3/openexr/boost/xerces/ilmbase/jpeg/glewmx/libxxf86vm",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 3,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 3,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The project's webpage links to mitsuba, but no microfacet method in mitsuba references the paper (it references other microfacets papers). The examples to reproduce the experiments are not provided, so I was not able to reproduce the results of the paper. To compile mitsuba on ubuntu 18.04, in config.py I changed -std=c++11 into -std=gnu++11 ; in mitsuba/build/release/mtsgui I changed QtCore, QtOpenGL (and so on) into Qt5Core, Qt5OpenGL (and so on) ; in data/scons/qt5.py,line 392 changed QtCore into Qt5Core.",
      "Misc. comments": "There appears to be an implementation of the paper by a different author: https://github.com/lxs137/glint_mitsuba",
      "Software language": "C/C++, Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Fast Multipole Representation of Diffusion Curves and Points",
      "DOI": "10.1145/2601097.2601187",
      "Year": 2014,
      "ACM Keywords": [
        "Rendering",
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.columbia.edu/cg/fmr/fmdci-lowres.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.columbia.edu/cg/fmr/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 2,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The pseudo-code in the paper is relatively detailed, however the propose approach relies on the diffusion curves, which requires some effort to be implemented and ensure reproducilibity.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Bilateral Texture Filtering",
      "DOI": "10.1145/2601097.2601188",
      "Year": 2014,
      "ACM Keywords": [
        "Computer vision",
        "Texturing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.umsl.edu/~kang/Papers/kang_siggraph14.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 4,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "An Asymptotic Numerical Method for Inverse Elastic Shape Design",
      "DOI": "10.1145/2601097.2601189",
      "Year": 2014,
      "ACM Keywords": [
        "Geometric topology",
        "Physical simulation",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://kunzhou.net/zjugaps/ANMdesign/ANMdesign.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://kunzhou.net/zjugaps/ANMdesign/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://kunzhou.net/zjugaps/ANMdesign/code/opensrc.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "F48759C5025580AA52E1A30A2BA3F685",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "IDE Project (VS,..)",
      "Dependencies": "VEGA / Intel Math Kernel Library / Qt / QGLViewer / pthread / clapack / Eigen / alglib / freeglut / glui / levmar / sparselm",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 1,
      "Build/configure score {0=NA, 1,2,3,4,5}": 1,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "I refreshed this old 2014 code to make it run on Qt 5 in 64bits with VS2017 using up to dates libraries rather than Qt 4 in 32 bits. This requires a number of adjustments, and fixing existing bugs, especially since there is no documentation nor build info:\n\n- In mat3d.h, replace line 435:\n  return(\n    s << '[' << a00 << ' ' << a01 << ' ' << a02 << ']' << std::endl <<\n    s << '[' << a10 << ' ' << a11 << ' ' << a12 << ']' << std::endl <<\n    s << '[' << a20 << ' ' << a21 << ' ' << a22 << ']'\n  );\nby\n  return(\n    s << '[' << a00 << ' ' << a01 << ' ' << a02 << ']' << std::endl <<\n    '[' << a10 << ' ' << a11 << ' ' << a12 << ']' << std::endl <<\n    '[' << a20 << ' ' << a21 << ' ' << a22 << ']'\n  );\n\n- in neoHookeanANMForward.cpp and tribox3.cpp, add #include <algorithm> (for std::min)\n\n- add the preprocessor directive HAVE_STRUCT_TIMESPEC in the vegaport project.\n\n- add the include directory to freeglut in the VS project.\n\n- in manipulatedforceframe.cpp line 35, replace \ndist = min((mp - pproj).norm(), (mp - qproj).norm());\nby\ndist = std::min((mp - pproj).norm(), (mp - qproj).norm());\n\n** Regarding the port to Qt 5\n- in inverseDeformableDesigner.vcxproj.user, changes the occurrences of Qt 4.8.4 to your Qt version (e.g., eg. C:\\Libs\\Qt\\5.12.6\\msvc2017_64 )\nIn the inverseDeformableDesigner project, add include path to $(QTDIR)\\include\\QtWidgets;\n\n- in inversedeformabledesigner.h, replace #include <QtGui/QMainWindow> by #include <QtWidgets/QMainWindow>\n- in inversedeformabledesigner.h, line 15 / inversedeformabledesigner.cpp line 4: replace Qt::WFlags by Qt::WindowFlags\n- in inversedeformabledesigner.cpp add #include <QFileDialog>\n- in inversedesigner.h, #include <QDockWidget> and #include <QListWidget> and #include <QLabel>\n- in main.cpp line 1, replace #include <QtGui/QApplication> by #include <QtWidgets/QApplication>\n\n- replace the included libraries QtCore4.lib QtGui4.lib QtOpenGL4.lib QtXml4.lib  by Qt5Core.lib Qt5Gui.lib Qt5OpenGL.lib Qt5Xml.lib\nAlso add Qt5Widgets.lib.\n\n** Regarding the port to 64 bits:\n* in the inverseDeformableDesigner project, replace the library mkl_intel_c_dll.lib by mkl_intel_lp64.lib\n\n* You of course need to recompile the dependencies in 64 bits. This includes downloading a fresh QGLViewer (I used 2.7.2) :\n- in manipulatedforceframe.h add #include \"QGLViewer/manipulatedframe.h\"\n- in inversedesigner.h, add #include \"QGLViewer/manipulatedcameraframe.h\"\n- in inversedesigner.cpp, line 2725, 2739, 2753, 2758, 2759, 2760, replace updateGL by update\n* You need to use a 64bits phread. A precompiled library in x64 has been shipped with the code... but the dll are missing. I used the lib and dll from https://github.com/github-for-unity/sfw/tree/master/lib/pthreads-win32-2.9.1\nIn the VS project file, I removed pthreadVCE2.lib and pthreadVSE2.lib.\n\n* You need to recompile sparselm-1.3 (which can be downloaded) without support for choldmod (use HAVE_CHOLMOD = false in cmake) ; clapack can be found here http://www.netlib.org/clapack/\n\n* Levmar 3.6 can be downloaded and recompiled without hassle.\n\n** Regarding MKL:\n- set the MKL_INC_PATH to your MKL : C:\\Program Files (x86)\\IntelSWTools\\compilers_and_libraries_2019.5.281\\windows\\mkl\\include\nUse the MKL library path in additional library directories: C:\\Program Files (x86)\\IntelSWTools\\compilers_and_libraries_2019.5.281\\windows\\mkl\\lib\\intel64_win\n\n- If you do all of the above, it should compile and run without complaining. However, it will crash during a solve with pardiso (?? pardiso is not linked with...). If this happens, just put the mkl dlls : mkl_core.dll, mkl_def.dll, mkl_intel_thread.dll and mkl_sequential.dll in the executable directory (or just add the MKL binary path to your Path environment variable).\n\n** Regarding execution\nThere is no documentation. However, the interface is quite straigforward : just load an existing config file, and click and the back arrow to solve the proposed inverse problem.\nThe code manages to reproduce (at least) Fig. 2.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "DecoBrush: Drawing Structured Decorative Patterns by Example",
      "DOI": "10.1145/2601097.2601190",
      "Year": 2014,
      "ACM Keywords": [
        "Graphics systems and interfaces"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://gfx.cs.princeton.edu/pubs/Lu_2014_DDS/Lu_2014_DDS.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://gfx.cs.princeton.edu/pubs/Lu_2014_DDS/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The project page provides a dataset with examples.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Proactive 3D Scanning of Inaccessible Parts",
      "DOI": "10.1145/2601097.2601191",
      "Year": 2014,
      "ACM Keywords": [
        "Computational geometry",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.bgu.ac.il/~asharf/Dscan.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://vcc.tech/research/2014/Proactive",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Generalizing Locomotion Style to New Animals With Inverse Optimal Regression",
      "DOI": "10.1145/2601097.2601192",
      "Year": 2014,
      "ACM Keywords": [
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://grail.cs.washington.edu/projects/inverse_locomotion/paper/animal_motion_joint_inverse.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://grail.cs.washington.edu/projects/inverse_locomotion/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "genBRDF: Discovering New Analytic BRDFs with Genetic Programming",
      "DOI": "10.1145/2601097.2601193",
      "Year": 2014,
      "ACM Keywords": [
        "Texturing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://web.eecs.umich.edu/~weimerw/p/brady_sig14.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The grammar of the genetic framework is given in the paper but not really a pseudo-code.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Robust Hair Capture Using Simulated Examples",
      "DOI": "10.1145/2601097.2601194",
      "Year": 2014,
      "ACM Keywords": [
        "Randomness, geometry and discrete structures",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.hao-li.com/publications/papers/siggraph2014RHCUSE.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.hao-li.com///Hao_Li/Hao_Li_-_publications_%5BRobust_Hair_Capture_Using_Simulated_Examples%5D.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "First-person Hyper-lapse videos",
      "DOI": "10.1145/2601097.2601195",
      "Year": 2014,
      "ACM Keywords": [
        "Computer graphics",
        "Graphics recognition and interpretation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.microsoft.com/en-us/research/wp-content/uploads/2014/08/Kopf-Hyperlapse-SG14.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://www.microsoft.com/en-us/download/details.aspx?id=52379",
      "Code URL2": "",
      "MD5 sum (for archives)": "D1CB0AD5C289FBD301FB7488C37DC310",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Code License (if any)": "Commercial",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "None",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "This paper has become a commercial product called \"Microsoft Hyperlapse Pro\". I can only suppose the software implements this paper (a link to this software is present on one of the author's page about this paper). The videos used in the paper are not shared, so I could only test on my own videos. It seems to work well overall, and the interface is very easy (2 clicks: import video and process).",
      "Misc. comments": "",
      "Software language": "Cannot answer"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Self-Refining Games using Player Analytics",
      "DOI": "10.1145/2601097.2601196",
      "Year": 2014,
      "ACM Keywords": [
        "Animation",
        "Stochastic games",
        "Algorithmic game theory and mechanism design"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://graphics.cs.cmu.edu/projects/self-refining-games/stanton2014_self_refining_games.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://graphics.cs.cmu.edu/projects/self-refining-games/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "PushPull++",
      "DOI": "10.1145/2601097.2601197",
      "Year": 2014,
      "ACM Keywords": [
        "Computational geometry",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://peterwonka.net/Publications/pdfs/2014.SG.Lipp.PushPull.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 2,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Automatic Editing of Footage from Multiple Social Cameras",
      "DOI": "10.1145/2601097.2601198",
      "Year": 2014,
      "ACM Keywords": [
        "Scene understanding"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.cmu.edu/~hyunsoop/SocialCamera.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://graphics.cs.cmu.edu/projects/social-cameras/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Embree: a kernel framework for efficient CPU ray tracing",
      "DOI": "10.1145/2601097.2601199",
      "Year": 2014,
      "ACM Keywords": [
        "Ray tracing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.embree.org/papers/2014-Siggraph-Embree.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.embree.org/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/embree/embree.git",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "d17aec1491a6c664f4da2f0b8ba03c171cbf36a1",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:7bf3744fbbe33755565d5c03d091a3dd6b05a2a6;origin=https://github.com/embree/embree.git/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Apache License version 2.0",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Makefile, CMakeLists",
      "Dependencies": "libtbb/libglfw3/ispc(optional)",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Very well maintained library. I tested the latest version of the library",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "High-contrast Computational Caustic Design",
      "DOI": "10.1145/2601097.2601200",
      "Year": 2014,
      "ACM Keywords": [
        "Geometric topology",
        "Physical simulation",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://lgg.epfl.ch/publications/2014/Caustics/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://lgg.epfl.ch/publications/2014/Caustics/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Codimensional Surface Tension Flow on Simplicial Complices",
      "DOI": "10.1145/2601097.2601201",
      "Year": 2014,
      "ACM Keywords": [
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.dartmouth.edu/~boolzhu/papers/codimensional_surface_tension.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.dartmouth.edu/~boolzhu/projects/codimension.htm",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "EZ-sketching: three-level optimization for error-tolerant image tracing",
      "DOI": "10.1145/2601097.2601202",
      "Year": 2014,
      "ACM Keywords": [
        "Image manipulation",
        "Parametric curve and surface models",
        "Fine arts",
        "Performing arts"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://sweb.cityu.edu.hk/hongbofu/projects/EZSketching_SIG14/EZ-Sketching_SIGGRAPH_2014.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://sweb.cityu.edu.hk/hongbofu/projects/EZSketching_SIG14/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "ACM keywords 3,4 grey",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "On-line Learning of Parametric Mixture Models for Light Transport Simulation",
      "DOI": "10.1145/2601097.2601203",
      "Year": 2014,
      "ACM Keywords": [
        "Rendering",
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://cgg.mff.cuni.cz/~jaroslav/papers/2014-onlineis/2014-onlineis-paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://cgg.mff.cuni.cz/~jaroslav/papers/2014-onlineis/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://cgg.mff.cuni.cz/~jirka/papers/2014/olpm/olpm2014_source.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "1C3B368202E9F787D9C5177ADC278303",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "GPL",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "IDE Project (VS,..), SCONS",
      "Dependencies": "mitsuba",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 1,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "I tried compiling the code on Windows+Python3.6+VS2017. \n\nFirst, the Sconscriptshould be updated to have \"print ....\" changed to \"print(...)\". This includes at lines 23, 29-30, 100, 104, 178, 184, 189, 194, 199, 203, 217, 221, 224, 227, 230, 237, 240, 244, 247, 250, 253, 257, 260, 264, 279, 282, 299--306 of Sconscript.configure and line 30 of Sconscript.install.\n\nThen the config-win64-msvc2010.py should be updated. You need to add '/arch:AVX' to CXXFLAGS, and change MSVC_VERSION    = '10.0' to MSVC_VERSION    = '14.1'  (I tried 15.0 since I have VS2017, but VS complained).\n\nIn mitsuba/cor/util.h, you need to add #include <intrin.h>\nIn Mitsuba 0.5.0\\dependencies\\include\\boost\\config\\compiler\\visualc.hpp, you may comment-out lined 44  #if _MSC_VER < 1300 and the matching #end line 54, and perhaps manually set #define BOOST_COMPILER_VERSION evc15 instead of the error message lines 283--287.\n\nIn LibImportance/shared/Config.h, I have issues with \n    const Float NAN = std::numeric_limits<Float>::signaling_NaN();\n    const Float INFINITY = std::numeric_limits<Float>::infinity();\nline 109.\nAdding #undef NAN and #undef INFINITY did not solve the problem, and commenting out these two lines either.\n\nIn LibImportance/shared/Sse.h, the compiler complains about undefined SSE functions, or similarly in avx_mathfun.h, it complains about the undefined __m256 type. Adding #include <intrin.h> did not help (anyway, there is already #include <immintrin.h> ), and passing the /arch:AVX to the compiler in the config-win64-msvc2010.py did not help either (usually, having arch:AVX and intrin.h is sufficient to have __m256 defined ; however, while this works with VisualStudio alone, the SConsScript may not work).\n\nUltimately, I could not fix these issues and run the code.\n\n-- Alternate test on Linux \nCompilation did not succeed on Linux.\n fatal error: xutility: No such file or directory   27 | #include <xutility>, after commenting this line, I got to the error:\nfastonebigheader.h:60:10: fatal error: PrecompiledLibs/Embree/common/simd/smmintrin_emu.h: No such file or directory\n   60 | #include \"PrecompiledLibs/Embree/common/simd/smmintrin_emu.h\"\n\nwhich I was not able to solve.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Displaced Dynamic Expression Regression for Real-time Facial Tracking and Animation",
      "DOI": "10.1145/2601097.2601204",
      "Year": 2014,
      "ACM Keywords": [
        "Graphics input devices",
        "Graphics systems and interfaces",
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://houqiming.net/res/DDEregression.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://kunzhou.net/zjugaps/DDE/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Image Completion using Planar Structure Guidance",
      "DOI": "10.1145/2601097.2601205",
      "Year": 2014,
      "ACM Keywords": [
        "Computer graphics",
        "Graphics recognition and interpretation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.microsoft.com/en-us/research/wp-content/uploads/2017/01/structure_completion_small.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/jbhuang0604/StructCompletion",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "25668dea193801140fafe0a722ccb1e955509ec4",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:25668dea193801140fafe0a722ccb1e955509ec4;origin=https://github.com/jbhuang0604/StructCompletion/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab / vlfeat / vgg / imrender / MeanShift",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 2,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The current version in the repository (latest commit 25668de in Nov. 2015) has merge conflicts in sc_complete.m (<<<<<<< HEAD .... >>>>>>> 80fe71bd858652004119dc8946439915385cc282) and I am not sure why the image filename is also a parameter of the function. A 'cache' and 'result' directories need to be created in the root directory (otherwise it crashes). I also had to download binaries for VLFeat 0.9.20 at http://www.vlfeat.org/download/ since I could not compile it (this library does not seem maintained). \nThe code to detect vanishing points is not provided (the paper just refers to the classical book of Hartley and Zisserman) but instead a binary Windows executable is.\nUltimately, the code runs in about 5 min for one image in 3216x2136, or 40s in 640x480.\nHowever, it produces results that are very far from the quality of the results shown in the paper. I tried reproducing Fig 8 and obtained the results at https://pasteboard.co/ILTnRz4.jpg (images scaled and cropped to roughly match Fig. 8). I did 3 runs per image to make sure I didn't get unlucky random seeds. A note says this is a matlab reimplementation of the paper (by the paper first author), not the original code used to produce the images though. Also, a todo.txt present in the github seems to indicate there is no spatial coherence cost in this implementation, which could explain the discrepancy between advertised and obtained results, but I am not sure which term exactly this corresponds to in the paper (E_proximity?).",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Intrinsic Images in the Wild",
      "DOI": "10.1145/2601097.2601206",
      "Year": 2014,
      "ACM Keywords": [
        "Computer vision problems",
        "Scene understanding"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://labelmaterial.s3.amazonaws.com/release/siggraph2014-intrinsic.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://opensurfaces.cs.cornell.edu/intrinsic/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/seanbell/intrinsic",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "698b1e0fd23c216bb65164927c4de85b2c94b1af",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:d587ee6779413a3c475a5ff6b8263c1e9f769acd;origin=https://github.com/seanbell/intrinsic/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Makefile",
      "Dependencies": "python2.7/PIL==1.1.7/cython==0.19.2/numpy==1.8.0/scipy==0.13.2/scikit-image==0.9.3/scikit-learn==0.14.1",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 6,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Had to change a line in image_util.py to make it work with a more recent version of scikit-image: changed line 5 to \"from skimage.restoration import denoise_bilateral\". Adaptation in other context is easy: example of an integration is provided. All images in the dataset are provided with judgement files.",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Compressive Epsilon Photography for Post-Capture Control in Digital Imaging",
      "DOI": "10.1145/2601097.2601207",
      "Year": 2014,
      "ACM Keywords": [
        "3D imaging",
        "Image representations"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.ece.rice.edu/~av21/Documents/2014/CompressiveEpsilonPhotography.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.ece.rice.edu/~sst5/CompEpPhoto.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "VideoSnapping: Interactive Synchronization of Multiple Videos",
      "DOI": "10.1145/2601097.2601208",
      "Year": 2014,
      "ACM Keywords": [
        "Graphics input devices",
        "Graphics systems and interfaces",
        "Scene understanding",
        "Video segmentation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://ahornung.net/files/pub/2014-siggraph-videosnapping-wang.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://la.disneyresearch.com/publication/videosnapping-interactive-synchronization-of-multiple-videos/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "3D Object Manipulation in a Single Image using Stock 3D Models",
      "DOI": "10.1145/2601097.2601209",
      "Year": 2014,
      "ACM Keywords": [
        "Virtual reality"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.cmu.edu/~om3d/papers/SIGGRAPH2014.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.cs.cmu.edu/~om3d/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://www.cs.cmu.edu/~om3d/executables.html",
      "Code URL2": "http://sites.cs.cmu.edu/om3d/test.php",
      "MD5 sum (for archives)": "e35c0f8ca2ea9899f84c1b9104fe6ea3",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Code License (if any)": "Special license SOFTWARE LICENSE AGREEMENT ACADEMIC OR NON-PROFIT ORGANIZATION NONCOMMERCIAL RESEARCH USE ONLY...",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 2,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Mac OS",
      "Build instructions/comments": "I was able to download and run some executables on an old MacOS (Sierra). The 3D manipulation and rendering tool works perfectly on the provided example but I was not able to run the other tools (Alignment and illumapp tools) due to version issues in the required dynamic libs (opens): \n\n./Release/Alignment.app/Contents/MacOS/Alignment ./examples/chair/\ndyld: Library not loaded: lib/libopencv_imgproc.2.4.dylib\n  Referenced from: /Users/tmp/Downloads/OM3D_1.0.2/./Release/Alignment.app/Contents/MacOS/Alignment\n  Reason: image not found",
      "Misc. comments": "The source code is available upon request ( https://www.cs.cmu.edu/~om3d/sourcecode.html).\nIf the \"I agree\" button doesn't show (it was not visible on my Chrome, nor IE), you can press it by going to http://sites.cs.cmu.edu/om3d/test.php",
      "Software language": "Cannot answer"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Controllable High-Fidelity Facial Performance Transfer",
      "DOI": "10.1145/2601097.2601210",
      "Year": 2014,
      "ACM Keywords": [
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://faculty.cs.tamu.edu/jchai/projects/siggraph14-face/face-retargeting.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "A Reduced Model for Interactive Hairs",
      "DOI": "10.1145/2601097.2601211",
      "Year": 2014,
      "ACM Keywords": [
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.mlchai.com/resources/chai2014reduced.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Learning a Manifold of Fonts",
      "DOI": "10.1145/2601097.2601212",
      "Year": 2014,
      "ACM Keywords": [
        "Machine learning",
        "Shape modeling",
        "Computational geometry"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://jankautz.com/publications/LearningFonts_SIG14.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://vecg.cs.ucl.ac.uk/Projects/projects_fonts/projects_fonts.html",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://vecg.cs.ucl.ac.uk/Projects/projects_fonts/projects_fonts.html",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "None",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "Training data",
      "License of the data": "CC-BY-NC",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Web application only. Permits to navigate in the manifold and see the font evolving. The font editing application is not demonstrated however.",
      "Misc. comments": "",
      "Software language": "Cannot answer"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Form-finding with polyhedral meshes made simple",
      "DOI": "10.1145/2601097.2601213",
      "Year": 2014,
      "ACM Keywords": [
        "Parametric curve and surface models",
        "Volumetric models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.geometrie.tugraz.at/wallner/formfinding2.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "AMFS: adaptive multi-frequency shading for future graphics processors",
      "DOI": "10.1145/2601097.2601214",
      "Year": 2014,
      "ACM Keywords": [
        "Graphics processors"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://fileadmin.cs.lth.se/graphics/research/papers/2014/amfs/amfs.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://software.intel.com/en-us/articles/amfs-adaptive-multi-frequency-shading-for-future-graphics-processors",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Active Volumetric Musculoskeletal Systems",
      "DOI": "10.1145/2601097.2601215",
      "Year": 2014,
      "ACM Keywords": [
        "Animation",
        "Simulation by animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://web.archive.org/web/20160423103349/https://www.cs.ubc.ca/sites/cs/files/research/papers/2014/06/papfinal.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "High-order diffraction and diffuse reflections for interactive sound propagation in large environments",
      "DOI": "10.1145/2601097.2601216",
      "Year": 2014,
      "ACM Keywords": [
        "Geometric topology",
        "Physical simulation",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://gamma.cs.unc.edu/HIGHDIFF/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://gamma.cs.unc.edu/HIGHDIFF/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Space-Time Editing of Elastic Motion through Material Optimization and Reduction",
      "DOI": "10.1145/2601097.2601217",
      "Year": 2014,
      "ACM Keywords": [
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.geometry.caltech.edu/pubs/LHGJBD14.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Online Motion Synthesis Using Sequential Monte Carlo",
      "DOI": "10.1145/2601097.2601218",
      "Year": 2014,
      "ACM Keywords": [
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://mediatech.aalto.fi/publications/graphics/OnlineSMC/preprint.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://mediatech.aalto.fi/publications/graphics/OnlineSMC/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 2,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The algorithm only covers the sampling part of the paper, while the simulation part is covered via equations.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Unifying points, beams, and paths in volumetric light transport simulation",
      "DOI": "10.1145/2601097.2601219",
      "Year": 2014,
      "ACM Keywords": [
        "Ray tracing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://cs.dartmouth.edu/~wjarosz/publications/krivanek14upbp.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://cs.dartmouth.edu/~wjarosz/publications/krivanek14upbp.html",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/PetrVevoda/smallupbp",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "15430256733938d529a2f5c7ef4cdcd940ae4208",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/browse/revision/15430256733938d529a2f5c7ef4cdcd940ae4208/?origin_url=https://github.com/PetrVevoda/smallupbp",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Code",
      "Dependencies": "OpenEXR,embree",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 3,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "Extremely easy to compile (tested under VS2017, which only required retargeting the solution) and run. Test scenes are directly provided as command line parameters as a scene number or scene file (scenes from the paper are provided), and equal-time comparisons are facilitated by an adjustable timeout.",
      "Misc. comments": "",
      "Software language": "C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Relating shapes via geometric symmetries and regularities",
      "DOI": "10.1145/2601097.2601220",
      "Year": 2014,
      "ACM Keywords": [
        "Shape modeling",
        "Computational geometry"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.utexas.edu/~huangqx/sym_sig14.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.tevs.eu/project_sig14.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Compact Precomputed Voxelized Shadows",
      "DOI": "10.1145/2601097.2601221",
      "Year": 2014,
      "ACM Keywords": [
        "Texturing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cse.chalmers.se/~d00sint/CompressedShadowsPreprint.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://www.cse.chalmers.se/~d00sint/CPVS/CPVSStandalone.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "529FD85C18C15184D227287938EDB8B3",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "IDE Project (VS,..)",
      "Dependencies": "cuda / embree / glew / glut / wxWidgets",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 3,
      "Build/configure score {0=NA, 1,2,3,4,5}": 3,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 2,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "I compile the code with VS2017 and Cuda 10.2, which is quite far from the original project settings (VS2014 6.5). Step by step:\n- You need to edit the CPVS2014.vcxproj, replacing at line 55 <Import Project=\"$(VCTargetsPath)\\BuildCustomizations\\CUDA 6.5.props\" /> by the place where you have your Cuda 10 property sheets (in my case \"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.2\\extras\\visual_studio_integration\\MSBuildExtensions\\CUDA 10.2.props\"). And similarly in line 185 for the Cuda targets (same folder). And then open the project with visual studio, update/retarget the project file.\n- You need to use a fresh wxWidget, since the one provided is precompiled for VS2014. Go to https://www.wxwidgets.org/downloads/ and download the precompiled binaries for windows (headers and release DLLs). Replace the original wxWidget folder with these downloads (same fold hierarchy).\n- add wxMSVC_VERSION=14x as a preprocessor directive for the projects CHAGApp and CPVS2014 and remove wxMSVC_VERSION_AUTO\n- replace compute_20,sm_20 in Cuda C/C++->Device->Code Generation to compute_30,sm_30 in the project CPVS2014\n- add #include <intrin.h> in CompressedShadow.cpp\n- Change WINVER=0x0400 to WINVER=0x0500 in the preprocessor directives of CHAGApp and CPVS2014\n- Change the library path ../wxWidgets/lib/vc120_x64_dll  to ../wxWidgets/lib/vc14x_x64_dll\n- Change the libraries being linked from wxmsw30u_core.lib and wxbase30u.lib to wxmsw31u_core.lib and wxbase31u.lib\n- In line 115 of GLSLProgramManager.cpp, replace return shader; by return \"#version 420 compatibility\\n\"+shader;  This is quite a hack, but works in my case. Remove *all* mentions of #version 400 or 420 in all shader files (Application.glsl, CPVSBuilder.glsl, Scene.glsl) since you are now only allowed a single call to \"#version\" in the first line of the shader.\n- Compile the code, and put the .exe and the wxWidgets dll in the CPVS2014 folder (where there is a subfolder \"media\").\nYou can now launch the .exe and play with it. There is a very nice Readme.pdf that gives step by step instructions to compress shadow maps. I lowered the reproducibility score for the main reason that the proposed implementation differs from what is explained in the paper (the Readme.pdf explains the differences), and for the secondary reason that the scene files used in the paper are not provided, so it is difficult to appreciate the differences between the new and original implementation in term of results. However, the code works well and shows crisp shadows.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Dynamic Ray Stream Traversal",
      "DOI": "10.1145/2601097.2601222",
      "Year": 2014,
      "ACM Keywords": [
        "Ray tracing",
        "Texturing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://cseweb.ucsd.edu/~ravir/274/15/papers/drst.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://fileadmin.cs.lth.se/graphics/research/papers/2014/drst/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://code.google.com/archive/p/drst/source/default/source",
      "Code URL2": "",
      "MD5 sum (for archives)": "E56FEDE6A1829BC10138DE6DB91B2848",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Intel Corporation",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "IDE Project (VS,..)",
      "Dependencies": "embree",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The code was easy to run on Windows with VS2017. I only needed to upgrade the solution and retarget the project. I do not have the required Intel C++ Compiler XE 14.0, but the code compiled directly when changing the Intel C++ compiler target to Visual Studio 2017 (Configuration properties -> General -> Platform Toolset), probably at the expense of slower runtimes.\nI managed to get the crown to run at about 12 down to 8 Mrays/s as time passes, using BVH4, on a 2017 laptop with a 4-core Intel Core i7-7700 HQ @ 2.8GHz (the paper gives 10Mrays/s in 2014 for this scene on a lower end laptop with \"a 4-core Intel Haswell Core i7-4750HQ CPU clocked at 2.0 GHz and with a turbo frequency of 3.2 GHz\" but compiled with the Intel compiler).",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Learning to be a depth camera for close-range human capture and interaction",
      "DOI": "10.1145/2601097.2601223",
      "Year": 2014,
      "ACM Keywords": [
        "Computer graphics",
        "Scene understanding",
        "Computer vision problems",
        "Graphics recognition and interpretation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/depth4free_SIGGRAPH.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.microsoft.com/en-us/research/project/learning-to-be-a-depth-camera-for-close-range-human-capture-and-interaction/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "ACM Keyword 2,3 grey",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "The Connect-The-Dots Family of Puzzles: Design and Automatic Generation",
      "DOI": "10.1145/2601097.2601224",
      "Year": 2014,
      "ACM Keywords": [
        "Computational geometry",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://fstaals.net/publications/other/pointpuzzles2014/pointpuzzles2014_local.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://fstaals.net/publications/other/pointpuzzles2014/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Breathing Life into Shape: Capturing, Modeling and Animating 3D Human Breathing",
      "DOI": "10.1145/2601097.2601225",
      "Year": 2014,
      "ACM Keywords": [
        "Animation",
        "Simulation by animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://users.ics.forth.gr/~aggeliki/assets/pdf/siggraph14_breathing.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://users.ics.forth.gr/~aggeliki/papers.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Interactive Shape Modeling using a Skeleton-Mesh Co-Representation",
      "DOI": "10.1145/2601097.2601226",
      "Year": 2014,
      "ACM Keywords": [
        "Graphics file formats",
        "Graphics input devices"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.dgp.toronto.edu/~karan/papers/pam_siggraph14.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Locally Injective Parametrization With Arbitrary Fixed Boundaries",
      "DOI": "10.1145/2601097.2601227",
      "Year": 2014,
      "ACM Keywords": [
        "Randomness, geometry and discrete structures",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://cims.nyu.edu/gcl/papers/weber2014lip.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "Technically there is an algorithm in the paper, but it implements a small fraction of the pipeline (just the refinement process). \nHowever, for all practical purpose, there is an unofficial implementation at https://github.com/hankstag/locally_injective_map",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "GazeStereo3D: Seamless Disparity Manipulations",
      "DOI": "10.1145/2897824.2925866",
      "Year": 2016,
      "ACM Keywords": [
        "Perception",
        "Image processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://resources.mpi-inf.mpg.de/GazeStereo3D/GazeStereo3D.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://resources.mpi-inf.mpg.de/GazeStereo3D/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://resources.mpi-inf.mpg.de/GazeStereo3D/SeamlessRemappingDemo.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "9CF1871EFF0F6FEF46D567D8FF42D49C",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "It is a windows binary only. Not all results in the paper are provided, but the software works well for the examples provided. However I could not test on a polarized screen.",
      "Misc. comments": "",
      "Software language": "Cannot answer"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "PiGraphs: Learning Interaction Snapshots from Observations",
      "DOI": "10.1145/2897824.2925867",
      "Year": 2016,
      "ACM Keywords": [
        "Spatial and physical reasoning",
        "Computer graphics"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://graphics.stanford.edu/projects/pigraphs/pigraphs.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://graphics.stanford.edu/projects/pigraphs/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/msavva/pigraphs/",
      "Code URL2": "http://aspis.cmpt.sfu.ca/falas_datasets/etherion_backup/data/pigraphs/pigraphs.vhd.bz2",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "ee794f3acef4eac418ca0f69bb410fef34b99246",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:ee794f3acef4eac418ca0f69bb410fef34b99246;origin=https://github.com/msavva/pigraphs//",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "IDE Project (VS,..)",
      "Dependencies": "DirectX / Java JNI / ANN / AntTweakBar / Boost / CGAL / flann / FreeImage / FW1FontWrapper / GMP / MPFR / OpenCV / Zlib / szip",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 1,
      "Build/configure score {0=NA, 1,2,3,4,5}": 2,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Using the Virtual Machine provided by the authors, everything ultimately worked, and I managed to at least see the interactions. The interface is not documented at all and quite complex though, so I am not sure what I was doing - some buttons make the program crash. Also, beware the licence for Visual Studio in the VM has expired, and since this is not a free Visual Studio version, you need a licence to be able to recompile from the VM (or reinstall free versions of Visual Studio within the VM).\n\nBut getting there was a challenge.\n\nFirst, I tried to compile the code directly on my machine (on Windows, with VS2017 and Java JDK 13.0.1 instead of the old proposed JDK 8). I had to perform an number of steps and fixed a number of issues :\n\n\n- you need to set the JAVA_HOME environment variable to your java install, e.g., C:\\Program Files\\Java\\jdk-13.0.1\\\n- you need to add boost to the VS project includes (I tried with boost 1.70.0)\n- you need to download mLib and mLibExternal from the provided links and extracted them in the root of pigraphs\n- you need to download the 35GB of data.\n\n- in JACE/Integer.cpp line 399, replace  \nsetJavaJniObject(object); \nby  \nsetJavaJniObject(object.getJavaJniClass().getClass());\nSame thing for Exception.cpp (line 87), Throwable (line 143), IOException (l.90), Collection (l.144), Number (l.100), List (l.200), AbstractList (l.135), AbstractCollection (l.138), ArrayList (l.230), String (l.591 and 612) in their respective files.\n\n- in String.cpp, line 619 replace \njstring thisString = static_cast<jstring>(static_cast<jobject>(*this));\nby \njstring thisString = static_cast<jstring>(static_cast<jobject>(String(*this)));\n\n- in libsg/core/synth/InteractionScorer.h, add : #include \"../ModelInstance.h\"  \n\n- in mlibExternal/include/cgal/segment_3.h, lines 101, 104, 107, 110, and 114 replace\n  typename cpp11::result_of<typename R::Construct_min_vertex_3(Segment_3)>::type\n  by\n  typename cpp11::result_of<typename R_::Construct_min_vertex_3(Segment_3)>::type\n  \n- in mlibExternal/include/cgal/segment_2.h, lines 104, 107, 110, 113, and 116, replace  \n  typename cpp11::result_of<typename R::Construct_min_vertex_2( Segment_2)>::type\n  by\n  typename cpp11::result_of<typename R_::Construct_min_vertex_2( Segment_2)>::type\n  \n- in libsg/vis/vislog.cpp, line 47, replace \n  m_records.push_back({now, desc, images});\n  by \n  m_records.push_back({uint64_t(now), desc, images});\n  \n- in libsg/core/LabeledGrid.cpp, line 99, replace\n    voxels[i] = { coords.x, coords.y, coords.z, label };\n\tby\n\t    voxels[i] = { int16_t(coords.x), int16_t(coords.y), int16_t(coords.z), int16_t(label) };\n\n- in mLibExternal/include/Eigen/src/core/util/Macros.h , line 309 replace \n#if defined(_MSC_VER) && (!defined(__INTEL_COMPILER))\nby\n#if defined(_MSC_VER)  && (_MSC_VER < 1900) && (!defined(__INTEL_COMPILER))\n\n* There is a number of issues due to move constructors overriding copy constructors (the copy constructor thus appears deleted), and similarly for operator-, which can be solved like :\n- in JACE/JArray.h, line 445, add a const operator- between iterators (for std::copy to work):\n\t\tIterator operator-(const Iterator &i) const {\n#ifdef JACE_CHECK_ARRAYS\n\t\t\tif (current - i.current < 0)\n\t\t\t\tthrow ::jace::JNIException(\"[JArray::Iterator::operator-] can not rewind iterator out of bounds.\");\n#endif\n\n\t\t\tIterator it(*this);\n\t\t\tit.current -= i.current;\n\t\t\treturn it;\n\t\t}\n\n- in mLib/include/core-mesh/material.h line 19, add:\nMaterial(const Material& m) = default;\nMaterial& operator=(const Material& m) = default;\n\n- in mlib/include/core-mesh/meshdata.h, line 427, add the following functions:\n\tMeshData(const MeshData& d) = default;\n\tMeshData& operator=(const MeshData& d) = default;\n\n* There is a number of issues due to vectors of const objects, which is forbidden since C++11. This can be fixed tediously and with some ugly const_cast:\n\n- in libsg/segmentation/Segmentator.cpp, line 184, replace\nvec<SegIndices> Segmentator::segment(const vec<const ml::TriMeshf>& meshes) {\nby\nvec<SegIndices> Segmentator::segment(const vec<ml::TriMeshf>& meshes) {\nand similarly in Segmentator.h line 58.\n\n- in libsg/core/Skeleton.h, line 466, replace \nstd::shared_ptr<const Skeleton> m_skel = nullptr;\nby\nstd::shared_ptr<Skeleton> m_skel = nullptr;\n\nand line 404, replace \nexplicit TransformedSkeleton(std::shared_ptr<const Skeleton> pSkel,\nby\nexplicit TransformedSkeleton(std::shared_ptr<Skeleton> pSkel,\n\nand line 408, replace \nTransformedSkeleton(const Skeleton& _skel, const ml::mat4f& _transform)\nby\nTransformedSkeleton(Skeleton& _skel, const ml::mat4f& _transform)\n\nand line 409, replace:\n    : m_skel(util::ptr_to_shared<const Skeleton,const Skeleton>(&_skel))\nby\n    : m_skel(util::ptr_to_shared<Skeleton,Skeleton>(&_skel))\n\t\n- in libsg/core/learningUtil.cpp, line 561, replace\nconst TransformedSkeleton tSkel(skel, ml::mat4f::identity());\nby\nconst TransformedSkeleton tSkel(const_cast<Skeleton&>(skel), ml::mat4f::identity());\n\n- in libsg/interaction/InteractionSet.cpp, line 168, replace \nTransformedSkeleton normalizedSkeleton(s, xform);\nby\nTransformedSkeleton normalizedSkeleton(const_cast<Skeleton&>(s), xform);\n\n- in libsg/core/learningUtil.cpp, line 115, replace\ntSkels.push_back(TransformedSkeleton(*skelInter.first, ml::mat4f::identity()));\nby\ntSkels.push_back(TransformedSkeleton(const_cast<Skeleton&>(*skelInter.first), ml::mat4f::identity()));\n\n- in libsg/core/learningUtil.cpp, line 135, replace\n      return std::make_pair(TransformedSkeleton(*x.first.getOriginalSkeleton(), perturbation), Dataset<TransformedSkeleton>::Label_NEG);\nby\n      return std::make_pair(TransformedSkeleton(const_cast<Skeleton&>(*x.first.getOriginalSkeleton()), perturbation), Dataset<TransformedSkeleton>::Label_NEG);\n\t  \n\t \n- in libsg/core/learningUtil.cpp, line 158, replace\n      tSkels.push_back(TransformedSkeleton(*skelInter.first, ml::mat4f::identity()));\n by\n\t  tSkels.push_back(TransformedSkeleton(const_cast<Skeleton&>(*skelInter.first), ml::mat4f::identity()));\n  \n- in libsg/interaction/InteractionSet.cpp, line 93, replace\n        sampledSkeletons.emplace_back(s, xform);\nby\n        sampledSkeletons.emplace_back(const_cast<Skeleton&>(s), xform);\t\t\n\t\t\n- in core/synth/SkeletonPoser.cpp line 452, replace:\n std::shared_ptr<const Skeleton> pSkel = std::make_shared<const Skeleton>(p.first);\nby\n std::shared_ptr<Skeleton> pSkel = std::make_shared<Skeleton>(p.first);\n  \n- in libsg/core/Database.h, line 24, replace\ntypedef map<const Skeleton*, vec<const InteractionRecord>> SkeletonToInteractionsMap;\nby\ntypedef map<const Skeleton*, vec<InteractionRecord>> SkeletonToInteractionsMap;\n\n- in libsg/interaction/InteractionMap.h, line 56, replace:\nconst Skeleton modelSkel = core::TransformedSkeleton(skel, worldToModelML).getSkeleton();\nby\nconst Skeleton modelSkel = core::TransformedSkeleton(const_cast<Skeleton&>(skel), worldToModelML).getSkeleton();\n\n* You need to install DirectX 10 with the proposed link. However, first you need to uninstall Visual C++ 2010 x86 and x64 redistribuables from Windows otherwise the install fails.\n\n* At this point, the C++ code compile. But I got stuck to in the instructions for the Java part, as the explanations are very limited, and require knowledge of ANT, JavaApps, SceneGrok, Jace, WekaUtil, IntelliJ IDEA, and Maven. I know none of them, and the informations provided are not sufficient to build the project. This is apparently a known issue ( https://github.com/msavva/pigraphs/issues/5 ).\n\n* I falled back to installing the VM. The VM is a 70GB bz2 file, and is stored on a moderately fast server (it took me about 34 hours to download the VM with a fast connection ; this is about 600KB/s). I thought the file was corrupted as 7zip could not extract it, so I downloaded the VM 3 times in total, with 2 different computers and internet connections. It happens that 7zip just cannot extract such big files, but bzip2 can.\n\nFinally, to run the VirtualBox, you need to deactivate Hyper-V and the Ubuntu for Windows feature, otherwise VirtualBox produces an error.",
      "Misc. comments": "",
      "Software language": "C/C++, Other"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Schrödinger's Smoke",
      "DOI": "10.1145/2897824.2925868",
      "Year": 2016,
      "ACM Keywords": [
        "Physics",
        "Partial differential equations",
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://multires.caltech.edu/pubs/SchrodingersSmoke.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://page.math.tu-berlin.de/~chern/projects/SchrodingersSmoke/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://page.math.tu-berlin.de/~chern/projects/SchrodingersSmoke/SchrodingersSmokeCode.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "86665135cba85ed9bd57c53db75eda24",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab/houdini",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The matlab scripts work out of the box. The houdini file for each figure of the paper are provided. In my houdini only the particle view was possible so the rendering was not as nice as the ones in the paper but the geometry was consistent.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .., Other"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Shadow Theatre: Discovering Human Motion from a Sequence of Silhouettes",
      "DOI": "10.1145/2897824.2925869",
      "Year": 2016,
      "ACM Keywords": [
        "Motion capture",
        "Motion processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://mrl.snu.ac.kr/research/ProjectShadowTheatre/SIGGRAPH_Paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://mrl.snu.ac.kr/research/ProjectShadowTheatre/ShadowTheatre.htm",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Learning How Objects Function via Co-Analysis of Interactions",
      "DOI": "10.1145/2897824.2925870",
      "Year": 2016,
      "ACM Keywords": [
        "Shape analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://bojianwu.github.io/projects/ICON2/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://vcc.szu.edu.cn/research/2016/ICON2/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Transfiguring Portraits",
      "DOI": "10.1145/2897824.2925871",
      "Year": 2016,
      "ACM Keywords": [
        "Computational photography",
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://homes.cs.washington.edu/~kemelmi/Transfiguring_Portraits_Kemelmacher_SIGGRAPH2016.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "An unofficial implementation that differs from the original paper by Xiaochen Fan is available at\nhttps://github.com/fanxiaochen/TransfiguringPortraits",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Globally Optimal Toon Tracking",
      "DOI": "10.1145/2897824.2925872",
      "Year": 2016,
      "ACM Keywords": [
        "Fine arts"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cse.cuhk.edu.hk/~ttwong/papers/toontrack/toontrack.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.cse.cuhk.edu.hk/~ttwong/papers/toontrack/toontrack.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "In practice, a (partial?) unofficial reimplementation has been proposed in C# https://github.com/furaga/DemoShapeComperer",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Real-time Facial Animation with Image-based Dynamic Avatars",
      "DOI": "10.1145/2897824.2925873",
      "Year": 2016,
      "ACM Keywords": [
        "Motion capture",
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.kunzhou.net/2016/imageAvatar.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Efficient GPU Rendering of Subdivision Surfaces using Adaptive Quadtrees",
      "DOI": "10.1145/2897824.2925874",
      "Year": 2016,
      "ACM Keywords": [
        "Rasterization"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://graphics.stanford.edu/~niessner/papers/2016/4subdiv/brainerd2016efficient.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.niessnerlab.org/projects/brainerd2016efficient.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "ProxImaL: Efficient Image Optimization using Proximal Algorithms",
      "DOI": "10.1145/2897824.2925875",
      "Year": 2016,
      "ACM Keywords": [
        "Regularization",
        "Computational photography",
        "Mixed discrete-continuous optimization",
        "Solvers"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://people.csail.mit.edu/jrk/proximal.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://www.proximal-lang.org/en/latest/",
      "Code URL2": "https://github.com/comp-imaging/ProxImaL",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "2804c19e141b637a5fcbf92acdcae81cab4c6d1e",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:0875c3ffb44877bc3efb060b543bb6fea31b8fce;origin=https://github.com/comp-imaging/ProxImaL/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Other script",
      "Dependencies": "numpy / scipy / pil / pip / opencv",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Works perfectly on linux. I was able to run the example but not all paper results.",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "CofiFab: Coarse-to-Fine Fabrication of Large 3D Objects",
      "DOI": "10.1145/2897824.2925876",
      "Year": 2016,
      "ACM Keywords": [
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://songpenghit.github.io/Publication/projects/2016-SIGGRAPH-CofiFab/download/paper.highres.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://songpenghit.github.io/Publication/projects/2016-SIGGRAPH-CofiFab/index.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "A Semi-Implicit Material Point Method for the Continuum Simulation of Granular Materials",
      "DOI": "10.1145/2897824.2925877",
      "Year": 2016,
      "ACM Keywords": [
        "Physical simulation",
        "Simulation by animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.inrialpes.fr/bipop/people/bertails/Papiers/PDF/mpmGranular.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.inria.fr/hal-01310189",
      "Project URL": "http://bipop.inrialpes.fr/~bertails/Papiers/mpmGranular.html",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://bipop.inrialpes.fr/people/gdaviet/code/sand6/",
      "Code URL2": "",
      "MD5 sum (for archives)": "af71b60d51c506d2e440203458f47d36",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "GPL",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Makefile, CMakeLists",
      "Dependencies": "Eigen/so-bogus/boost-serialization/libqglviewer(opt)",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "scene configurations provided for the examples presented in the paper.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Seamless Visual Sharing with Color Vision Deficiencies",
      "DOI": "10.1145/2897824.2925878",
      "Year": 2016,
      "ACM Keywords": [
        "3D imaging",
        "Image processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cse.cuhk.edu.hk/~ttwong/papers/colorblind/colorblind_lowres.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.cse.cuhk.edu.hk/~ttwong/papers/colorblind/colorblind.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Emulating Displays with Continuously Varying Frame Rates",
      "DOI": "10.1145/2897824.2925879",
      "Year": 2016,
      "ACM Keywords": [
        "Perception",
        "Image processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://resources.mpi-inf.mpg.de/FrameRateEmulation/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://resources.mpi-inf.mpg.de/FrameRateEmulation/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Subdivision Exterior Calculus for Geometry Processing",
      "DOI": "10.1145/2897824.2925880",
      "Year": 2016,
      "ACM Keywords": [
        "Computations in finite fields",
        "Discretization"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.geometry.caltech.edu/pubs/DDMD16.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://graphics.pixar.com/library/SEC/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Terrain-Adaptive Locomotion Skills Using Deep Reinforcement Learning",
      "DOI": "10.1145/2897824.2925881",
      "Year": 2016,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.ubc.ca/~van/papers/2016-TOG-deepRL/2016-TOG-deepRL.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.cs.ubc.ca/~van/papers/2016-TOG-deepRL/index.html",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/xbpeng/DeepTerrainRL",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "ed82e2ebe5f14fa875cc3d0a2180c64980408e8f",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:69bbf02061f306120950c13095ecc81cd231bab3;origin=https://github.com/xbpeng/DeepTerrainRL/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "LGPL",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "premake",
      "Dependencies": "caffe/boost/opencv/eigen/BulletPhysics/CUDA/Json_cpp/bits/glut/lodepng/",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 1,
      "Build/configure score {0=NA, 1,2,3,4,5}": 1,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The provided code comes with many dependencies, which are supposedly handled using premake4.\n\nOn windows, I could generate a solution for Visual Studio by calling premake.exe vs2012 from the source code directory (call to more recent versions of VS did not work). I couldn't build the solution, as premake didn't populate the include, build and link directives for the dependencies. I tried to fix it, but I couldn't find a way to properly handle caffe and its dependencies.\n\nI got similar problems on linux, where I could generate a Makefile by calling premake gmake, but I had too many dependencies to fix when calling  make config=debug64.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Anatomically-Constrained Local Deformation Model for Monocular Face Capture",
      "DOI": "10.1145/2897824.2925882",
      "Year": 2016,
      "ACM Keywords": [
        "Motion capture"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://studios.disneyresearch.com/wp-content/uploads/2019/03/Anatomically-Constrained-Local-Deformation-Model-for-Monocular-Face-Capture.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Mapping Virtual and Physical Reality",
      "DOI": "10.1145/2897824.2925883",
      "Year": 2016,
      "ACM Keywords": [
        "Virtual reality"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://www.researchgate.net/publication/305217688_Mapping_virtual_and_physical_reality",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://1iyiwei.github.io/mvpr-sig16/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Artist-Directed Dynamics for 2D Animation",
      "DOI": "10.1145/2897824.2925884",
      "Year": 2016,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cc.gatech.edu/~ybai30/artistic_dynamics/artistic_dynamics_sig16.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.cc.gatech.edu/~ybai30/artistic_dynamics/artistic_dynamics.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "An Interaction-Aware, Perceptual Model for Non-Linear Elastic Objects",
      "DOI": "10.1145/2897824.2925885",
      "Year": 2016,
      "ACM Keywords": [
        "Physical simulation",
        "Perception",
        "User studies"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://cfg.mit.edu/sites/cfg.mit.edu/files/An-interaction-Aware-Perceptual-Model-for-Non-Linear-Elastic-Objects-Paper_0.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://pdf.mmci.uni-saarland.de/projects/ComplianceModel/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "Neither code nor experimental data is available. The corresponding experiment involves 20 subject performing 78 trials on various 3d printed blocks.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Non-Linear Shape Optimization Using Local Subspace Projections",
      "DOI": "10.1145/2897824.2925886",
      "Year": 2016,
      "ACM Keywords": [
        "Computational geometry",
        "Mesh geometry models",
        "Nonconvex optimization"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.graphics.rwth-aachen.de/media/papers/modes2016_camready.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.cg.tuwien.ac.at/research/publications/2016/musialski_2016_sosp/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://www.cg.tuwien.ac.at/research/publications/2016/musialski_2016_sosp/musialski_2016_sosp-code.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "5AC29256E4AE1B1A723D39D9C08D8456",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 2,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The code directly runs without modifications. However:\n- there are compiled mex files for which no source code is provided. For the obj file reader it is not a big deal, but for the mass moments and their gradient, it makes it harder to reimplement.\n- the code reproduces the armadillo in Fig. 17, but the other models are not provided.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Legible Compact Calligrams",
      "DOI": "10.1145/2897824.2925887",
      "Year": 2016,
      "ACM Keywords": [
        "Parametric curve and surface models",
        "Shape analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.sfu.ca/~haoz/pubs/zou_sig16_calli.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Designing Structurally-Sound Ornamental Curve Networks",
      "DOI": "10.1145/2897824.2925888",
      "Year": 2016,
      "ACM Keywords": [
        "Shape modeling",
        "Physical simulation",
        "Geometric topology"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www-labs.iro.umontreal.ca/~bernhard/PDF/CurveNetworks.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://disneyresearch.com/publication/designing-structurally-sound-ornamental-curve-networks/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Real-time Rendering on a Power Budget",
      "DOI": "10.1145/2897824.2925889",
      "Year": 2016,
      "ACM Keywords": [
        "Rendering"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cad.zju.edu.cn/home/rwang/projects/power-optimization/16power.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cad.zju.edu.cn/home/rwang/projects/power-optimization/power.html#powerparam",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The project website indicates the code is coming soon.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Bijective Maps from Simplicial Foliations",
      "DOI": "10.1145/2897824.2925890",
      "Year": 2016,
      "ACM Keywords": [
        "Mesh geometry models",
        "Volumetric models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.graphics.rwth-aachen.de/media/papers/Campen2016_SimplicialFoliations_9vLSbPA.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 3,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The algorithm seems rather easy to implement (a couple of self-contained lines) but only produce the direction field. But hidden behind this simplicity are less trivial tricks (e.g., the paper mentions that the choice of the next free simplex is guided by a harmonic field, which requires solving a linear system ; the field is further processed by a Laplacian smoothing operator...), which is why I didn't rate the algorithm higher in simplicity.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Time-varying Weathering in Texture Space",
      "DOI": "10.1145/2897824.2925891",
      "Year": 2016,
      "ACM Keywords": [
        "Image processing",
        "Texturing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.tau.ac.il/~dcor/articles/2016/TW.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Rigel: Flexible Multi-Rate Image Processing Hardware",
      "DOI": "10.1145/2897824.2925892",
      "Year": 2016,
      "ACM Keywords": [
        "Image processing",
        "Hardware description languages and compilation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://graphics.stanford.edu/papers/rigel/rigel.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://graphics.stanford.edu/papers/rigel/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/jameshegarty/rigel",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "a1987b3f3918cddb913c509627e7afd09763a2d7",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:25c26227b0d664123227191bb2bbcd7e37b9e9f2;origin=https://github.com/jameshegarty/rigel/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "None",
      "Dependencies": "luajit/verilato(opt)/terra(opt)",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 2,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "I was able to run the software and the examples, but no demo due to terra (optional dependency) failure. The examples of the paper might be in the demo but I was unable to check.",
      "Misc. comments": "",
      "Software language": "Other"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Task-based Locomotion",
      "DOI": "10.1145/2897824.2925893",
      "Year": 2016,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.ubc.ca/~van/papers/2016-TOG-taskBasedLocomotion/2016-TOG-taskBasedLocomotion.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.cs.ubc.ca/~van/papers/2016-TOG-taskBasedLocomotion/index.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Crowd-driven Mid-scale Layout Design",
      "DOI": "10.1145/2897824.2925894",
      "Year": 2016,
      "ACM Keywords": [
        "Modeling and simulation",
        "Computational geometry"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.kunzhou.net/2016/layout-sig16.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.saikit.org/projects/layout/index.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Real-Time Polygonal-Light Shading with Linearly Transformed Cosines",
      "DOI": "10.1145/2897824.2925895",
      "Year": 2016,
      "ACM Keywords": [
        "Reflectance modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://drive.google.com/file/d/0BzvWIdpUpRx_d09ndGVjNVJzZjA/view",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://eheitzresearch.wordpress.com/415-2/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://blog.selfshadow.com/publications/ltc/ltc_demo.zip",
      "Code URL2": "https://github.com/selfshadow/ltc_code",
      "MD5 sum (for archives)": "27006bf8b052b1b032a1da065fa46abf",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "BSD",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Makefile",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The demo code compiles and run perfectly on linux. The webGL demo is also perfectly working.\n\nThe C++ project does not compile on macOS  (make osx):\n\n/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks/AppKit.framework/Headers/NSViewController.h:247:39: fatal error:\n      unknown type name 'NSExtensionContext'; did you mean 'NSAnimationContext'?",
      "Misc. comments": "",
      "Software language": "C/C++, Shader language"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Physics-driven pattern adjustment for direct 3D garment editing",
      "DOI": "10.1145/2897824.2925896",
      "Year": 2016,
      "ACM Keywords": [
        "Mesh models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.ubc.ca/labs/imager/tr/2016/PhysicsDrivenPatternAdjustment/hybrids.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.ubc.ca/labs/imager/tr/2016/PhysicsDrivenPatternAdjustment/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Multiphase SPH Simulation for Interactive Fluids and Solids",
      "DOI": "10.1145/2897824.2925897",
      "Year": 2016,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://cg.cs.tsinghua.edu.cn/papers/SIG_2016_Multiphase.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Volume-encoded UV-maps",
      "DOI": "10.1145/2897824.2925898",
      "Year": 2016,
      "ACM Keywords": [
        "Texturing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://vcg.isti.cnr.it/volume-encoded-uv-maps/volume-encoded-uv-maps.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://vcg.isti.cnr.it/volume-encoded-uv-maps/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://vcg.isti.cnr.it/volume-encoded-uv-maps/volume-encoded-uv-maps.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "229f21cd3693561ffa49b527b6aa9e3f",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "qmake .pro file",
      "Dependencies": "qt/opengl/glew",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The loaded mesh are displayed as lines, which is probably due to some formatting issue but I was  therefore unable to run the provided examples (the uv textures are displayed correctly but not the meshes). To run the app, I had to export the plugins location before launching the exec: export QT_QPA_PLATFORM_PLUGIN_PATH=/usr/lib/x86_64-linux-gnu/qt5/plugins/",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Surface-Only Liquids",
      "DOI": "10.1145/2897824.2925899",
      "Year": 2016,
      "ACM Keywords": [
        "Physical simulation",
        "Continuous simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.columbia.edu/cg/surfaceliquids/droplets.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.columbia.edu/cg/surfaceliquids/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://www.cs.columbia.edu/cg/surfaceliquids/code/Droplet3D.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "9b4b2ab1346a655b5f1382e12c397d1c",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "FreeBSD",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "Eigen/GLFW3",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "had to modify the CMakeLists. Added two lines: find_package(glfw3 REQUIRED)\nset (DEFAULT_LIBRARIES ${DEFAULT_LIBRARIES} glfw) to link against glfw. I run a simulation using the file provided in assets/droplet3d: with command line: Droplet3D crownsplash.txt for example. The simulation runs, a wireframe mesh is displayed. However the renderings are very far from the ones in the paper.\nFor crownsplash I had the following error: [MeshIO::load] Error: file init/crownsplash.rec not found.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Computational Design of Reconfigurables",
      "DOI": "10.1145/2897824.2925900",
      "Year": 2016,
      "ACM Keywords": [
        "Computer graphics"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.columbia.edu/cg/reconfigurables/computational-design-of-reconfigurables-siggraph-2016-garg-et-al.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.columbia.edu/cg/reconfigurables/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Mesh Arrangements for Solid Geometry",
      "DOI": "10.1145/2897824.2925901",
      "Year": 2016,
      "ACM Keywords": [
        "Computer graphics"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.columbia.edu/cg/mesh-arrangements/mesh-arrangements-for-solid-geometry-siggraph-2016-zhou-et-al.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.columbia.edu/cg/mesh-arrangements/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://libigl.github.io/tutorial/#boolean-operations-on-meshes",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "87b54fc4dcc5aea182dd842a55ac75536fb69e1a",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:aafd35d543dcc17f9597ae4fb5a74a9b31d1569f;origin=https://github.com/libigl/libigl/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MPL2",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "CGAL",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Mac OS",
      "Build instructions/comments": "The code is given as a part of the libigl library. A specific tutorial example (#609) illustrates the boolean operation on meshes described in the paper. The core of paper results can thus be reproduced but not all of them (some are application dependent).",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Fast approximations for boundary element based brittle fracture simulation",
      "DOI": "10.1145/2897824.2925902",
      "Year": 2016,
      "ACM Keywords": [
        "Physical Simulation",
        "Integral Equations"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://pub.ist.ac.at/group_wojtan/projects/2016_Hahn_FastFracture/download/2016_Hahn_FastFracture.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://pub.ist.ac.at/group_wojtan/projects/2016_Hahn_FastFracture/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/david-hahn/FractureRB",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "2276349f0a2dcb4ad84c169b90809deed90fed46",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:150131b6cd2ebed61692940d341d712d96c4bdf6;origin=https://github.com/david-hahn/FractureRB/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "GPL",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "Openvdb/eigen/zlib/tbb/HyENA",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 3,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "I was unable to compile. I fixed the CMakeLists to include HyENA (provided as a .so library) and openvdb as well as zlib, tbb and eigen properly, so configuration works. However the version of openvdb is not compatible: MeshToVolume is not a type anymore in openvdb and I was not able to find the corresponding type (FractureRB/src/VDBWrapper.cpp:78:16: error: ‘MeshToVolume’ is not a member of ‘openvdb::v5_0::tools’).",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Entropic Metric Alignment for Correspondence Problems",
      "DOI": "10.1145/2897824.2925903",
      "Year": 2016,
      "ACM Keywords": [
        "Shape analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://people.csail.mit.edu/jsolomon/assets/gw.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.archives-ouvertes.fr/hal-01305808",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/gpeyre/2016-SIGGRAPH-gw",
      "Code URL2": "https://people.csail.mit.edu/jsolomon/assets/gromovWassersteinDistance.m",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "1408f9d04d6ca833f363ea24db741e5d59c5e227",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:1408f9d04d6ca833f363ea24db741e5d59c5e227;origin=https://github.com/gpeyre/2016-SIGGRAPH-gw/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab / cvx / labelpoints / toolbox_fast_marching",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 3,
      "Build/configure score {0=NA, 1,2,3,4,5}": 3,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 3,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 8,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The code would be a model in term of replicability as there is one matlab file for each figure in the paper.\nTo install the code, put the toolbox_fast_marching directory and labelpoints.m inside the external folder, and for some matlab files, install the CVX toolbox, which is done easily. You may need to recompile the toolbox_fast_marching in 64bits, which can be done by running compile_mex from the toolbox folder. \n\nHowever, for the toolbox to compile, you will need to change \nint dims[3] = {n,p,q};\nto\nmwSize dims[3] = {n,p,q};\nin perform_front_propagation_3d_mex.cpp, line 86.\n\nAlso in compile_mex.m, you need to change line 7, from\nmex mex/anisotropic-fm//perform_front_propagation_anisotropic.cpp\nto\nmex mex/perform_front_propagation_anisotropic.cpp\nAlso, in perform_front_propagation_anisotropic.cpp, lines 2-3, change \n#include \"anisotropic-fm/AnisotropicTensorDistance.h\"\n#include \"anisotropic-fm/AnisotropicTensorDistanceConfidence.h\"\nto\n#include \"anisotropic-fm-feth/AnisotropicTensorDistance.h\"\n#include \"anisotropic-fm-feth/AnisotropicTensorDistanceConfidence.h\"\nand more importantly download these missing files at http://read.pudn.com/downloads144/sourcecode/windows/system/627786/toolbox_fast_marching/mex/anisotropic-fm/AnisotropicTensorDistance.h__.htm\nhttp://read.pudn.com/downloads144/sourcecode/windows/system/627786/toolbox_fast_marching/mex/anisotropic-fm/AnisotropicTensorDistanceConfidence.h__.htm\n\nBeware the version at\nhttps://gforge.inria.fr/scm/viewvc.php/gcm/src/AnisotropicTensorDistanceConfidence.h?revision=10&view=co\ndoes not contain the appropriate constructor that takes a voronoi map as input.\n\nSimilarly, the missing GenericPradosSchemesForFastMarching_3D.h , Globals.h , FastMarching_WithOptimalDynamics.h , FastMarching.h, PriorityQueue.h can be downloaded at \nhttp://read.pudn.com/downloads144/sourcecode/windows/system/627786/toolbox_fast_marching/mex/anisotropic-fm/GenericPradosSchemesForFastMarching_3D.h__.htm\nhttps://gforge.inria.fr/scm/viewvc.php/gcm/src/Globals.h?revision=10&view=co\nhttp://read.pudn.com/downloads144/sourcecode/windows/system/627786/toolbox_fast_marching/mex/anisotropic-fm/FastMarching_WithOptimalDynamics.h__.htm\nhttp://read.pudn.com/downloads144/sourcecode/windows/system/627786/toolbox_fast_marching/mex/anisotropic-fm/FastMarching.h__.htm\nand be put in the same directory.\n\n- in perform_front_propagation_anisotropic.cpp line 45, replace\nint dims[3] = {w, h, d};\nby\nmwSize dims[3] = {w, h, d};\n\n- in fm2dAniso.cpp line 15, replace\nconst int* dim_h = mxGetDimensions(prhs[0]);\nby\nconst mwSize* dim_h = mxGetDimensions(prhs[0]);\n\n- in fm2dAniso.cpp line 45:\nint dims[2] = {Nx,Ny};\nto\nmwSize dims[2] = {Nx,Ny};\n\nThe necessary \"data\" folder is only available upon request due to copyrighted materials. We did not contact authors in such cases.\nIn practice, the following codes run without data folder: generateConvexFigure, generateInitialGuessFigure2, generateTimingFigure, testGWComputation2d, testNNMF, testPartial2DMatch (out of 33 test files).\nWhen running generateMeshExampleFigure with my own .off files, I run into an \"Undefined function 'sparse' for input arguments of type 'int64') which can be solved by addin \"|| ...\n   strcmp(version,'9.4.0.813654 (R2018a)')\" in line 54 of cotLaplacian.m (or type 'version' to know your matlab version).\n\nAfter that, the code works well and results in reasonables mappings.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Toward Animating Water with Complex Acoustic Bubbles",
      "DOI": "10.1145/2897824.2925904",
      "Year": 2016,
      "ACM Keywords": [
        "Physical simulation",
        "Continuous simulation",
        "Massively parallel and high-performance simulations"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.cornell.edu/projects/Sound/bubbles/bubbles.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.cs.cornell.edu/projects/Sound/bubbles/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://www.cs.cornell.edu/projects/Sound/bubbles/bubbleDemo.py",
      "Code URL2": "",
      "MD5 sum (for archives)": "14982ff2d636bc86596d4edc86e93a8e",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "simpleaudio /wavefile/libsndfile",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 2,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The demo only illustrates the frequency shift experienced by bubbles, and not the other simulations described in the paper.",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Efficient dynamic skinning with low-rank helper bone controllers",
      "DOI": "10.1145/2897824.2925905",
      "Year": 2016,
      "ACM Keywords": [
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://mukai-lab.org/content/S2016Mukai.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://mukai-lab.org/publications/siggraph2016/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Drucker-Prager Elastoplasticity for Sand Animation",
      "DOI": "10.1145/2897824.2925906",
      "Year": 2016,
      "ACM Keywords": [
        "Physical simulation",
        "Continuous simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.seas.upenn.edu/~cffjiang/research/sand/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "There may exist an unofficial implementation by Ziwei Zhu at https://github.com/2iw31Zhv/AnisotropicElastoplasticity",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Live intrinsic video",
      "DOI": "10.1145/2897824.2925907",
      "Year": 2016,
      "ACM Keywords": [
        "Computational photography",
        "Mixed / augmented reality"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://gvv.mpi-inf.mpg.de/projects/LiveIntrinsicVideo/LiveIntrinsicVideo_Paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://richardt.name/publications/live-intrinsic-video/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Automatic Triage for a Photo Series",
      "DOI": "10.1145/2897824.2925908",
      "Year": 2016,
      "ACM Keywords": [
        "Computational photography",
        "Image processing",
        "Neural networks",
        "Content ranking"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://juew.org/publication/sig16-triage.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://gfx.cs.princeton.edu/pubs/Chang_2016_ATF/index.php",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://phototriage.cs.princeton.edu/data/vggsms.zip",
      "Code URL2": "https://phototriage.cs.princeton.edu/data/alexsms.zip",
      "MD5 sum (for archives)": "562b3802e8b454a46c44e324c9a68704",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "caffe",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "I managed to install all the dependencies and prepare the data using the provided scripts.\nI could also call the train.py script (requires 30GB of RAM), unfortunately after several hours of training, the script ended but didn't generate the file weights.hdf5. As such, I couldn't evaluate the network.\nNote that two models are provided by the authors online (https://phototriage.cs.princeton.edu/download.html), but there is no indication on how to use them in practice.",
      "Misc. comments": "",
      "Software language": "Other"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Resolving Fluid Boundary Layers with Particle Strength Exchange and Weak Adaptivity",
      "DOI": "10.1145/2897824.2925910",
      "Year": 2016,
      "ACM Keywords": [
        "Physical simulation",
        "Partial differential equations"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.ubc.ca/~rbridson/docs/zhang-siggraph2016-whirp_vflip.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/zhxx1987/IVOCK",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "c3c2079787b095379a5510dc24ef5000eb37a287",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:c3c2079787b095379a5510dc24ef5000eb37a287;origin=https://github.com/zhxx1987/IVOCK/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "GPL",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "IDE Project (VS,..)",
      "Dependencies": "TBB / glew",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 3,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 3,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The code comes with a solver, a particle simulator and a particle renderer that renders the simulation. Compiling the code required a number of steps (under Visual Studio 2017):\n* for the TBB_Multigrid project, you need to set the TBBROOT environment variable to your TBB path.\n\n* for the Smoke_Solver project:\n- in Smoke_Solver.vcxproj, the tbb props file should be updated to mach your TBB_Multigrid path (since the props file is shipped) and some paths that are hardcoded (e.g., C:\\Users\\xinxin\\Dropbox\\xinxin_code\\TBB_Multigrid\\TBB_Multigrid ) should be updated.\n- same process for particle_renderer.vcproj.xinxin-PC.xinxin\n- in TBB_SETTINGS.props, change glew64 to glew32 (?)\n- the projects can then be loaded (and possibly retargeted) in Visual Studio.\n\n- In util.h of both Smoke_Solver and particle_renderer projects, you need to comment out the function lround line 197--203\n- You should add the path to the libraries for glew (and use glew32 instead of glew64 ?),  freeglut and tbb\n\n- to read the resulting sgi files, you can download the sgi plugin for photoshop (put the plugin in C:\\Program Files\\Adobe\\Adobe Photoshop CC 2019\\Plug-ins and restard photoshop)\n\nUltimately, the simulation runs smoothly and produces files that consist in the particles for each time frame.\nThe renderer is not documented and hard to play with. Using wrong values can lead to extreme times (I had a rendering compute for 67 hours and resulting in a constant blueish image ; some renderings just crash using a wrong \"quality_factor\" value which makes gigantic shadow maps...). Using the following values worked well:\n.\\particle_renderer.exe [path to frames] 0.01 0.01 0.1 10 10 10 10 150 180\n(where here 150--180 renders frames from 150 to 180).",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Synthesis of Filigrees for Digital Fabrication",
      "DOI": "10.1145/2897824.2925911",
      "Year": 2016,
      "ACM Keywords": [
        "Shape modeling",
        "Physical simulation",
        "Geometric topology"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://i.cs.hku.hk/~wkchen/projects/papers/weikai_sig16_filigree_final.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.inria.fr/hal-01401520",
      "Project URL": "https://i.cs.hku.hk/~wkchen/projects/proj_sig16.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "There are two moderately difficult algorithms in the paper, but they do not implement all the steps of the synthesis pipeline.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Adjoint-Driven Russian Roulette and Splitting in Light Transport Simulation",
      "DOI": "10.1145/2897824.2925912",
      "Year": 2016,
      "ACM Keywords": [
        "Rendering"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://cgg.mff.cuni.cz/~jaroslav/papers/2016-adrrs/2016-vorba-adrrs-paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://cgg.mff.cuni.cz/~jaroslav/papers/2016-adrrs/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Point Registration via Efficient Convex Relaxation",
      "DOI": "10.1145/2897824.2925913",
      "Year": 2016,
      "ACM Keywords": [
        "Shape analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://shaharkov.github.io/projects/ProcrustesMatchingSDP_lowres.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://www.wisdom.weizmann.ac.il/~itayke/assets/pm-code.zip",
      "Code URL2": "http://www.wisdom.weizmann.ac.il/~haggaim/projects/point_registration/code.zip",
      "MD5 sum (for archives)": "477BEE2C000B0E5D55BE47D73C5332B5",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 3,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 6,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "A few steps to make the program run on Windows+Matlab R2018a:\n- in all test files, replace\naddpath(genpath('~/mosek'))\naddpath(genpath('~/yalmip'))\nby the actual paths, e.g., \naddpath(genpath('C:\\Program Files\\Mosek\\9.1\\toolbox\\R2015a'))\naddpath(genpath('C:\\libs\\YALMIP-master'))\n\nand similarly for the toolbox_graph (downloadable at https://fr.mathworks.com/matlabcentral/fileexchange/5355-toolbox-graph ) or the FAUST data (e.g., addpath('C:\\ICCV_2015_source_code\\training\\watertight_5000') )\n\n- in interleaving.m, line 82, replace\n X_proj = reshape( intlinprog(fObj,intcon,[],[],A_ds,b_ds,lb,ub,options ), n, n );\n by\n  X_proj = reshape( intlinprog(fObj,intcon,[],[],A_ds,b_ds,lb,ub,struct(options) ), n, n );\n\n - in interleaving.m, line 97, replace \n X_proj = reshape( intlinprog(fObj,intcon,[],[],A_ds,b_ds,lb,ub,options ), n, n );\n by\n X_proj = reshape( intlinprog(fObj,intcon,[],[],A_ds,b_ds,lb,ub,struct(options) ), n, n );\n\nWhile this produces a warning, this prevents an error in Mosek's intlinprog at line 135\n  options          = mskoptimset(defaultopt,options)\n  \n- Make sure you have about 10GB of free RAM, otherwise Mosek crashes.\n- If you installed Mosek after having installed Yalmip and already run the code unsuccessfully, make sure to \"clear CACHED_SOLVERS\" otherwise Mosek won't be found by Yalmip as the available solvers are cached.\n \nThe Faust dataset is at http://faust.is.tue.mpg.de/ (though I don't think the original dataset is needed) and the iccv code has moved from web.stanford.edu/~cqf/convex to   https://cqf.io/convex/\n\nThe different tests for 'synthetic', 'faust' and 'scape' run smoothly and produce the expected matchings. I did not test the last script, testPMSDP_scapeRawScans, since it requires manually preprocessing the SCAPE dataset with the ICCV code.\n\nAnother run on Linux produced similar results.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Computational Thermoforming",
      "DOI": "10.1145/2897824.2925914",
      "Year": 2016,
      "ACM Keywords": [
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://igl.ethz.ch/projects/thermoforming/computational-thermoforming-2016.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://igl.ethz.ch/projects/thermoforming/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://igl.ethz.ch/projects/thermoforming/thermoforming-supplemental.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "F139BE5FAB41A2821D9BF2F5519BD26D",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Partial Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "Maple",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The code consists in two Maple worksheets that generate C code. \n- membraneEnergy.mw generates the membrane energy, its gradient, Hessian and differentials\n- bendingEnergy.mw : same things for the bending energy.\nCreate a codegen subdirectory, otherwise it doesn't work. A calibration pattern is also provided.\nThe generated codes are of course not self-contained, are not really readable, and are just part of the software used to produce the paper results.",
      "Misc. comments": "",
      "Software language": "Other"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Position-Normal Distributions for Efficient Rendering of Specular Microstructure",
      "DOI": "10.1145/2897824.2925915",
      "Year": 2016,
      "ACM Keywords": [
        "Reflectance modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://cseweb.ucsd.edu/~ravir/glints.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "In practice, a renderman reimplementation by Mariano Merchante is available here: https://github.com/mmerchante/glitterman",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Pose-Space Subspace Dynamics",
      "DOI": "10.1145/2897824.2925916",
      "Year": 2016,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://run.usc.edu/multiModal/XuBarbic-SIGGRAPH2016.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://run.usc.edu/multiModal/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Reflectance Modeling by Neural Texture Synthesis",
      "DOI": "10.1145/2897824.2925917",
      "Year": 2016,
      "ACM Keywords": [
        "Reflectance modeling",
        "Texturing",
        "Neural networks"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://mediatech.aalto.fi/publications/graphics/NeuralSVBRDF/aittala2016_siggraph.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://mediatech.aalto.fi/publications/graphics/NeuralSVBRDF/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Wasserstein Barycentric Coordinates: Histogram Regression Using Optimal Transport",
      "DOI": "10.1145/2897824.2925918",
      "Year": 2016,
      "ACM Keywords": [
        "Transportation",
        "Automatic Differentiation",
        "Computer Graphics"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://perso.liris.cnrs.fr/nicolas.bonneel/WassersteinBarycentricCoordinates/WBC.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.archives-ouvertes.fr/hal-01303148",
      "Project URL": "https://perso.liris.cnrs.fr/nicolas.bonneel/WassersteinBarycentricCoordinates/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://perso.liris.cnrs.fr/nicolas.bonneel/WassersteinBarycentricCoordinates/CodeWBC.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "f0c73dbc0f0fa9fc454b49e9e3c09dc5",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "GPL",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Makefile",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "To compile with the provided Makefile, I had to replace line28 in inverseWasserstein.h by #include \"lbfgs/lbfgs.h\", and in lbfgs/lbgs.cpp replace line 73 by #include \"lbfgs.h\" . The code for the applications presented in the paper is not available.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Preserving Geometry and Topology for Fluid Flows with Thin Obstacles and Narrow Gaps",
      "DOI": "10.1145/2897824.2925919",
      "Year": 2016,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.inf.ufrgs.br/~oliveira/pubs_files/CutCell/Azevedo_Batty_Oliveira_SIGG_2016.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.inf.ufrgs.br/~oliveira/pubs_files/CutCell/CutCell_page.html#Downloads",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The algorithm is a high level description of the process with respect to how sections are organized in the paper.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Accelerated Quadratic Proxy for Geometric Optimization",
      "DOI": "10.1145/2897824.2925920",
      "Year": 2016,
      "ACM Keywords": [
        "Mesh models",
        "Nonconvex optimization"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://shaharkov.github.io/projects/AcceleratedQuadraticProxy.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://shaharkov.github.io/AcceleratedQuadraticProxy.html",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/shaharkov/AcceleratedQuadraticProxy",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "03ffc67b2fdfaa48fa0e08c7857d729e0b68116b",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:4d08318092ccaa7af2d59b590d7fae7ff89ae218;origin=https://github.com/shaharkov/AcceleratedQuadraticProxy/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab / eigen / libigl",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "To compile it under linux: in compileAllMex.m set up the right paths for Eigen and libigl. Then to run the examples change the path formating to be linux-compatible: replace 'data\\paper_deformation_2d_gecko_wConstraints.mat' by 'data/paper_deformation_2d_gecko_wConstraints.mat' for example (similar changes for all example scripts. Up to proper mesh visualization, the results are similar to the ones in the paper in both 2D and 3D.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Cinema 3D: Large Scale Automultiscopic Display",
      "DOI": "10.1145/2897824.2925921",
      "Year": 2016,
      "ACM Keywords": [
        "Displays and imagers"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.wisdom.weizmann.ac.il/~netefrat/cinema3D/files/paperMain_low.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.wisdom.weizmann.ac.il/~netefrat/cinema3D/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "There is no code as this paper is about hardware. However, there is a detailed description of hardware in the supplemental material, including .stl files, and the hardware seems simple enough to be reproducible (2 parallax barriers or lenticular sheets).",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Procedural Voronoi Foams for Additive Manufacturing",
      "DOI": "10.1145/2897824.2925922",
      "Year": 2016,
      "ACM Keywords": [
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://hal.archives-ouvertes.fr/hal-01393741/file/MDL16.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.archives-ouvertes.fr/hal-01393741/",
      "Project URL": "https://sites.google.com/site/jonasmartinezbayona/procvorfoam",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://www.google.com/url?q=https%3A%2F%2Fwww.dropbox.com%2Fs%2F7d7yy73sv4j8afd%2FMDL16_supplemental.zip&sa=D&sntz=1&usg=AFQjCNHuAO1nrjCovuLJryKh9kIANIWSqg",
      "Code URL2": "",
      "MD5 sum (for archives)": "b841a00f7c24180eb6b3c688d9ee929a",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Other script",
      "Dependencies": "numpy / matplotlib",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 2,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Mac OS",
      "Build instructions/comments": "The provided code is related to a subproblem (adaptive sampling to generate seeds) and not to the core of the paper. Many pseudo-code are given which suggest non trivial but easy reimplementation of the method.",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "A System for Rapid Exploration of Shader Optimization Choices",
      "DOI": "10.1145/2897824.2925923",
      "Year": 2016,
      "ACM Keywords": [
        "Graphics systems and interfaces"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://graphics.cs.cmu.edu/projects/spire/he16_spire.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://graphics.cs.cmu.edu/projects/spire/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/csyonghe/Spire",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "727250ed0568b464a48101658a1d7ef9a258e77d",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:d241670484b8f199a30bf8877aff9c283a6a1734;origin=https://github.com/csyonghe/Spire/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "IDE Project (VS,..)",
      "Dependencies": "DirectX",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Needed to add missing directive #include <intrin.h> in hello.cpp to compile.\n\nAt runtime, DirectX throws the following error (from hello.cpp:180): \nD3D11 ERROR: ID3D11Device::CreateInputLayout: The provided input signature expects to read an element with SemanticName/Index: 'position'/0, but the declaration doesn't provide a matching name. [ STATE_CREATION ERROR #163: CREATEINPUTLAYOUT_MISSINGELEMENT]\n\nI couldn't debug this error, as I didn't know if the matching problem came from the input spire shader, or from the processes in spire that convert the spire shader to a DirectX shader.\n\nNote that the follow-up Slang (Sigg 2018) is however marked as reproducible.",
      "Misc. comments": "",
      "Software language": "C/C++, Shader language"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "G1 Non-Uniform Catmull-Clark Surfaces",
      "DOI": "10.1145/2897824.2925924",
      "Year": 2016,
      "ACM Keywords": [
        "Parametric curve and surface models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://staff.ustc.edu.cn/~lixustc/Figs/2016_Eigen.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "ZoeMatrope: a system for physical material design",
      "DOI": "10.1145/2897824.2925925",
      "Year": 2016,
      "ACM Keywords": [
        "Virtual reality",
        "Systems and tools for interaction design",
        "Displays and imagers"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://ishikawa-vision.org/vision/ZoeMatrope/index-e.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "Paper unavailable on the authors websites.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Bounded distortion harmonic shape interpolation",
      "DOI": "10.1145/2897824.2925926",
      "Year": 2016,
      "ACM Keywords": [
        "Animation",
        "Image manipulation",
        "Shape analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://people.mpi-inf.mpg.de/~chen/papers/bdhi.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://people.mpi-inf.mpg.de/~chen/bdh.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "1EB42B53494A8E10BD7D8CD66E163FB7",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "IDE Project (VS,..), Not applicable (python, Matlab..)",
      "Dependencies": "cvx/mosek/glsl/opengl",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 2,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 2,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Launching the code using the compiled .exe gui is easy and runs smoothly. Just add mosek to matlab's path using\naddpath('C:\\Program Files\\Mosek\\9.1\\toolbox\\R2015a')\n\nHowever, if one want to recompile the gui, it is more involved.\nSome include paths are hardcoded, and you need to add the include path for eigen, freeglut, anttweakbar, and matlab includes (D:\\MatlabR2018a\\extern\\include) to the Visual Studio project.\nI had to recompile freeglut in multithread instead of multithread dll (in the code generation settings) otherwise I had linker errors.\n\nThen, due to changes in the support of complex variables in Matlab 2018a, you need to change a couple of functions:\n- in matlab_utils.h line 335, replace \n    v.real() = Eigen::Map<const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor> >(mxGetPr(m), dim[0], dim[1]);\n\n    if (mxIsComplex(m))\n        v.imag() = Eigen::Map<const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor> >(mxGetPi(m), dim[0], dim[1]);\n    else\n        v.imag().setZero();\nby\n\tif (mxIsComplex(m)) {\n\t\t//v.imag() = Eigen::Map<const Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::ColMajor> >(&((*pc).imag), dim[0], dim[1]);\n\t\tfor (int i = 0; i < dim[0] * dim[1]; i++) {\n\t\t\tv.data()[i].real(pc[i].real);\n\t\t\tv.data()[i].imag(pc[i].imag);\n\t\t}\n\t} \n\telse {\n\t\tfor (int i = 0; i < dim[0] * dim[1]; i++) {\n\t\t\tv.data()[i].real(pc[i].real);\n\t\t}\n\t\tv.imag().setZero();\n\t}\n\t\n- in matlab_utils.h line 353\n    MapMat(mxGetPr(m), dim[0], dim[1]) = vr;\n    MapMat(mxGetPi(m), dim[0], dim[1]) = vi;\n by\n mxComplexDouble *pc = mxGetComplexDoubles(m);\n\tfor (int i = 0; i < dim[0] * dim[1]; i++) {\n\t\tpc[i].real = vr[i];\n\t\tpc[i].imag = vi[i];\n\t}\n\t\nUltimately, the code runs and produce the expected results.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Tactile Mesh Saliency",
      "DOI": "10.1145/2897824.2925927",
      "Year": 2016,
      "ACM Keywords": [
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://graphics.cs.yale.edu/sites/default/files/mesh_to_tactile_ver09.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://graphics.cs.yale.edu/publications/tactile-mesh-saliency",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "Note that there is \"Important copyright information\" to read before downloading, but the link is dead.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Computational Imaging with Multi-Camera Time-of-Flight Systems",
      "DOI": "10.1145/2897824.2925928",
      "Year": 2016,
      "ACM Keywords": [
        "3D imaging",
        "Computational photography"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.computationalimaging.org/wp-content/uploads/2016/05/MultiCameraToF-SIGGRAPH2016.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.computationalimaging.org/publications/multi-camera-time-of-flight-systems/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://www.computationalimaging.org/publications/multi-camera-time-of-flight-systems/",
      "Code URL2": "http://web.stanford.edu/~gordonwz/download/tof/control_and_capture.zip",
      "MD5 sum (for archives)": "0f5b3b51d4d81a77f072791f939e9de7",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMakeLists, Not applicable (python, Matlab..)",
      "Dependencies": "matlab / SWIG / flann / PCL",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": true,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Mac OS",
      "Build instructions/comments": "The project page provides many ressources for replicability (system diagrams, firmware, C++ libs for the controller). As the paper is a hardware-oriented research, it is not replicable in the sense of the current study.",
      "Misc. comments": "",
      "Software language": "C/C++, Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "On the Convexity and Feasibility of the Bounded Distortion Harmonic Mapping Problem",
      "DOI": "10.1145/2897824.2925929",
      "Year": 2016,
      "ACM Keywords": [
        "Mesh models",
        "Shape analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.eng.biu.ac.il/~weberof/Publications/Harmonic-Convex/On_the_Convexity_and_Feasibility_of_the_Bounded_Distortion_Harmonic_Mapping_Problem.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 2,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Fast and Exact Discrete Geodesic Computation Based on Triangle-Oriented Wavefront Propagation",
      "DOI": "10.1145/2897824.2925930",
      "Year": 2016,
      "ACM Keywords": [
        "Shape modeling",
        "Computational geometry"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://i.cs.hku.hk/~yzyu/publication/VTPgeodesic-sig2016.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/YipengQin/VTP_source_code",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "3ef0700a63b100f446835d2a34811472720c959a",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:3ef0700a63b100f446835d2a34811472720c959a;origin=https://github.com/YipengQin/VTP_source_code/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "None",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The code comes with no makefile, but it is straightforward to compile it (a single main.cpp and a few .h, with no external dependencies, which is ideal). Given the stdafx.h, I compiled it with Visual Studio 2017, creating a solution in no effort. \nHowever, std::auto_ptr is soon to be deprecated. Right now, you need to #include <memory> in  geodesic_memory.h to compile it. Some people mention the preprocessor directive _HAS_AUTO_PTR_ETC=1 but this was not useful for me (perhaps VS2019).\nData were not provided, so I computed geodesics on meshes of my own. I managed to compute single source/all destinations geodesics of a 474K triangle mesh in 4.8 seconds on a 2.8GHz laptop, which matches timings in the paper (382K triangles in 4.13 seconds, on a 3.4GHz desktop machine).",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Perceptual Effect of Shoulder Motions on Crowd Animations",
      "DOI": "10.1145/2897824.2925931",
      "Year": 2016,
      "ACM Keywords": [
        "Motion capture",
        "Perception"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://people.rennes.inria.fr/Richard.Kulpa/papers/2016_Hoyet_TOG.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://people.rennes.inria.fr/Ludovic.Hoyet/shoulder_motions.shtml",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "Neither code nor experimental data were released.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Fitting Procedural Yarn Models for Realistic Cloth Rendering",
      "DOI": "10.1145/2897824.2925932",
      "Year": 2016,
      "ACM Keywords": [
        "Rendering"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.cornell.edu/~kb/publications/SIG16ProceduralYarn.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.cornell.edu/projects/ctcloth/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://www.cs.cornell.edu/~kb/projects/ctcloth/code_data_v2.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "81D9A5B612681C9C41538A3EACC6E46D",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "custom",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "IDE Project (VS,..), Not applicable (python, Matlab..)",
      "Dependencies": "matlab / opencv",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The program comes with microCT scans and a window executable, which also launches matlab code. To be able to recompile the code with Visual Studio 2017, you need a number of steps :\n\n- MicroCT.cpp, line 1270, replace :\n std:vector<float> ellipse_s_vec(loopNum), ellipse_l_vec(loopNum), yarn_radius_vec(loopNum);\nby\nstd::vector<float> ellipse_s_vec(loopNum), ellipse_l_vec(loopNum), yarn_radius_vec(loopNum);\n(note the :: instead of : )\n\n- Util.h, line 99, remove the round function.\n\n- add the preprocessor directive _CRT_SECURE_NO_WARNINGS\n\n* The provided precompiled OpenCV was causing issues ; perhaps it had been compiled in 32 bits (?). I used a fresh OpenCV install instead, which led to a couple of additional edits :\n\n- in MicroCT.h, replace the opencv includes \n#include \"opencv/include/opencv/cv.h\"\n#include \"opencv/include/opencv/highgui.h\"\n#include \"opencv/include/opencv2/opencv.hpp\"\nby\n#include <opencv2/highgui.hpp>\n#include \"opencv2/opencv.hpp\"\n#include <opencv2/core/types_c.h>\n#include <opencv2/highgui/highgui_c.h>\n\n-replace opencv_core249.lib;opencv_highgui249.lib;opencv_features2d249.lib;opencv_imgproc249.lib; by opencv_world420.lib in the project linked libraries.\n\n- in MicroCT.cpp, line 784, replace \n\tellipse(Mat(displayImg), Point(C1.x, C1.y), Size(l, s), (double)rot_angle, 0, 360, Scalar(1.f, 0.f, 0.f));\n\tellipse(Mat(displayImg), Point(C2.x, C2.y), Size(l, s), (double)rot_angle, 0, 360, Scalar(0.f, 1.f, 0.f));\nby\n\tellipse(cv::cvarrToMat(displayImg), Point(C1.x, C1.y), Size(l, s), (double)rot_angle, 0, 360, Scalar(1.f, 0.f, 0.f));\n\tellipse(cv::cvarrToMat(displayImg), Point(C2.x, C2.y), Size(l, s), (double)rot_angle, 0, 360, Scalar(0.f, 1.f, 0.f));\n\n- in MicroCT.cpp, line 818, replace cv::Mat mat = cv::Mat(img, true); by cv::Mat mat = cv::cvarrToMat(img, true);\n\n- in MicroCT.cpp, line 1422, replace:\n\tellipse(Mat(displayImg), Point(C1.x, C1.y), Size(cvEL, cvES), (double)rot_angle, 0, 360, Scalar(1.f, 1.f, 1.f));\n\tellipse(Mat(displayImg), Point(C2.x, C2.y), Size(cvEL, cvES), (double)rot_angle, 0, 360, Scalar(1.f, 1.f, 1.f));\nby\n\tellipse(cv::cvarrToMat(displayImg), Point(C1.x, C1.y), Size(cvEL, cvES), (double)rot_angle, 0, 360, Scalar(1.f, 1.f, 1.f));\n\tellipse(cv::cvarrToMat(displayImg), Point(C2.x, C2.y), Size(cvEL, cvES), (double)rot_angle, 0, 360, Scalar(1.f, 1.f, 1.f));\n\n- in MicroCT.cpp, line 1610, replace\n\tellipse(Mat(displayImg), Point(C1.x, C1.y), Size(e_l, e_s), (double)rot1, 0, 360, Scalar(1.f, 1.f, 1.f));\n\tellipse(Mat(displayImg), Point(C2.x, C2.y), Size(e_l, e_s), (double)rot2, 0, 360, Scalar(1.f, 1.f, 1.f));\n\tellipse(Mat(displayImg), Point(C3.x, C3.y), Size(e_l, e_s), (double)rot3, 0, 360, Scalar(1.f, 1.f, 1.f));\nto\n\tellipse(cv::cvarrToMat(displayImg), Point(C1.x, C1.y), Size(e_l, e_s), (double)rot1, 0, 360, Scalar(1.f, 1.f, 1.f));\n\tellipse(cv::cvarrToMat(displayImg), Point(C2.x, C2.y), Size(e_l, e_s), (double)rot2, 0, 360, Scalar(1.f, 1.f, 1.f));\n\tellipse(cv::cvarrToMat(displayImg), Point(C3.x, C3.y), Size(e_l, e_s), (double)rot3, 0, 360, Scalar(1.f, 1.f, 1.f));\n\n* Ultimately, the code runs. I didn't have to change my matlab settings as proposed (in fact, I do not have the option 'Location based on Matlab startup rules' but only 'Last working folder from previous Matlab session').\nHowever, the code only produces text files that contain strands. I do not know how to render this .txt in Mitsuba, but it was easy to grasp the file structure and code a loader in my own path tracer (though with circular cross section for simplicity instead of elliptical as suggested in Algorithm 1). The file merely contains the number of fibers, and then, for each fiber, the number of segments, for each segment the X, Y, Z coordinates.\n\nNevertheless, the paper mentions a modified Mitsuba to be able to make the renderings, and the paper shows (impressive) renderings of fabrics, not just strands... Also, which reflectance model was used to render the fibers ?",
      "Misc. comments": "Most of the time was spent in trying to visualize the results ; here, coding my own loader and renderer.",
      "Software language": "C/C++, Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Perspective-aware Manipulation of Portrait Photos",
      "DOI": "10.1145/2897824.2925933",
      "Year": 2016,
      "ACM Keywords": [
        "Computational photography",
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.ohadf.com/papers/FriedShechtmanGoldmanFinkelstein_SIGGRAPH2016.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://faces.cs.princeton.edu/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://faces.cs.princeton.edu/#",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "None",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Web app only. Can produce all results by uploading new pictures or testing pre-computed ones.",
      "Misc. comments": "",
      "Software language": "Cannot answer"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Practical Multispectral Lighting Reproduction",
      "DOI": "10.1145/2897824.2925934",
      "Year": 2016,
      "ACM Keywords": [
        "Computational photography",
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://gl.ict.usc.edu/Research/MultiSpectral/SIGGRAPH2016_Multispectral.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://gl.ict.usc.edu/Research/MultiSpectral/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Computational Network Design from Functional Specifications",
      "DOI": "10.1145/2897824.2925935",
      "Year": 2016,
      "ACM Keywords": [
        "Shape analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://geometry.cs.ucl.ac.uk/projects/2016/functional-network-design/paper_docs/PengEtAl_FuncNetworkDesign_SIGG16.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://geometry.cs.ucl.ac.uk/projects/2016/functional-network-design/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Adaptive Polynomial Rendering",
      "DOI": "10.1145/2897824.2925936",
      "Year": 2016,
      "ACM Keywords": [
        "Ray tracing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://cglab.gist.ac.kr/figs/paper/pdf/2016_Adaptive_Polynomial_Rendering.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://cglab.gist.ac.kr/publications/2016_Adaptive_Polynomial_Rendering.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Flow-Guided Warping for Image-Based Shape Manipulation",
      "DOI": "10.1145/2897824.2925937",
      "Year": 2016,
      "ACM Keywords": [
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://hal.inria.fr/hal-01307571/document",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.inria.fr/hal-01307571/",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The authors mentioned a demo IOS app (http://bonneau.meylan.free.fr/ShwarpIt/ShwarpIt.html) but the app is not available anymore.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Erosion thickness on medial axes of 3D shapes",
      "DOI": "10.1145/2897824.2925938",
      "Year": 2016,
      "ACM Keywords": [
        "Shape analysis",
        "Computational geometry"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cse.wustl.edu/~taoju/research/et.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://yajieyan.github.io/project/et/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/danielyan86129/ET",
      "Code URL2": "https://yajieyan.github.io/et_sig16/et.v2.zip",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "18c0742bc99d0dfd6e98a351ac9a9fea3095e2b5",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:18c0742bc99d0dfd6e98a351ac9a9fea3095e2b5;origin=https://github.com/danielyan86129/ET/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MPL",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "IDE Project (VS,..)",
      "Dependencies": "Qt / gflags / trimesh / Eigen / boost / CGAL / oglplus / glew",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Compiling the project with Qt 5.12.6 instead of 5.7.0 (~40GB install) is relatively easy.\n- EtDev.sln: replace  qt5.7_msvc2015 by qt5.12_msvc2017\n- EtDev.vcxproj: replace Qt5Version_x0020_x64=\"qt5.7_msvc2015\" by  Qt5Version_x0020_x64=\"qt5.12_msvc2017\"\n- EtDev.vcxproj.user: replace C:\\Libs\\Qt\\Qt5.7.0\\5.7\\msvc2015_64 by the actual path of your Qt install (e.g., C:\\Libs\\Qt\\5.12.6\\msvc2017_64).\n- trimesh/include/Vec.h, line 819: #if (_MSC_VER != 1900)  should be replaced by #if (_MSC_VER <= 1900)\nThe program compiles and produces the same executable as the one provided on the author website. It is however not very easy to use, and it is undocumented. The startup is intuitive (load the hand medial axis, model and radius files provided in the sample data), but then parameter tuning and what steps need to be performed were not trivial to find. I managed to produce a clean hand skeleton nevertheless that somewhat looks like results shown in the paper.\nI assume the .r file contains a radius for each vertex of the medial axis .off file, so that should be relatively easy to produce given a medial axis code (not provided).\nWhile results were convincing on the hand model, models used in the paper are not provided.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "RAID: A Relation-Augmented Image Descriptor",
      "DOI": "10.1145/2897824.2925939",
      "Year": 2016,
      "ACM Keywords": [
        "Shape analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://geometry.cs.ucl.ac.uk/projects/2016/image-relationships/paper_docs/GuerreroEtAl_RAID_SIGG16.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1510.01113",
      "Project URL": "https://geometry.cs.ucl.ac.uk/projects/2016/image-relationships/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://bitbucket.org/paulguerrero/raid",
      "Code URL2": "",
      "MD5 sum (for archives)": "6499539BE436312A65E3A9FF1F98F6F7",
      "git/hg/svn commit hash or revision number": "3decf589f2b520012bfc0b59fff649e13380c1a1",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:3decf589f2b520012bfc0b59fff649e13380c1a1;origin=https://bitbucket.org/paulguerrero/raid.git/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The code runs very easily (tested on Matlab 2018a) and I managed to get very similar results as those shown in the teaser by drawing a similar sketch as the one in the teaser.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "A Compiler for 3D Machine Knitting",
      "DOI": "10.1145/2897824.2925940",
      "Year": 2016,
      "ACM Keywords": [
        "Compilers",
        "Computer-aided manufacturing",
        "Graphics systems and interfaces"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://cfg.mit.edu/sites/cfg.mit.edu/files/paper_1.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://la.disneyresearch.com/publication/machine-knitting-compiler/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "The Diffractive Achromat: Full Spectrum Computational Imaging with Diffractive Optics",
      "DOI": "10.1145/2897824.2925941",
      "Year": 2016,
      "ACM Keywords": [
        "Computational photography"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.ubc.ca/labs/imager/tr/2016/DiffractiveAchromatImaging/DiffractiveAchromat_Peng2016_high-res.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.ubc.ca/labs/imager/tr/2016/DiffractiveAchromatImaging/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 2,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Sky is Not the Limit: Semantic-Aware Sky Replacement",
      "DOI": "10.1145/2897824.2925942",
      "Year": 2016,
      "ACM Keywords": [
        "Computational photography",
        "Image processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://vllab.ucmerced.edu/ytsai/SIGGRAPH16/siggraph16_sky_edit_low_res.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://sites.google.com/site/yihsuantsai/research/siggraph16-sky",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/SaumyaRawat/Semantic-Aware-Colour-Transfer",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "2db7493fd0e26a6b8aa34fe0ee1aee3350c03fc0",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:b122b89f184c93ef8baa9004231320d592519809;origin=https://github.com/SaumyaRawat/Semantic-Aware-Colour-Transfer/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "Matlab, caffe",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "evaluation dataset",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 1,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 2,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 5,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Beside the compilation of matcaffe which took me a lot of time, I had to remove the absolute paths in custom_toolboxes/scene_parsing_model/scene_parse.m. The interactive selection of the images was not working, thus I removed the call to select_image in replace_sky.m, and selected the image programatically (automatically select the first image).\n\nThe code needs a mask and a parsing image for each RGB image took as input. No code is provided to generate those, which limits its use in other contexts.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Multiple-Scattering Microfacet BSDFs with the Smith Model",
      "DOI": "10.1145/2897824.2925943",
      "Year": 2016,
      "ACM Keywords": [
        "Reflectance modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://drive.google.com/uc?id=0BzvWIdpUpRx_cFVlUkFhWXdleEU&export=download",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://eheitzresearch.wordpress.com/240-2/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://drive.google.com/file/d/0BzvWIdpUpRx_bTdXTEFfaWlQRUE/view",
      "Code URL2": "",
      "MD5 sum (for archives)": "95098881a717e42545e352c9a3e17b13",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "None",
      "Dependencies": "glm",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The authors provide both a mitsuba plugin and a tutorial implementation source code. \n\nFor the mitsuba plugin, by adding the .cpp and .h to mitsuba/src/bsdfs folder and adding lines:\nplugins += env.SharedLibrary('roughconductorGGX', ['roughconductorGGX.cpp'])\nplugins += env.SharedLibrary('roughdiffuseGGX', ['roughdiffuseGGX.cpp'])\nplugins += env.SharedLibrary('roughdielectricGGX', ['roughdielectricGGX.cpp']) \nto mitsuba/src/bsdfs/SConscript , everything compiles well. The examples work after using the mitsuba gui to convert the scenes from version 0.5 to 0.6. However the examples are not the same as in the paper (but they do loook similar).\n\nThe tutorial code consists in a C++ class (with a very precise and clear technical documentation) but no example is given. The code looks fine but I was not able to produce some results with the tutorials.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Beyond Developable: Computational Design and Fabrication with Auxetic Materials",
      "DOI": "10.1145/2897824.2925944",
      "Year": 2016,
      "ACM Keywords": [
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://lgg.epfl.ch/publications/2016/BeyondDevelopable/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://lgg.epfl.ch/publications/2016/BeyondDevelopable/index.php",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The pseudo-code in appendix is actually usable C++ code. However, it implements a fraction of the paper (the non penetration constraint in the optimizer, not the entire simulation).",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Multi-Scale Rendering of Scratched Materials using a Structured SV-BRDF Model",
      "DOI": "10.1145/2897824.2925945",
      "Year": 2016,
      "ACM Keywords": [
        "Reflectance modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://hal.inria.fr/hal-01321289/file/small.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.inria.fr/hal-01321289",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Fidelity vs. Simplicity: a Global Approach to Line Drawing Vectorization",
      "DOI": "10.1145/2897824.2925946",
      "Year": 2016,
      "ACM Keywords": [
        "Reconstruction",
        "Parametric curve and surface models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://hal.inria.fr/hal-01309271/document",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.inria.fr/hal-01309271",
      "Project URL": "http://www-sop.inria.fr/reves/Basilic/2016/FLB16/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://www-sop.inria.fr/reves/Basilic/2016/FLB16/2016sig_line_drawing_vectorization_executable_x64.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "8564085BC004C5DAE6F70721CAAD85AF",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The software is quite intuitive and easy to use. There is a zipped data file that can be downloaded that includes the drawings for all figures in the paper which is ideal. However, there seems to be some parameter fiddling to obtain the results. For instance, in Fig. 11, I had to specify a \"min region size\" of 8 instead of the default 7 to reproduce the two rightmost images (and this parameter set also works for the two leftmost images).",
      "Misc. comments": "",
      "Software language": "Cannot answer"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Realtime 3D Eye Gaze Animation Using a Single RGB Camera",
      "DOI": "10.1145/2897824.2925947",
      "Year": 2016,
      "ACM Keywords": [
        "Virtual reality",
        "Animation",
        "Gestural input"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://faculty.cs.tamu.edu/jchai/projects/sig16-gaze/gaze_final.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "StyLit: illumination-guided example-based stylization of 3D renderings",
      "DOI": "10.1145/2897824.2925948",
      "Year": 2016,
      "ACM Keywords": [
        "Non-photorealistic rendering"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://dcgi.fel.cvut.cz/home/sykorad/Fiser16-SIG.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://dcgi.fel.cvut.cz/home/sykorad/stylit",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://stylit.org/dl/stylit-demo.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "C4A8F6C5090EB40BC78B6564CBCC9D50",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Code License (if any)": "custom",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Very intuitive and impressive results. My camera was not listed, so I used the screen capture mode and launched a webcam application on the side, with the StyLit capturing the webcam stream from the other application -- that worked.",
      "Misc. comments": "",
      "Software language": "Cannot answer"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Binary continuous image decomposition for multi-view display",
      "DOI": "10.1145/2897824.2925949",
      "Year": 2016,
      "ACM Keywords": [
        "Image processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://dl.acm.org/doi/pdf/10.1145/2897824.2925949?download=true",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://navi.cs.kumamoto-u.ac.jp/~koutaki/projects/BCID/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://navi.cs.kumamoto-u.ac.jp/~koutaki/projects/BCID/Supplementaly.zip",
      "Code URL2": "http://navi.cs.kumamoto-u.ac.jp/~koutaki/projects/BCID/winbin.zip",
      "MD5 sum (for archives)": "0E7D8F934B88C46EB95A8C4294552AE6",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "None",
      "Dependencies": "fftw / opencv",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Although no makefiles nor build instructions are given, it is quite straightforward to compile -- in my case creating a Visual Studio 2017 solution, putting all files, and setting include an library paths for FFTW and OpenCV. Requires OpenCV libraries are opencv_imgproc412.lib;opencv_highgui412.lib;opencv_imgcodecs412.lib;opencv_core412.lib.\nTo prevent a (known) opencv issue relating to 'ACCESS_MASK' being an ambiguous symbol in winnt.h, I had to #include <Windows.h> at the very first line of main.cpp.\nTo activate OpenMP, in addition to addin openmp support in the visual studio configurations, you need to specify the preprocessor definition _OPENMP.\nIn addition to the code, a compiled version (for Windows) is also provided. Both the code and the provided executable produce the same result on the given examples (those of Fig 8 and 6), and they correspond to the results shown in the paper. The archive containing the compiled files also contain batch files which are useful to see which parameters were used to produce the results (number of bits, iterations, etc.).\nAdditional instructions on the hardware side are provided in a pdf document in the same folder as the code in supplementary materials.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "PATEX: Exploring Pattern Variations",
      "DOI": "10.1145/2897824.2925950",
      "Year": 2016,
      "ACM Keywords": [
        "Shape analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://geometry.cs.ucl.ac.uk/projects/2016/pattern-variations/paper_docs/GuerreroEtAl_PATEX_SIGG16.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://geometry.cs.ucl.ac.uk/projects/2016/pattern-variations/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://bitbucket.org/paulguerrero/patex",
      "Code URL2": "",
      "MD5 sum (for archives)": "7275975BC9845F71FAE0903AF7D9A54F",
      "git/hg/svn commit hash or revision number": "88a8459d52cb49b9caa4a1eaf01d96821bcfeb52",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:88a8459d52cb49b9caa4a1eaf01d96821bcfeb52;origin=https://bitbucket.org/paulguerrero/patex.git/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Beware that the default .mat file when loading the program does not exist : in PatternWidget.m line 296, startfilename = '../data/userstudy/task1_pattern.mat'; refers to a missing file. It can be replaced by startfilename = '../data/medium_1.mat';  if the dataset was downloaded and placed in ../data as instructed.\nAlso, the dataset referenced in the Readme corresponds to http://geometry.cs.ucl.ac.uk/projects/2016/image-relationships/paper_docs/GuerreroEtAl_PATEX_SIGG16_data.zip which does not exist. The correct dataset link, from the project webpage, is https://geometry.cs.ucl.ac.uk/projects/2016/pattern-variations/paper_docs/GuerreroEtAl_PATEX_SIGG16_data.zip\n\nDeleting all compiled mex files automatically regenerates them. There is actually a compile error during mex('-largeArrayDims',includeoptions{:},additionaloptions{:},'pointLinesegDistance2D_mex.cpp',[utilpath,'/mexutils.cpp'],'geom.cpp','triTriIntersectionDevillers.cpp');\nHowever, for some reasons, it does not prevent the program from running well (perhaps this function is simply not used).",
      "Misc. comments": "",
      "Software language": "C/C++, Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Interactive Sketching of Urban Procedural Models",
      "DOI": "10.1145/2897824.2925951",
      "Year": 2016,
      "ACM Keywords": [
        "Shape modeling",
        "Computational geometry"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www-sop.inria.fr/reves/Basilic/2016/NGGBB16/procedural_sketch.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.inria.fr/hal-01378388/",
      "Project URL": "https://www.cs.purdue.edu/homes/gnishida/sketch/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://www.cs.purdue.edu/homes/gnishida/sketch/SketchBuilding.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "Cannot answer",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "When just running the provided executables, it encounters an issue: \n\"This application failed to start because it could not find or load the Qt platform plugin \"windows\" in \"\".\"\nHowever, by replacing the provided Qt5Core.dll, Qt5Gui.dll, Qt5OpenGL.dll, Qt5Widgets.dll and Qt5Xml.dll by the ones from my actual Qt5 installation (5.12.6), it works nicely and produces results similar to those found in the paper (up to my poor drawing skills).",
      "Misc. comments": "",
      "Software language": "Cannot answer"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Automatically Scheduling Halide Image Processing Pipelines",
      "DOI": "10.1145/2897824.2925952",
      "Year": 2016,
      "ACM Keywords": [
        "Graphics systems and interfaces"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://graphics.cs.cmu.edu/projects/halidesched/mullapudi16_halidesched.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://graphics.cs.cmu.edu/projects/halidesched/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/halide/Halide",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "19e66f9673c0a153f57c42c1b2f1c7696914582d",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:7701ebdf4ecfb61c405d281284e088d522114c20;origin=https://github.com/halide/Halide/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Makefile, CMakeLists",
      "Dependencies": "llvm",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 2,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "I tested the newest version of Halide: this does not correspond to the paper. The project webpage states: \"NOTICE: The algorithm described in this paper has been superceded by the techniques described in the SIGGRAPH 2019 autoscheduler paper. The autoscheduling functionality in the master Halide repo now uses the algorithm from the 2019 paper\". And there is no explanation on how to get the code of this particular submission, nor how to reproduce any of the examples.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Soli: Ubiquitous Gesture Sensing with Millimeter Wave Radar",
      "DOI": "10.1145/2897824.2925953",
      "Year": 2016,
      "ACM Keywords": [
        "Sensor devices and platforms",
        "Gestural input"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.ivanpoupyrev.com/wp-content/uploads/2017/01/siggraph_final.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.ivanpoupyrev.com/project/project-soli",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "The Sketchy Database: Learning to Retrieve Badly Drawn Bunnies",
      "DOI": "10.1145/2897824.2925954",
      "Year": 2016,
      "ACM Keywords": [
        "Image representations",
        "Image processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cc.gatech.edu/~hays/tmp/sketchy-database.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://sketchy.eye.gatech.edu/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/janesjanes/sketchy",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "93d149faebeddf3871d68ee11ef02828bc430c3d",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:302e7288a608acb2038921ed0663ccb73758de7f;origin=https://github.com/janesjanes/sketchy/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "Caffe",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 3,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 5,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The github repsitory provides two scripts, which both require to download the\" sketch and photos\"dataset (https://goo.gl/SNpMmK):\n- Retrieval_Example.ipynb, which demonstrates how to retrieve images from a sketch. I had to flatten the content of the directory \"256x256/photo/tx_00000000000\" to be able to load in the photo database (8th code block in jupyter notebook).\n- Compute_Sketchy_score.ipynb, which compute the network matching accuracy. I tried to flatten the directory \"256x256/sketch/tx_00000000000\", and replace the use of the file test_img_list.txt (which is not provided) by test_img_list = os.listdir(photo_paths). Unfortunatly, even with this change, I couldn't run the script, and I couldn't find a way to format the data as required by the last code block. No instruction is given on how to modify or adapt file loading and directory structure.\n\nBug fixes (for both scripts):\n - scripts use python2 syntax for the print function (ie. without parenthesis). Can be adapted to python3 by using parenthesis.\n - scripts attempt to load LSHForest from sklearn.neighbors, which is deprecated and not provided by modern sklearn packages. Replace \nfrom sklearn.neighbors import NearestNeighbors,LSHForest\nby \nfrom sklearn.neighbors import NearestNeighbors\n\nI have tested both scripts using caffe_cpu (see 4th code block in both scripts: caffe.set_mode_cpu()).\n\nThe provided scripts does not demonstrate how to retrieve sketches from an image. The broken script does not demonstrate a functionality of the approach but rather its performances, and so its failure does not impact the replicability of the approach.",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Spectral Style Transfer for Human Motion between Independent Actions",
      "DOI": "10.1145/2897824.2925955",
      "Year": 2016,
      "ACM Keywords": [
        "Motion processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://geometry.cs.ucl.ac.uk/projects/2016/spectral-style-transfer/paper_docs/SpectralStyleTransfer.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://geometry.cs.ucl.ac.uk/projects/2016/spectral-style-transfer/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "cSculpt: A System for Collaborative Sculpting",
      "DOI": "10.1145/2897824.2925956",
      "Year": 2016,
      "ACM Keywords": [
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://vcg.isti.cnr.it/Publications/2016/CSTP16/cScuplt.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://pellacini.di.uniroma1.it/publications/csculpt16/csculpt16.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "All-Hex Meshing using Closed-Form Induced Polycube",
      "DOI": "10.1145/2897824.2925957",
      "Year": 2016,
      "ACM Keywords": [
        "Mesh geometry models",
        "Parametric curve and surface models",
        "Volumetric models",
        "Computational geometry"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cad.zju.edu.cn/home/hj/16/closed-form-polycube/closed-form-polycube.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://www.cad.zju.edu.cn/home/hj/16/closed-form-polycube/closed-form-polycube-release-V1.0.7z",
      "Code URL2": "",
      "MD5 sum (for archives)": "e5c898f1d8479ced052225d87019efae",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "binary produced an error: \"*** stack smashing detected ***: <unknown> terminated\". was not able to run the test",
      "Misc. comments": "",
      "Software language": "Cannot answer"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Connected Fermat Spirals for Layered Fabrication",
      "DOI": "10.1145/2897824.2925958",
      "Year": 2016,
      "ACM Keywords": [
        "Parametric curve and surface models",
        "Shape analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.sfu.ca/~haoz/pubs/zhao_sig16_fermat.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://homes.cs.washington.edu/~haisen/CFS/index.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "Additional results are provided in the project page. Note however that there is an alternate project page that is often referenced but that results in a 404 error: http://irc.cs.sdu.edu.cn/CFS/\nMore importantly, it seems that some (partial?) reimplementation of the paper by Ahmed H. Mahmoud (not an author) can be found at https://github.com/VccRobot/fermat3d",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Real-time Skeletal Skinning with Optimized Centers of Rotation",
      "DOI": "10.1145/2897824.2925959",
      "Year": 2016,
      "ACM Keywords": [
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://s3-us-west-1.amazonaws.com/disneyresearch/wp-content/uploads/20160705174939/Real-time-Skeletal-Skinning-with-Optimized-Centers-of-Rotation-Paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://binh.graphics/papers/2016s-cor/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 3,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "An implementation by Damian Stewart (not author) is available at https://github.com/damian0815/skellington",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Acoustic Voxels: Computational Optimization of Modular Acoustic Filters",
      "DOI": "10.1145/2897824.2925960",
      "Year": 2016,
      "ACM Keywords": [
        "Physical simulation",
        "Parametric curve and surface models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.columbia.edu/cg/lego/acoustic-voxels-siggraph-2016-li-et-al.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.columbia.edu/cg/lego/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The algorithm only corresponds to the Monte Carlo sampler, not the full simulation and optimization.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "AutoHair: Fully Automatic Hair Modeling from A Single Image",
      "DOI": "10.1145/2897824.2925961",
      "Year": 2016,
      "ACM Keywords": [
        "Parametric curve and surface models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.mlchai.com/resources/chai2016autohair.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://kunzhou.net/zjugaps/autohair/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Lightweight Eye Capture Using a Parametric Model",
      "DOI": "10.1145/2897824.2925962",
      "Year": 2016,
      "ACM Keywords": [
        "Reconstruction",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://cgl.ethz.ch/Downloads/Publications/Papers/2016/Pas16a/Pas16a.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://cgl.ethz.ch/publications/papers/paperPas16a.php",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Generalized Non-Reflecting Boundaries for Fluid Re-Simulation",
      "DOI": "10.1145/2897824.2925963",
      "Year": 2016,
      "ACM Keywords": [
        "Volumetric models",
        "Modeling and simulation",
        "Partial differential equations",
        "Discretization"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://pub.ist.ac.at/group_wojtan/projects/2016_Bojsen-Hansen_GNRBfFRS/2016_Bojsen-Hansen_GNRBfFRS.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://alas.dk/publications/2016/GNRBfFRS/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://pub.ist.ac.at/group_wojtan/projects/2016_Bojsen-Hansen_GNRBfFRS/2016_Bojsen-Hansen_GNRBfFRS.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "8368b0103d113685f0105ac499f4f574",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Makefile",
      "Dependencies": "houdini",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 3,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "To compile with Houdini 18.0.287, I needed to do the following changes in SIM_PMLAdvect.cpp: change \nUT_VoxelProbeCubeF srcProbe --> UT_VoxelProbeCube<fpreal32> srcProbe; (l278 and l358)\nand\nsrcProbe.setPlusArray(src->field()); --> srcProbe.setConstPlusArray(src->field()); (l283 and l363)",
      "Misc. comments": "",
      "Software language": "C/C++, Other"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Multi-Scale Label-Map Extraction for Texture Synthesis",
      "DOI": "10.1145/2897824.2925964",
      "Year": 2016,
      "ACM Keywords": [
        "Image processing",
        "Texturing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://graphics.cs.yale.edu/sites/default/files/multi-scale_label-map_extraction_for_texture_synthesis.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://graphics.cs.yale.edu/publications/multi-scale-label-map-extraction-texture-synthesis",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/ylockerman/multi-scale-label-map-extraction/",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "adde38ce238e48075e049971f6031412aaaab0b2",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:e9cc85c35030f07ccd9f4c27a6a73627a54b4c6b;origin=https://github.com/ylockerman/multi-scale-label-map-extraction/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "CMakeLists, Not applicable (python, Matlab..)",
      "Dependencies": "numpy/scipy/bottleneck/joblib/Mako/msgpack_python/pyamg / pyopencl/pytools/scikit-image/matplotlib/scikit-learn",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 2,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Mac OS",
      "Build instructions/comments": "No explanations are given to build/execute the code. After installing the dependencies, I have tried to run an example in the 'src' folder:\n\npython ../examples/SLIC_compare.py\n\nwhich crashes due to opencl/Tk issues.",
      "Misc. comments": "",
      "Software language": "C/C++, Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Efficient and Precise Interactive Hand Tracking Through Joint, Continuous Optimization of Pose and Correspondences",
      "DOI": "10.1145/2897824.2925965",
      "Year": 2016,
      "ACM Keywords": [
        "Virtual reality",
        "Interaction techniques"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.samehkhamis.com/taylor-siggraph2016.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Printing Arbitrary Meshes with a 5DOF Wireframe Printer",
      "DOI": "10.1145/2897824.2925966",
      "Year": 2016,
      "ACM Keywords": [
        "Mesh models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.cornell.edu/projects/wireprint/download/arbitrary.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.cornell.edu/projects/wireprint/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 3,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Motion Graphs for Unstructured Textured Meshes",
      "DOI": "10.1145/2897824.2925967",
      "Year": 2016,
      "ACM Keywords": [
        "Computer graphics"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://hhoppe.com/motiongraph.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://hhoppe.com/proj/motiongraph/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Painting Style Transfer for Head Portraits using Convolutional Neural Networks",
      "DOI": "10.1145/2897824.2925968",
      "Year": 2016,
      "ACM Keywords": [
        "Non-photorealistic rendering"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://people.mpi-inf.mpg.de/~elgharib/Publications/PDF/SIGGRAPH.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://people.mpi-inf.mpg.de/~elgharib/projects/PaintingStyle/index.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "A partial reimplementation by Somshubra Majumdar (not author), which slightly differs from the original paper, is available at https://gist.github.com/titu1994/26a8a0cd1c1bbf5f2e4c94813dea1e41",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Fusion4D: Real-time Performance Capture of Challenging Scenes",
      "DOI": "10.1145/2897824.2925969",
      "Year": 2016,
      "ACM Keywords": [
        "Motion capture"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.samehkhamis.com/dou-siggraph2016.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "SketchiMo: Sketch-based Motion Editing for Articulated Characters",
      "DOI": "10.1145/2897824.2925970",
      "Year": 2016,
      "ACM Keywords": [
        "Motion processing",
        "Graphical user interfaces"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://vml.kaist.ac.kr/assets/Contents/Publications/International/2016ByungkukChoi_TOG/2016ByungkukChoi_TOG.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://vml.kaist.ac.kr/main/international/individual/2",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Additive Light Field Displays: Realization of Augmented Reality with Holographic Optical Elements",
      "DOI": "10.1145/2897824.2925971",
      "Year": 2016,
      "ACM Keywords": [
        "Computational photography",
        "Emerging optical and photonic technologies"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://cvlab.khu.ac.kr/paper45.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Learning to Simplify: Fully Convolutional Networks for Rough Sketch Cleanup",
      "DOI": "10.1145/2897824.2925972",
      "Year": 2016,
      "ACM Keywords": [
        "Fine arts",
        "Neural networks"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.f.waseda.jp/hfs/SimoSerraSIGGRAPH2016.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://esslab.jp/~ess/en/research/sketch/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/bobbens/sketch_simplification",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "0bc912cd8409274f70bd1403a0956fd9b9968ea6",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:893e0a8908a4178b3f032e7c9e53b6a54971fd1f;origin=https://github.com/bobbens/sketch_simplification/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "SOFTWARE LICENSE AGREEMENT ACADEMIC OR NON-PROFIT ORGANIZATION NONCOMMERCIAL RESEARCH USE ONLY",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "pytorch0.4.1/torchvision0.2.0/pillow",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The provided code implements both a 2018 paper and the 2016 paper. To be sure to run the 2016 paper, on line 10 replace model_gan.t7 by model_mse.t7 to load the provided pre-trained model . Not all figures input are given (the figs.sh script is for the 2018 paper) but the test.png corresponds to one of the example in Fig. 01. My result was more blurry than the one in the paper, and so were the results with other test images I could run.",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Roto++: Accelerating Professional Rotoscoping using Shape Manifolds",
      "DOI": "10.1145/2897824.2925973",
      "Year": 2016,
      "ACM Keywords": [
        "Video segmentation",
        "Shape analysis",
        "Parametric curve and surface models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.dreamspaceproject.eu/dyn/1479827911473/Accelerating-Professional-Rotoscoping-using-Shape-Manifolds.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://visual.cs.ucl.ac.uk/pubs/rotopp/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/vinben/Rotopp",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "f0c25db5bd25074c55ff0f67539a2452d92aaf72",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:225afeb2ff156d52f6a869659da757ecbc3bb0e5;origin=https://github.com/vinben/Rotopp/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "BSD",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "eigen/ceres/qt/opencv/atlas/glog",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 9,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The code requires some old dependencies (opencv2) and thus recommend a build on a ubuntu 14.04. I tried to setup a ubuntu14.04 virtual machine but ceres fails to build (a first issue with the packaged version of eigen which is too old and a c++ build issue later).\nOn a more recent ubuntu, I have an issue with the thirdparty targets:\n\n -- Found Ceres version: 2.0.0 installed in: /usr/local with components: [EigenSparse, SparseLinearAlgebraLibrary, LAPACK, SuiteSparse, CXSparse, SchurSpecializations]\nCMake Error at thirdparty/gflags/CMakeLists.txt:25 (ADD_LIBRARY):\n  ADD_LIBRARY cannot create target \"gflags\" because an imported target with\n  the same name already exists.\n\nI wasn't able to build the project on MacOs Catalina as well.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Let there be color!: joint end-to-end learning of global and local image priors for automatic image colorization with simultaneous classification",
      "DOI": "10.1145/2897824.2925974",
      "Year": 2016,
      "ACM Keywords": [
        "Image processing",
        "Neural networks"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://iizuka.cs.tsukuba.ac.jp/projects/colorization/data/colorization_sig2016.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://iizuka.cs.tsukuba.ac.jp/projects/colorization/data/colorization_sig2016.pdf",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/satoshiiizuka/siggraph2016_colorization",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "83a00d7eba55043fe11730aa1d9b475083aaf690",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:83a00d7eba55043fe11730aa1d9b475083aaf690;origin=https://github.com/satoshiiizuka/siggraph2016_colorization/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "CC BY-NC-SA 4.0",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "torch / torch-nn",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Pre-trained models / Hardcoded data / lookup tables /...",
      "License of the data": "CC BY-NC-SA 4.0",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 3,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The short LUA code comes with a downloadable pretrained network (the data to retrain the network is from http://places.csail.mit.edu/ but the code to train the network is not provided). I used the Ubuntu for Windows framework (with Windows 10) to run the code, which was simpler here.\nI still needed to perform a number of steps:\n- dos2unix download_model.sh to prevent including the \\r in the download URL\n- sudo apt-get install cmake and sudo apt-get install libreadline-dev for dependencies\n- installing torch with nn was slightly harder than the instructions on the torch website claim:\ngit clone https://github.com/torch/distro.git ~/torch --recursive\ncd ~/torch\nthen on line 178 of install--deps  you need to change\nsudo apt-get install -y python-software-properties\nto sudo apt-get install -y software-properties-common since python-software-properties is not supported anymore.\nThen you can run bash install-deps and ./install.sh\nBut then you still need to install nn:\nsudo apt install luarocks\nsudo ~/torch/install/bin/luarocks install torch\nsudo ~/torch/install/bin/luarocks install nn\nand finally run the colorize script, not directly with \"th\" but using:\n~/torch/install/bin/th colorize.lua ansel_colorado_1941.png out.png\nThen everything works fine, runs smoothly (counts 2-3 minutes on the CPU for the only example image provided, which exactly replicate the landscape result in the teaser).",
      "Misc. comments": "",
      "Software language": "Other"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "A Deep Learning Framework for Character Motion Synthesis and Editing",
      "DOI": "10.1145/2897824.2925975",
      "Year": 2016,
      "ACM Keywords": [
        "Motion capture"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.ipab.inf.ed.ac.uk/cgvu/motionsynthesis.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://theorangeduck.com/page/deep-learning-framework-character-motion-synthesis-and-editing",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://theorangeduck.com/media/uploads/other_stuff/motionsynth_code.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "CE82D1B79F2773E28F3A6A6A00AC180A",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Custom",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "theano,numpy,scipy,six,matplotlib",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "pretrained model, mocap data",
      "License of the data": "Custom",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 1,
      "Build/configure score {0=NA, 1,2,3,4,5}": 1,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "I could not run the code due to missing library versions. Given the code syntax, I assumed the code was Python 3, and given the date of the paper, I tried Python 3.5. I initially attempted with theano 0.8.2 (which installs  numpy-1.18.5 scipy-1.4.1 six-1.15.0, though I had to downgrade scipy to 1.3 to avoid some 'fft' library error), but I ended up with numpy errors ('Could not import inplace_increment' with Theano asking me to update to NumPy 1.8 though I already had 1.18 (following internet's advice, I installed libpython but this did not solve the problem). Given that Theano 0.8.2 was released after the Siggraph 2016 deadline, I also tried with Theano 0.7 which required me to install a GCC on windows (I used https://jmeubank.github.io/tdm-gcc/download/ though I had to edit their cmath file, line 1121 to replace 'using ::hypot;' to 'using ::_hypot;') but I ran into further errors ('ImportError: DLL load failed: A dynamic link library (DLL) initialization routine failed.' when calling 'index = rng.randint(X.shape[0].eval())' in demo_stepped ; or 'ERROR (theano.gof.opt): Optimization failure due to: constant_folding' in demo_style_transfer and demo_basis).\n Trying with Theano 0.6 resulted in other errors (KeyError: 'blas' and 'blas.ldflags' in Python's configparser.py) which resulted me to install 2018 and 2019 versions of mkl following internet's advice, but without further success (2017 was not available on my pip).\n The data file should be downloaded and extracted such that the folder motionsynth_data/data should be at the same level as the other directories motion, nn and synth. \n\n Since there is a combinatorial number of library versions and dependencies (perhaps Python 3.4 was needed?), it would be extremely useful if the authors could provide the versions of the libraries used in their project.",
      "Misc. comments": "An unofficial partial reimplementation is also available at:\nhttps://github.com/AliJalalifar/Character_Animation",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "HexEx: Robust Hexahedral Mesh Extraction",
      "DOI": "10.1145/2897824.2925976",
      "Year": 2016,
      "ACM Keywords": [
        "Computer-aided design",
        "Physical simulation",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.graphics.rwth-aachen.de/media/papers/HexEx_lowres.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.graphics.rwth-aachen.de/publication/03260/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://graphics.rwth-aachen.de:9000/HexEx/libHexEx",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "fdb6bca32b70f47951ac6138a13d95c296f7e13f",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "GPL",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Makefile, CMakeLists",
      "Dependencies": "OpenVolumeMesh",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The code works out of the box for compilation following the Building instructions.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Unified Motion Planner for Fishes with Various Swimming Styles",
      "DOI": "10.1145/2897824.2925977",
      "Year": 2016,
      "ACM Keywords": [
        "Procedural animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.entcomp.iit.tsukuba.ac.jp/en/project/unified-motion-planner/file/UnifiedMotionPlanner_Paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.entcomp.iit.tsukuba.ac.jp/en/project/unified-motion-planner/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Computational Design of Stable Planar-Rod Structures",
      "DOI": "10.1145/2897824.2925978",
      "Year": 2016,
      "ACM Keywords": [
        "Geometric topology",
        "Computer-aided design",
        "Shape modeling",
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.gmrv.es/~edermiguel/docs/wire_bending.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://visualcomputing.ist.ac.at/publications/2016/CDoSPRS/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The preprint on the author's website has cross references issues ([?] everywhere) ; I could not find the paper elsewhere.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Example-based Plastic Deformation of Rigid Bodies",
      "DOI": "10.1145/2897824.2925979",
      "Year": 2016,
      "ACM Keywords": [
        "Physical simulation",
        "Simulation by animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://cal.cs.umbc.edu/Papers/Jones-2016-EPD/Jones-2016-EPD.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://cal.cs.umbc.edu/Papers/Jones-2016-EPD/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Generating Dynamically Feasible Trajectories for Quadrotor Cameras",
      "DOI": "10.1145/2897824.2925980",
      "Year": 2016,
      "ACM Keywords": [
        "Computational control theory",
        "Motion path planning",
        "Computer graphics"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://graphics.stanford.edu/papers/feasible_trajectories/data/siggraph_2016_paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://graphics.stanford.edu/papers/feasible_trajectories/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The project's webpage states \"code coming soon\". The flashlight library https://mikeroberts3000.github.io/flashlight/ explicitly states that it is used in the 2016 siggraph paper project but no code for the paper (or reference to part of the library) is explicitly given.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Body Talk: Crowdshaping Realistic 3D Avatars with Words",
      "DOI": "10.1145/2897824.2925981",
      "Year": 2016,
      "ACM Keywords": [
        "Perception",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://files.is.tue.mpg.de/black/papers/BodyTalkSIGGRAPH2016.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "Neither code nor experimental data were made available. In this particular case, the paper would be very hard to reproduce (requiring to re-perform an experiment involving 256 participants with MTurk for 25 min each).",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Modeling Dense Inflorescences",
      "DOI": "10.1145/2897824.2925982",
      "Year": 2016,
      "ACM Keywords": [
        "Life and medical sciences",
        "Shape modeling",
        "Procedural animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://algorithmicbotany.org/papers/inflorescence.sig16.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://algorithmicbotany.org/papers/inflorescence.sig16.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Rich360: optimized spherical representation from structured panoramic camera arrays",
      "DOI": "10.1145/2897824.2925983",
      "Year": 2016,
      "ACM Keywords": [
        "Image representations",
        "Computational photography"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://vml.kaist.ac.kr/assets/Contents/Publications/International/2016JungjinLee_TOG/2016JungjinLee_TOG.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://vml.kaist.ac.kr/assets/Contents/Publications/International/2016JungjinLee_TOG/2016JungjinLee_TOG.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "JALI: An Animator-Centric Viseme Model for Expressive Lip Synchronization",
      "DOI": "10.1145/2897824.2925984",
      "Year": 2016,
      "ACM Keywords": [
        "Performing arts",
        "Natural language generation",
        "Procedural animation",
        "Simulation by animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.dgp.toronto.edu/~elf/JALISIG16.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.dgp.toronto.edu/~elf/jali.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The authors nevertheless provide a facial rig for Maya, which has been used in the paper \"VisemeNet: Audio-Driven Animator-Centric Speech Animation\" which provides code.\nBeware the maya scene includes a dependency to renderman (for rendering) which is abandonned by Nvidia since 2018 ( https://www.nvidia.com/en-us/design-visualization/solutions/rendering/product-updates/ ) but the rig can still be used without the fancy rendering.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Rig Animation with a Tangible and Modular Input Device",
      "DOI": "10.1145/2984751.2985696",
      "Year": 2016,
      "ACM Keywords": [
        "Human computer interaction (HCI)"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://igl.ethz.ch/projects/rig-animation-input-device/Rig-Animation-Input-Device-2016.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://igl.ethz.ch/projects/rig-animation-input-device/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/oliglauser/atamid",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "9a152b1d82374d1960ebd2216563fb30b1b6875b",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:67b6ae4d19b6e481aeda7df037c52623b9f4acac;origin=https://github.com/oliglauser/atamid/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "igl / eigen/glfw / nanogui",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": true,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Mac OS",
      "Build instructions/comments": "The project contains both hardware specifications and a software to control the proposed tangible controller. The code does not provide any information about the build instructions and it seems that it requires an old version of libIGL (and many hardcoded path in the CMakeLists.txt).I was thus not able compile the project.\n\nThe repository seems to be down as many elements are missing: \"Future home of the open hardware specifications and software source code accompanying \"Rig Animation with a Tangible and Modular Input Device\" [Glauser et al. 2016].",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Semantic soft segmentation",
      "DOI": "10.1145/3197517.3201275",
      "Year": 2018,
      "ACM Keywords": [
        "Image segmentation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "http://yaksoy.github.io/papers/TOG18-sss.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://yaksoy.github.io/sss/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/yaksoy/SemanticSoftSegmentation",
      "Code URL2": "https://github.com/iyah4888/SIGGRAPH18SSS",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "fb89f498ebdefa19f5f5fc4a639a9ff190ac09e5",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "4d8a9e2c99a055e8b66a61665594112a69ab526f",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:fb89f498ebdefa19f5f5fc4a639a9ff190ac09e5;origin=https://github.com/yaksoy/SemanticSoftSegmentation/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "custom",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Other script, Not applicable (python, Matlab..)",
      "Dependencies": "ImageGraphs / TensorFlow",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Pre-trained models / Hardcoded data / lookup tables /...",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 2,
      "Build/configure score {0=NA, 1,2,3,4,5}": 2,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The code is split in two parts, in two different projects. The second project is trivial to run in matlab without hassle, takes an input image that consists in standard RGB colors for the first half, and the second half should contain features. \nThe first project of the code, which is supposed to generate features is much more difficult to run. It depends on TensorFlow 1.4 (while the readme indicates TensorFlow >= 1.4, it in fact only works with TensorFlow = 1.4). This old TensorFlow does not support Python 3.7, so I had to remove my 3.7 to install a 3.6 (which cannot be installed via Anaconda -- Anaconda spent an entire night trying to downgrade 3.7 to 3.6 but this didn't work). Finally, when the code runs, it outputs a matlab file which contains 128 features. This file should be processed with preprocessFeatures, along with the original image, in the second project.\nThe process is not documented, but can be understood from the context. In general, while it was relatively painful to run, results seem to be reproducible. It would however have been much less painful if I had a Python 3.6 already installed.\nThe lower replicability score is explained by the fact no code is provided for training and only the pre-trained model is given.",
      "Misc. comments": "",
      "Software language": "Python, Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Shape from Metric",
      "DOI": "10.1145/3197517.3201276",
      "Year": 2018,
      "ACM Keywords": [
        "Partial differential equations",
        "Differential calculus",
        "Algebraic topology",
        "Physical simulation",
        "Mesh models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://page.math.tu-berlin.de/~chern/projects/ShapeFromMetric/ShapeFromMetric.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://page.math.tu-berlin.de/~chern/projects/ShapeFromMetric/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://page.math.tu-berlin.de/~chern/projects/ShapeFromMetric/HoudiniImplementations.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "3a83c1e89a44fd17297ee8bc3fb3322c",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "Houdini",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 3,
      "Build/configure score {0=NA, 1,2,3,4,5}": 3,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "Mac OS",
      "Build instructions/comments": "Plugin for Houdini. Code not explicitly given but in the Houdini graph nodes and the digital asset.",
      "Misc. comments": "",
      "Software language": "Python, Other"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "FEPR: Fast Energy Projection for Real-Time Simulation of Deformable Objects",
      "DOI": "10.1145/3197517.3201277",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.utah.edu/~ladislav/dinev18FEPR/dinev18FEPR.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.cs.utah.edu/~ladislav/dinev18FEPR/dinev18FEPR.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Mechanical characterization of structured sheet materials",
      "DOI": "10.1145/3197517.3201278",
      "Year": 2018,
      "ACM Keywords": [
        "Computer-aided design"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www-labs.iro.umontreal.ca/~bernhard/PDF/Schumacher18Mechanical.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://la.disneyresearch.com/publication/structured-sheet-materials/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Efficient reflectance capture using an autoencoder",
      "DOI": "10.1145/3197517.3201279",
      "Year": 2018,
      "ACM Keywords": [
        "Reflectance modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cad.zju.edu.cn/home/hwu/publications/autoenc/LDAE_SIG18_lq.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cad.zju.edu.cn/home/hwu/publications/autoenc/project.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Dynamic kelvinlets: secondary motions based on fundamental solutions of elastodynamics",
      "DOI": "10.1145/3197517.3201280",
      "Year": 2018,
      "ACM Keywords": [
        "Procedural animation",
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://graphics.pixar.com/library/DynaKelvinlets/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://graphics.pixar.com/library/DynaKelvinlets/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://graphics.pixar.com/library/DynaKelvinlets/code.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "9fcfcaadc3603b9dee46c21262a89aa0",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Pixar license permission granted for non-commercial use",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Makefile, CMakeLists",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The output format is .obj mesh files, can be read by many open source software. The authors provide a viewer as a  houdini plugin that can be used with the non-commercial version of houdini and runs smoothly. I was able to reproduce grid deformations similar to the ones in the paper, but not on meshes.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Eulerian-on-lagrangian cloth simulation",
      "DOI": "10.1145/3197517.3201281",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://faculty.cs.tamu.edu/sueda/projects/eol-cloth/WPLS2018.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://faculty.cs.tamu.edu/sueda/projects/eol-cloth/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/sueda/eol-cloth",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "cc8f24eef81283c541b859c05dd8ceed7813271f",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:3cf660564fbd5ff745cd749088cf46801304ca69;origin=https://github.com/sueda/eol-cloth/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 5,
      "Operating system for the test": "Mac OS",
      "Build instructions/comments": "Hardcoded path in the CMakeLists\n\nNeeds MOSEK or GUROBI (commercial free for academic) for the \"online\" mode (optional)\n\nNeeded to replace path\\file to path/file\nOpenmp not mentioned in the deps (I have commented the #include<omp.h>)\n\nBuild issue :\n                                                ^\n/Users/tmp/eol-cloth/src/parseParams.cpp:52:3: error: call to function 'parse'\n      that is neither visible in the template definition nor found by argument-dependent lookup",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "A radiative transfer framework for spatially-correlated materials",
      "DOI": "10.1145/3197517.3201282",
      "Year": 2018,
      "ACM Keywords": [
        "Reflectance modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://giga.cps.unizar.es/~ajarabo/pubs/Jarabo2018radiative/downloads/Jarabo2018radiative.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1805.02651",
      "Project URL": "http://giga.cps.unizar.es/~ajarabo/pubs/Jarabo2018radiative/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Deep Video Portraits",
      "DOI": "10.1145/3197517.3201283",
      "Year": 2018,
      "ACM Keywords": [
        "Appearance and texture representations",
        "Neural networks",
        "Animation",
        "Rendering"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://arxiv.org/pdf/1805.11714.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1805.11714",
      "Project URL": "https://gvv.mpi-inf.mpg.de/projects/DeepVideoPortraits/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Creating and chaining camera moves for qadrotor videography",
      "DOI": "10.1145/3197517.3201284",
      "Year": 2018,
      "ACM Keywords": [
        "Interest point and salient region detections",
        "Graphics systems and interfaces"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://hal.inria.fr/hal-01819103/file/drone.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.inria.fr/hal-01819103",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Non-stationary texture synthesis by adversarial expansion",
      "DOI": "10.1145/3197517.3201285",
      "Year": 2018,
      "ACM Keywords": [
        "Appearance and texture representations",
        "Texturing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://arxiv.org/pdf/1805.04487.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1805.04487",
      "Project URL": "https://vcc.tech/research/2018/TexSyn",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/jessemelpolio/non-stationary_texture_syn",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "c74b8c0adb3a8a0831f491958b827811977108b3",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:54bd512d68a2d323c24921a43c29d6ed90a66f0a;origin=https://github.com/jessemelpolio/non-stationary_texture_syn/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "pytorch/cuda",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The code is supposed to support python3 (script train_half_style starts with python3), but several changes need to be made to make it work with python3: tensor[0] should be replaced by tensor.item(), xrange() should be replaced by range(). Needs also visdom and dominate package which were not listed in the README.",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Full 3D Reconstruction of Transparent Objects",
      "DOI": "10.1145/3197517.3201286",
      "Year": 2018,
      "ACM Keywords": [
        "Point-based models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://vcc.tech/file/upload_file//image/research/att201805151205/FRT.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1805.03482",
      "Project URL": "https://vcc.tech/research/2018/FRT",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/BojianWu/TransRecon",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "44f9c4f849dcfa65ebfe68e68c707de826af5479",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:1a04939a6c824aec13e05aa659386e55323c5d6a;origin=https://github.com/BojianWu/TransRecon/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab/matlab communication toolbox",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": true,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "We could not test it because we don't have the communication toolbox in matlab and it could not be translated to octave (missing functions).",
      "Misc. comments": "",
      "Software language": "C/C++, Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Predictive and generative neural networks for object functionality",
      "DOI": "10.1145/3197517.3201287",
      "Year": 2018,
      "ACM Keywords": [
        "Shape analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://vcc.tech/file/upload_file//image/research/att201805111718/ICON4.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://vcc.tech/research/2018/ICON4",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/Salingo/PGDNN",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "72c801c890ab8233dbbe4a9cb4cfee8a69e7d494",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:3ea5cfc3fbd91d1de1cedd2e20d6b63b6d5568ce;origin=https://github.com/Salingo/PGDNN/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "tensorflow / numpy / scipy",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 5,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Missing dependencies : numpy and scipy but easily installable. The code does not provide the pretrained models and requires to train three different networks (15000 epochs (2-3min per 10 epochs on the test machine)). I was not able to check the results and thus evaluate if the results match with the paper ones.",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "P2P-NET: bidirectional point displacement net for shape transform",
      "DOI": "10.1145/3197517.3201288",
      "Year": 2018,
      "ACM Keywords": [
        "Shape analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://arxiv.org/pdf/1803.09263.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1803.09263",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/kangxue/P2P-NET",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "5c5890a308cc84eafd6845c46d4bf0fc138e5dd8",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:4c4057811f8504d5ce7cefec85323da7f1dc373d;origin=https://github.com/kangxue/P2P-NET/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "tensorflow/numpy/h5py",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 2,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 2,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 6,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Undefined symbols in ubuntu 19.10 (tensorflow 1.3, python 2.7) when compiling the pointnet++ operators.",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Efficient rendering of layered materials using an atomic decomposition with statistical operators",
      "DOI": "10.1145/3197517.3201289",
      "Year": 2018,
      "ACM Keywords": [
        "Reflectance modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://hal.archives-ouvertes.fr/hal-01785457/document",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.archives-ouvertes.fr/hal-01785457/",
      "Project URL": "https://belcour.github.io/blog/research/2018/05/05/brdf-realtime-layered.html",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://hal.archives-ouvertes.fr/hal-01785457v3/file/suppl.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "d446ab4042daf81b0c903d877a0f6362",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Commandline instructions in README",
      "Dependencies": "mitsuba",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 3,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Many webgl demo are provided to validate many steps or approximation of the paper.\n The mitsuba plugin works well by carefully following the steps described in the readme and with an already working version of mitsuba. Scripts for reproducing figs 12 and 13 are provided.\nEasy to find/install dependencies: 2 because installing mitsuba on linux requires several changes on ubuntu 19.10.\n** In config.py I changed -std=c++11 into -std=gnu++11 ;\n** In mitsuba/build/release/mtsgui I changed QtCore, QtOpenGL (and so on) into Qt5Core, Qt5OpenGL (and so on)\n** in data/scons/qt5.py,line 392 changed QtCore into Qt5Core.",
      "Misc. comments": "",
      "Software language": "C/C++, Shader language"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Anderson acceleration for geometry optimization and physics simulation",
      "DOI": "10.1145/3197517.3201290",
      "Year": 2018,
      "ACM Keywords": [
        "Nonconvex optimization",
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://arxiv.org/pdf/1805.05715.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1805.05715",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/bldeng/AASolver",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "ac40a11a29756821400b58c2197d6dfb80c2f59e",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:ac40a11a29756821400b58c2197d6dfb80c2f59e;origin=https://github.com/bldeng/AASolver/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "BSD",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "Eigen / glut / libigl / OpenMesh",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Trivial to make it work on Windows/VS2017, despite the original code was not tested on this platform. Not all 3d models provided, but enough to play with and be confident with results.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Analytic spherical harmonic coefficients for polygonal area lights",
      "DOI": "10.1145/3197517.3201291",
      "Year": 2018,
      "ACM Keywords": [
        "Rendering"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://cseweb.ucsd.edu/~viscomp/projects/ash/PaperData/ash.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://cseweb.ucsd.edu/~viscomp/projects/ash/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://drive.google.com/file/d/17qWANGV1cnKU39_Uz4RyBPPr64fl5yxO/view?usp=sharing",
      "Code URL2": "",
      "MD5 sum (for archives)": "70e67b47af9c0c78e05b4d0fed3769cf",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Makefile",
      "Dependencies": "SOIL/lopengl/glew/glfw/freeimage/assimp/glut/glu",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 3,
      "Build/configure score {0=NA, 1,2,3,4,5}": 3,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 3,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "I had to download SOIL from a github+fix includes. Pb of redefinition of symbols between glext and glew. Finally managed to compile but at execution I got a shader problem: extension `GL_EXT_gpu_shader4' unsupported in vertex shader. I was therefore unable to reproduce any result.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "VisemeNet: Audio-Driven Animator-Centric Speech Animation",
      "DOI": "10.1145/3197517.3201292",
      "Year": 2018,
      "ACM Keywords": [
        "Machine learning algorithms",
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.dgp.toronto.edu/~karan/papers/visemenetSIG18.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1805.09488",
      "Project URL": "https://people.umass.edu/~yangzhou/visemenet/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/yzhou359/VisemeNet_tensorflow",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "94c36dcd6f475ed493207891ec8f2822d0580a27",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:94c36dcd6f475ed493207891ec8f2822d0580a27;origin=https://github.com/yzhou359/VisemeNet_tensorflow/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "tensorflow / cudnn / numpy / scipy / matplotlib / python_speech_features / Maya",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
      "License of the data": "custom",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Note that the VisemeNet code has strong requirements on software and library versions. The code does run on Python 3.5 but not on Python 3.6.5. Also, Python 3.5 now comes with a default scipy 1.4.0 which is not suitable, though an older scipy 1.1.0 works.\nI could test the prediction with the provided trained network on the single provided audio file, as well as the Maya script to use the results on a public face rig. This worked nicely.\nI did not test the training as data are only accessible upon (non-anonymous) request, and training instructions and scripts are not provided (although a non-standalone train_visemenet.py file is present, it does not run on its own).\n\n--alternative test on linux--\nI failed to have the tensorflow package within anaconda to work with libcudnn.so.8.0.",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "A moving least squares material point method with displacement discontinuity and two-way rigid body coupling",
      "DOI": "10.1145/3197517.3201293",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.seas.upenn.edu/~cffjiang/research/mlsmpm/hu2018mlsmpm.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://yzhu.io/publication/mpm2018siggraph/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/yuanming-hu/taichi_mpm",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "3bb90fbe4c901aafc048dbb2d8d8aa388226d011",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:3812456fcd194c48e749e24ad5b9a4189138375f;origin=https://github.com/yuanming-hu/taichi_mpm/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Commandline instructions in README",
      "Dependencies": "taichi.h",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "An example is provided in file mls.mpm88 (which is particularly well explained) which is consistent with the paper result. Many other examples are provided in the scripts folder, however this requires installing taichi (a legacy branch) which fails (even after adding a -fpermissive option which suppressed some errors) with:\n\"error: no match for ‘operator+=’ (operand types are ‘taichi::RigidBody<2>::InertiaType’ {aka ‘float’} and ‘taichi::MatrixND<2, float, taichi::InstSetExt::AVX2>’)\" \n\nHence I was not able to reproduce other results using the provided scripts.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Towards virtual reality infinite walking: dynamic saccadic redirection",
      "DOI": "10.1145/3197517.3201294",
      "Year": 2018,
      "ACM Keywords": [
        "Virtual reality",
        "Perception"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://research.nvidia.com/sites/default/files/pubs/2018-08_Towards-Virtual-Reality/paper_0.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://1iyiwei.github.io/dsr-sig18/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Object-aware guidance for autonomous scene reconstruction",
      "DOI": "10.1145/3197517.3201295",
      "Year": 2018,
      "ACM Keywords": [
        "Shape analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://vcc.szu.edu.cn/file/upload_file//image/research/att201805111047/ObjNBV.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1805.07794",
      "Project URL": "https://vcc.tech/research/2018/ObjNBV",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/againxx/nbo-autoscanning",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "21509d415ec911df431395e0df8db9f02f04928c",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:05c00414d5a78f9f165593d1baa773b7f19f53be;origin=https://github.com/againxx/nbo-autoscanning/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Makefile, CMakeLists",
      "Dependencies": "ROS/opencv/cuDNN/ElasticFusion/Pangolin/SuiteSparse/cuda",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 5,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Unable to build: ROS is not compiling. Old version of cuda is required (not working on virtual machine).",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "The human touch: measuring contact with real human soft tissues",
      "DOI": "10.1145/3197517.3201296",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.ubc.ca/research/HumanTouch/HumanTouchSIGGRAPH2018.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://sensorimotor.cs.ubc.ca/2018/08/02/measuring-contact-with-real-human-bodies/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Autocomplete 3D sculpting",
      "DOI": "10.1145/3197517.3201297",
      "Year": 2018,
      "ACM Keywords": [
        "User interface design",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "http://junxnui.github.io/research/sig18_autocomplete_3D_sculpting.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1703.10405",
      "Project URL": "https://1iyiwei.github.io/a3s-sig18/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Space-time tomography for continuously deforming objects",
      "DOI": "10.1145/3197517.3201298",
      "Year": 2018,
      "ACM Keywords": [
        "Computer Vision",
        "Computer Graphics"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://vccimaging.org/Publications/Zang2018Space-time/Zang2018Space-time.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://vccimaging.org/Publications/Zang2018Space-time/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/gmzang/SpaceTimeTomography",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "a2e6a2b1dd1da48e502fc25126aa9b8a139ed543",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:a2e6a2b1dd1da48e502fc25126aa9b8a139ed543/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Creative Commons",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "None",
      "Dependencies": "argtable/eigen/cimg/glut/glew/libtiff",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 1,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 6,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "There are multiple issues with the code. While no makefile is provided, it is relatively easy (though cumbersome because of several dependencies) to create a Visual Studio 2017 project. Not listed as a dependency is libtiff.\nIn main.cpp, due to issues with \"goto\", you need to move the declarations of data (line 142), proNo (line 148), scene (line 149), mainWindow (line 154) at the begining of the main. It should look like:\n\tVolumeData* data = new VolumeData;\n\tGLUTSceneContainer *mainWindow;\n\tint proNo;\n\tST_Tomography *scene;\naround line 49.\nIn ST_Tomography.cpp, strdup (line 188) should be replaced by _strdup because it is deprecated in Visual Studio 2017 (it produces a compilation error although the code is supposed to compile with Visual Studio 2015 and 2018 according to the Readme).\nBut then multiple files seems missing, and could either not be found on the internet (a \"linear_solver.h\" that contains a \"linear_solver\" namespace, a \"scope.h\" that includes a #define called \"utilities_scope_defines\", a file called \"image_blas.h\" that performs blas-like operations on images), or a generic and could be recoded (e.g., \"vec3.h\"). Similarly, \"str_format\" is not a standard function in Visual Studio, so I am not sure where it is supposed to come from.\nUltimately, I could not compile the code.\n\n--alternative test on linux--\nUnable to compile, had to create a CMakeLists (no build instruction), several bugfix needed: goto crosses initialization issues, includes missing (cstring) missing linear_solver.h file ...",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Megapixel Adaptive Optics: Towards Correcting Large-scale Distortions in Computational Cameras",
      "DOI": "10.1145/3197517.3201299",
      "Year": 2018,
      "ACM Keywords": [
        "Computational photography"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://vccimaging.org/Publications/Wang2018AdaptiveOptics/Wang2018AdaptiveOptics.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://vccimaging.org/Publications/Wang2018AdaptiveOptics/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/vccimaging/MegapixelAO",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "97fbc091e97a0d42d6c8cd3026416eb82af223b7",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:97fbc091e97a0d42d6c8cd3026416eb82af223b7;origin=https://github.com/vccimaging/MegapixelAO/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Creative Commons",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "matlab / glad / KHR / cuda / OpenCV / GLFW / FlyCapture2",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": true,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Part of the code requires an SLM to run, which I do not have ; this part also only compiles with VS2015 and not VS2017 (which I have), and has several dependencies. However, parts of the code (simple adaptive optics and the solver) also allow to reproduce some the paper's figures, and trivially run on matlab without dependencies.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .., Shader language"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Fast and deep deformation approximations",
      "DOI": "10.1145/3197517.3201300",
      "Year": 2018,
      "ACM Keywords": [
        "Neural networks",
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://graphics.berkeley.edu/papers/Bailey-FDD-2018-08/Bailey-FDD-2018-08.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://graphics.berkeley.edu/papers/Bailey-FDD-2018-08/index.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Point convolutional neural networks by extension operators",
      "DOI": "10.1145/3197517.3201301",
      "Year": 2018,
      "ACM Keywords": [
        "Neural networks",
        "Shape analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://arxiv.org/pdf/1803.10091.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1803.10091",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/matanatz/pcnn",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "69a739b61e6e5cb32a666e2531bcd39f623936ce",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:f652ea26227984f55e60493ad9e84403a7cf6611;origin=https://github.com/matanatz/pcnn/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "tensorflow / pyhocon / h5py",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data",
      "License of the data": "ModelNet40: All CAD models are downloaded from the Internet and the original authors hold the copyright of the CAD models. The label of the data was obtained by us via Amazon Mechanical Turk service and it is provided freely. This dataset is provided for the convenience of academic research only.",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "I needed to install tensorflow and pyhocon manually. No trained models are given and I wasn't able to generate the models from the (provided) training data (timeout, 250 epoch required and the train.py refused to consider my GPU and thus did the training on CPU). \n\nAfter a single epoch, the evaluation script fails (version issue of the provider package?): \n\nAttributeError: module 'provider' has no attribute 'ClassificationProvider'",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Robust solving of optical motion capture data by denoising",
      "DOI": "10.1145/3197517.3201302",
      "Year": 2018,
      "ACM Keywords": [
        "Motion capture"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.theorangeduck.com/media/uploads/other_stuff/neural_solver.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.theorangeduck.com/page/robust-solving-optical-motion-capture-data-denoising",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 3,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Developability of triangle meshes",
      "DOI": "10.1145/3197517.3201303",
      "Year": 2018,
      "ACM Keywords": [
        "Discretization",
        "Mesh geometry models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.cmu.edu/~kmcrane/Projects/DiscreteDevelopable/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.columbia.edu/cg/developability/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/odedstein/DevelopabilityOfTriangleMeshes",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "67848c18c3b0c6389fef9b165a37fe7db5eed0f3",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:971e49f26a14d3a7f7a263495223209a93fecec7;origin=https://github.com/odedstein/DevelopabilityOfTriangleMeshes/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "GPL",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Makefile, CMakeLists",
      "Dependencies": "libigl",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 5,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The code requires an old version of libigl (the current master is not compatible). We have tried to checkout several versions (2018, end 2017) but none of them was fine.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "tempoGAN: a temporally coherent, volumetric GAN for super-resolution fluid flow",
      "DOI": "10.1145/3197517.3201304",
      "Year": 2018,
      "ACM Keywords": [
        "Neural networks",
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://arxiv.org/pdf/1801.09710.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1801.09710",
      "Project URL": "https://ge.in.tum.de/publications/tempogan/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/thunil/tempoGAN",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "9e33c8ef6f6ed7fe52363120fed2f8b345bd3702",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:0b6d458d8be5036de696c07e0375ed54f2e01b26;origin=https://github.com/thunil/tempoGAN/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Apache License 2.0",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "CMakeLists, Not applicable (python, Matlab..)",
      "Dependencies": "CUDA / cudnn / tensorflow-gpu  / imagio / keras / scipy / numpy / mantaflow",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
      "License of the data": "https://ge.in.tum.de/download/data/tempoGAN_model2d.zip ; https://ge.in.tum.de/download/data/tempoGAN_model3d.zip",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 3,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 6,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Complex CUDA/cudNN/tensorflow/manta infrastructure but well documented. Training data can be reproduced and pre-trained model can be easily reused.",
      "Misc. comments": "",
      "Software language": "C/C++, Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Deep learning of biomimetic sensorimotor control for biomechanical human animation",
      "DOI": "10.1145/3197517.3201305",
      "Year": 2018,
      "ACM Keywords": [
        "Machine learning approaches",
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://web.cs.ucla.edu/~nakada/pdfs/siggraph18_nakada.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Designing patterns using triangle-quad hybrid meshes",
      "DOI": "10.1145/3197517.3201306",
      "Year": 2018,
      "ACM Keywords": [
        "Mesh models",
        "Mesh geometry models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.dmg.tuwien.ac.at/geom/ig/publications/pattern/pattern.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://repository.kaust.edu.sa/handle/10754/630175",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Gaussian material synthesis",
      "DOI": "10.1145/3197517.3201307",
      "Year": 2018,
      "ACM Keywords": [
        "Gaussian processes",
        "Neural networks",
        "Ray tracing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://users.cg.tuwien.ac.at/~zsolnai/wp/wp-content/uploads/2018/04/gms.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1804.08369",
      "Project URL": "https://users.cg.tuwien.ac.at/zsolnai/gfx/gaussian-material-synthesis/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://users.cg.tuwien.ac.at/zsolnai/wp/wp-content/uploads/2018/04/gms-supplementary.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "7436791C4E1A279051C66124D3F8064B",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "keras / tensorflow / blender / pillow / GPy / sklearn / climin",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
      "License of the data": "MIT",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 2,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "There are minor bugs that need to be fixed, that include mixes of tab and space in the Python code (l.70 and 406 of gms.py), the syntax `i+1`.zfill(4) was deemed incorrect by my Python 3.6.8 (l.512, 674 and 690 of gms.py ; replaced by str(i+1).zfill(4)). Error as well on line 20 : from sklearn.gaussian_process import GaussianProcess ; it seems sklearn has evolved and doesn't have GaussianProcess (now separated as classifier or regressor). This line can be commented out.\nThe main issue for making it run was the lack of documentation both for installing and for running the code, appart from a short readme. In practice :\nGPy is a Gaussian Process library that needs to be installed with pip (I was looking for a GPy.py in the source folder!), sklearn needs to be installed, as well as climin, keras and tensorflow. Regarding tensorflow, it needs to be sufficiently recent to have tf_utils (1.14.0 worked, but not my older install).\nAlso, Pillow needs to be installed with pip. However, the trick is that it needs to be installed *with the Python provided with Blender* and not your usual Python install !\nUltimately, I could run gms.py and nn-predict.py (which both produce images) but I could not get the Python script within material-loader.blend to run : this script merely erased all .png images of the directory (included reference.png and resolution.png needed to run gms.py and nn-predict.py), and doesn't seem to produce anything. The code within this script is obscure : for instance, the file which likely should contain the output (called \"output.txt\") is merely erased at the begining of the code if it already exists, and then never used again later in the code for writing.\nI was expecting some kind of user interface (similarly to the one shown in the paper) to navigate within the latent space of BRDFs, but I didn't see one. Since there isn't much documentation, I am not sure what I am looking at and how to use the code.",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "An implicit frictional contact solver for adaptive cloth simulation",
      "DOI": "10.1145/3197517.3201308",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www-users.cselabs.umn.edu/~lixx4611/files/clothNodalContactSolver.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.inria.fr/hal-01834705",
      "Project URL": "http://www-users.cselabs.umn.edu/~lixx4611/contact_friction.html",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/lijieumn/argus-distribution",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "866bd38a0b1caa7560e66ecae5e19b65b49558a5",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:b163a447e3e644d81f84b3baf4699dd05cb677b8;origin=https://github.com/lijieumn/argus-distribution/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Core not covered by a license, two libraries with GPL/Mozilla licenses and one with a specific license",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Makefile, CMakeLists",
      "Dependencies": "BLAS/Boost/gfortran/LAPACK/libpng/libxmu/libxi/Eigen3/glfw3/glew",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Easy to adapt: would require more comments in the code, but doable.",
      "Misc. comments": "",
      "Software language": "C/C++, Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Animating fluid sediment mixture in particle-laden flows",
      "DOI": "10.1145/3197517.3201309",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://mingg13.github.io/papers/2018_Fluid_Sediment.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Foldsketch: enriching garments with physically reproducible folds",
      "DOI": "10.1145/3197517.3201310",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation",
        "Mesh geometry models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.ubc.ca/labs/imager/tr/2018/FoldSketch/doc/FoldSketch.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.ubc.ca/labs/imager/tr/2018/FoldSketch/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "DeepMimic: example-guided deep reinforcement learning of physics-based character skills",
      "DOI": "10.1145/3197517.3201311",
      "Year": 2018,
      "ACM Keywords": [
        "Control methods",
        "Reinforcement learning",
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://xbpeng.github.io/projects/DeepMimic/2018_TOG_DeepMimic.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1804.02717",
      "Project URL": "https://xbpeng.github.io/projects/DeepMimic/index.html",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/xbpeng/DeepMimic",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "a458f1e1da928d04ef1434bb53b97264d53f4102",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:54efaf5589b3d1e4d1abe7e574b4d2b15a3d8de0;origin=https://github.com/xbpeng/DeepMimic/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Makefile, Not applicable (python, Matlab..)",
      "Dependencies": "libbullet/eigen3/opengl/freeglut/glew/swig/openmpi/tensorflow",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "I was able to run and visualize pretrained policies + learned a policy training \"humanoid3d_spinkick_args.txt",
      "Misc. comments": "",
      "Software language": "C/C++, Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Perception-driven semi-structured boundary vectorization",
      "DOI": "10.1145/3197517.3201312",
      "Year": 2018,
      "ACM Keywords": [
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.ubc.ca/labs/imager/tr/2018/PerceptionDrivenVectorization/perception-driven-vectorization.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.ubc.ca/labs/imager/tr/2018/PerceptionDrivenVectorization/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://www.cs.ubc.ca/labs/imager/tr/2018/PerceptionDrivenVectorization/executable.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "E3323994E24C0C70D3F9E8EDA5EE242C",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Code License (if any)": "custom",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "None",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "The binary runs nicely. I could not find the examples shown in the paper for the multicolored examples, but some images are quite similar (e.g., a different penguin, a different red car, a different crown...) and produce reasonable results.\nNote that the required numpy is version 1.16.1 and it doesn't work with 1.14.5 -- the python code is just the GUI.",
      "Misc. comments": "",
      "Software language": "Cannot answer"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Deep image-based relighting from optimal sparse samples",
      "DOI": "10.1145/3197517.3201313",
      "Year": 2018,
      "ACM Keywords": [
        "Rendering"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.ics.uci.edu/~yug10/projects/megvii/ref/Xu%20-%202018%20-%20Deep%20Image-Based%20Relighting%20from%20Optimal%20Sparse%20Samples.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://cseweb.ucsd.edu/~viscomp/projects/SIG18Relighting/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/zexiangxu/Deep-Relighting",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "f29e08bcd7ac72fee591a4bded1d0a5c8e873d59",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:a0023af5c8770d20b0cbfb1187a50e39be7c90c4;origin=https://github.com/zexiangxu/Deep-Relighting/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Disclaimer:This software and related data are published for academic and non-commercial use only.",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "This software and related data are published for academic and non-commercial use only.",
      "Dependencies": "tensorflow",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data",
      "License of the data": "published for academic and non-commercial use only",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Unable to unzip the training data (320Go zip file) (64Go RAM computer).",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "StrokeAggregator: consolidating raw sketches into artist-intended curve drawings",
      "DOI": "10.1145/3197517.3201314",
      "Year": 2018,
      "ACM Keywords": [
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.ubc.ca/labs/imager/tr/2018/StrokeAggregator/StrokeAggregator_authorversion.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.cs.ubc.ca/labs/imager/tr/2018/StrokeAggregator/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://www.cs.ubc.ca/labs/imager/tr/2018/StrokeAggregator/strokeaggregator_binary.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "a3b0a2742c4b9e060c76976538898bb7",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Code License (if any)": "University of British Columbia Evaluation Software License",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "sip / pyqt4",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 3,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "For this paper, the authors provided precompiled executables implementing their approach with command line interface. On top of these tools, a graphical user interface is defined in Python to load the the input drawing, set the algorithm parameters, call the precompiled binaries, and display and save the results.\n\nThe precompiled binaries worked directly.\n\nI had a few difficulties to handle the dependencies of the python script. First, PyQt4 urls given in README.txt are wrong (correct url can be found here: https://www.lfd.uci.edu/~gohlke/pythonlibs/#pyqt4). Also, the documentation does not mention to install sip before PyQt4, while it seems to be a mandatory step (pip install sip).\n\nOnce this is all fixed, the program runs smoothly and all the results can be reproduced.\nThe application processes SCAP files, and converters (scap_to_svg and svg_to_scap) are provided. Core algorithms are provided as binaries, yet the software can be adapted in other context as long as the drawings can be stored as svg files.",
      "Misc. comments": "",
      "Software language": "Python, Cannot answer"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Learning basketball dribbling skills using trajectory optimization and deep reinforcement learning",
      "DOI": "10.1145/3197517.3201315",
      "Year": 2018,
      "ACM Keywords": [
        "Neural networks",
        "Motion capture",
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://graphics.cs.cmu.edu/wp/wp-content/uploads/2018/05/BasketballSIGGRAPH2018.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://graphics.cs.cmu.edu/?p=1590",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Single-photon 3D imaging with deep sensor fusion",
      "DOI": "10.1145/3197517.3201316",
      "Year": 2018,
      "ACM Keywords": [
        "Computational photography",
        "3D imaging",
        "Neural networks"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.computationalimaging.org/wp-content/uploads/2018/05/lindell_2018_siggraph.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.computationalimaging.org/publications/single-photon-3d-imaging-with-deep-sensor-fusion/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://drive.google.com/open?id=1Yv6s3pD7g0pBnE9DVO_DkbQm-X_W8K6Z",
      "Code URL2": "",
      "MD5 sum (for archives)": "85ad8450d8eda8e1659cfcd6d27dc87a",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Other script, Not applicable (python, Matlab..)",
      "Dependencies": "matlab/ torch / scikit_image / scipy/tqdm / numpy / skimage /tensorboardX / torchvision / opencv / libann",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 1,
      "Build/configure score {0=NA, 1,2,3,4,5}": 1,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "We tried and failed to use the provided code three different time on linux and Mac OS, and could not generate the Training Data.\n\nTraining data generation requires many steps to convert the NYU dataset to simulated SPAD measurements. After downloading (see provided script download_nyu_dataset.bash) and inflating the NYUV2 dataset, I have done the following actions:\n 1. I compiled Opencv2.4 and libann. I modified simulated_data/intrinsic_texture/mex/compile.m with the installation paths of these library. The compilation of the mex files ran smoothly\n 2. I compiled simulated_data/nyu_utils/compile.m. I didn't have libfreenect in hand, so I commented the two first lines of the script. \n 3.In order to run the simulated_data/ConvertRGBD.m script, I had to move the opencv libraries to simulated_data, so matlab can dynamically link them (there is probably a better way to link, but I couldn't find it).\nMatlab finds the library, but triggers the following error: \nERROR: MATLAB:unexpectedCPPexception\nUnexpected Standard exception from MEX file.\nWhat() is:/mathworks/devel/bat/B3p1/build/3p/sources/OpenCV/modules/core/src/matrix.cpp:1319: error: (-213) Unknown/unsupported array type in function getMat_\n\nConsidering the time required to download the data and compile the dependencies, I stopped after 10 hours of experiments.",
      "Misc. comments": "",
      "Software language": "Python, Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Gradient-domain processing within a texture atlas",
      "DOI": "10.1145/3197517.3201317",
      "Year": 2018,
      "ACM Keywords": [
        "Computer graphics"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://hhoppe.com/atlasfilter.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://hhoppe.com/proj/atlasfilter/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/mkazhdan/TextureSignalProcessing",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "59b0bce546c35f248068b618befd7ded835d77e4",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:b43b7d324addbebac4a1956e736041dabb512276;origin=https://github.com/mkazhdan/TextureSignalProcessing/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "BSD",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Makefile, IDE Project (VS,..)",
      "Dependencies": "glew/glut/opengl",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "I had to rename a \"triangle.h\" to \"Triangle.h\" file.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Toward wave-based sound synthesis for computer animation",
      "DOI": "10.1145/3197517.3201318",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://graphics.stanford.edu/projects/wavesolver/assets/wavesolver2018.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://graphics.stanford.edu/projects/wavesolver/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Reconstructing scenes with mirror and glass surfaces",
      "DOI": "10.1145/3197517.3201319",
      "Year": 2018,
      "ACM Keywords": [
        "3D imaging",
        "Reflectance modeling",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.gcc.tu-darmstadt.de/media/gcc/papers/mirror-scenes.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://research.fb.com/publications/reconstructing-scenes-with-mirror-and-glass-surfaces/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Rule-free sewing pattern adjustment with precision and efficiency",
      "DOI": "10.1145/3197517.3201320",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://web.cse.ohio-state.edu/~wang.3602/Wang-2018-RFS/Wang-2018-RFS.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "The layer laboratory: a calculus for additive and subtractive composition of anisotropic surface reflectance",
      "DOI": "10.1145/3197517.3201321",
      "Year": 2018,
      "ACM Keywords": [
        "Reflectance modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://rgl.s3.eu-central-1.amazonaws.com/media/papers/Zeltner2018Layer_1.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://rgl.epfl.ch/publications/Zeltner2018Layer",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://rgl.s3.eu-central-1.amazonaws.com/media/papers/Zeltner2018Layer_2.zip",
      "Code URL2": "https://rgl.s3.eu-central-1.amazonaws.com/media/papers/Zeltner2018Layer_1.zip",
      "MD5 sum (for archives)": "744fa17a495a639abbf8836d2bd5db25",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMakeLists, Not applicable (python, Matlab..)",
      "Dependencies": "umfpack / sparseqr/ libvips / jupyter",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 1,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Linux : compiled successfully after several major changes:\n\n** File mitsuba-layers/src/liblayer/microfacet.cpp: because of a delete use of = for a std::bind, I changed lines 602 forward to: \n    auto const &integ1 = std::bind(&microfacet_fresnel, mu_o, mu_i, 0.0, std::placeholders::_1, alpha_u, alpha_v, eta_);\n    auto const &integ2 = std::bind(&microfacet_fresnel_no_additional_factors, mu_o, mu_i, 0.0, std::placeholders::_1, alpha_u, alpha_v, eta_);\n    auto integrand = &integ1;\n    if (fresnel_only) { integrand = &integ2;  }\n\n** File mitsuba-layers/include/mitsuba/layer/sparse.h add #include<memory>\n** File mitsuba-layers/ext/enoki/include/enoki/alloc.h add #include<cstring>\n** File mitsuba-layers/CMakeLists.txt : add  -fpermissive to CMAKE_CXX_FLAGS\n\n** Files mitsuba-layers/ext/openexr/CMakeLists.txt an nori/ext/openexr/CMakeLists.txt\nadd_custom_target(CopyIlmBaseLibs\n  COMMAND ${CMAKE_COMMAND} -E copy_directory\n  ${CMAKE_CURRENT_BINARY_DIR}/IlmBase/Half/\n  ${CMAKE_CURRENT_BINARY_DIR}/OpenEXR/IlmImf/\n  COMMAND ${CMAKE_COMMAND} -E copy_directory\n  ${CMAKE_CURRENT_BINARY_DIR}/IlmBase/IlmThread/\n  ${CMAKE_CURRENT_BINARY_DIR}/OpenEXR/IlmImf/\n  COMMAND ${CMAKE_COMMAND} -E copy_directory\n  ${CMAKE_CURRENT_BINARY_DIR}/IlmBase/Iex/\n  ${CMAKE_CURRENT_BINARY_DIR}/OpenEXR/IlmImf/\n  COMMAND ${CMAKE_COMMAND} -E copy_directory\n  ${CMAKE_CURRENT_BINARY_DIR}/IlmBase/Imath/\n  ${CMAKE_CURRENT_BINARY_DIR}/OpenEXR/IlmImf/\n)\ninstead of \nadd_custom_target(CopyIlmBaseLibs\nCOMMAND ${CMAKE_COMMAND} -E copy_directory\n  ${CMAKE_CURRENT_BINARY_DIR}/IlmBase/Half/$<CONFIGURATION>\n  ${CMAKE_CURRENT_BINARY_DIR}/OpenEXR/IlmImf/$<CONFIGURATION>\n  COMMAND ${CMAKE_COMMAND} -E copy_directory\n  ${CMAKE_CURRENT_BINARY_DIR}/IlmBase/IlmThread/$<CONFIGURATION>\n  ${CMAKE_CURRENT_BINARY_DIR}/OpenEXR/IlmImf/$<CONFIGURATION>\n  COMMAND ${CMAKE_COMMAND} -E copy_directory\n  ${CMAKE_CURRENT_BINARY_DIR}/IlmBase/Iex/$<CONFIGURATION>\n  ${CMAKE_CURRENT_BINARY_DIR}/OpenEXR/IlmImf/$<CONFIGURATION>\n  COMMAND ${CMAKE_COMMAND} -E copy_directory\n  ${CMAKE_CURRENT_BINARY_DIR}/IlmBase/Imath/$<CONFIGURATION>\n  ${CMAKE_CURRENT_BINARY_DIR}/OpenEXR/IlmImf/$<CONFIGURATION>\n)\n\n** file nori-layers/ext/tbb/include/tbb/pipeline.h\nReplace line 328:\ntemplate<typename T> struct tbb_trivially_copyable { enum { value = std::has_trivial_copy_constructor<T>::value }; };\nby:\n template<typename T> struct tbb_trivially_copyable { enum { value = std::is_trivially_copy_constructible<T>::value }; };\n\n\n\nHowever none of the jupyter notebooks worked due to a problem with the version of prompt_toolkit. jupyter notebooks to replicate the results are provided. I could turn some of them into python scripts, but there were a lot of compatibility issues with matplotlib. Also don't forget to source setpath.sh to be able to import the compiled mitsuba in python.\n\nMacOS Attempt: The paper provides the code and data to reproduce the paper results (C++ code and jupyter notebooks to reproduce the figures). Unfortunately, the mitsuba-layers and nori renderer fail to compile on linux and macOS. E.g.:\n  - mitsuba-layers (on macOS): issue with tbb\n     [  1%] Built target mitsuba-layer-obj\n     [  1%] Built target tbb_def_files\n     [  1%] Linking CXX shared library libtbb.dylib\n     clang: error: no such file or directory: 'and'\n     clang: error: no such file or directory: 'data/mitsuba-layers/b1/ext_build/tbb/tbb.def'\n  - nori : Thread issue at cmake level.",
      "Misc. comments": "",
      "Software language": "C/C++, Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Perception-aware modeling and fabrication of digital drawing tools",
      "DOI": "10.1145/3197517.3201322",
      "Year": 2018,
      "ACM Keywords": [
        "Haptic devices",
        "Physical simulation",
        "Graphics input devices",
        "Perception"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://pdf.mmci.uni-saarland.de/projects/DigitalStylus/files/Piovarci2018.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://pdf.mmci.uni-saarland.de/projects/DigitalStylus/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/misop/Perception-Aware-Modeling-and-Fabrication-of-Digital-Drawing-Tools",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "d6649efb58d1da20ff6bcb07efbfc3c25745656c",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:f1f4384711759f08098d5e338b28dc7318337d47;origin=https://github.com/misop/Perception-Aware-Modeling-and-Fabrication-of-Digital-Drawing-Tools/",
      "Software type {Code, Binary, Partial Code}": "Partial Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab/matlab curve fitting toolbox",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "I was able to generate partial curves from the input data. Curve fitting toolbox missing for generating all the curves. Input data provided since special hardware setup is needed to reproduce the data (hardware assembly detailed on the project webpage)",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Stereo magnification: learning view synthesis using multiplane images",
      "DOI": "10.1145/3197517.3201323",
      "Year": 2018,
      "ACM Keywords": [
        "Computational photography",
        "Neural networks",
        "Image-based rendering",
        "Virtual reality"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://people.eecs.berkeley.edu/~tinghuiz/papers/siggraph18_mpi_lowres.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1805.09817",
      "Project URL": "https://people.eecs.berkeley.edu/~tinghuiz/projects/mpi/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/google/stereo-magnification",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "f2041f80ed8c340173a6048375ba900201c1f1e7",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:402b5492bff80d1403d5e7b4715f7c8d0f568b15;origin=https://github.com/google/stereo-magnification/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Apache",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "tensorflow",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
      "License of the data": "Data: Creative Commons Attribution 4.0 International License.",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Needed to adapt a little to make it work with python3.6 and tensorflow (imports/print syntax corrections).",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "An advection-reflection solver for detail-preserving fluid simulation",
      "DOI": "10.1145/3197517.3201324",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://jzehnder.me/publications/advectionReflection/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://jzehnder.me/publications/advectionReflection/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://jzehnder.me/publications/advectionReflection/plume.py",
      "Code URL2": "",
      "MD5 sum (for archives)": "c5ffd6c37bf82f61115e7cad95aec27c",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "mantaflow",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "runs very smoothly, but the renderings are different in the paper, the results are consistent nevertheless.",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Learning three-dimensional flow for interactive aerodynamic design",
      "DOI": "10.1145/3197517.3201325",
      "Year": 2018,
      "ACM Keywords": [
        "Gaussian processes",
        "Real-time simulation",
        "Physical simulation",
        "Engineering"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://pub.ist.ac.at/~bbickel/downloads/2018_sigg_Learning3DAerodynamics.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://visualcomputing.ist.ac.at/publications/2018/LearningFlow/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Toonsynth: example-based synthesis of hand-colored cartoon animations",
      "DOI": "10.1145/3197517.3201326",
      "Year": 2018,
      "ACM Keywords": [
        "Motion processing",
        "Image processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://dcgi.fel.cvut.cz/home/sykorad/Dvoroznak18-SIG.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://dcgi.fel.cvut.cz/home/sykorad/toonsynth.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Immersion of self-intersecting solids and surfaces",
      "DOI": "10.1145/3197517.3201327",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation",
        "Volumetric models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://run.usc.edu/immersion/LiBarbic-SIGGRAPH2018.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://run.usc.edu/immersion/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://run.usc.edu/vega/form.php?VegaFEM-v4.0.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "1ee79cd558af5909acf4536bcd007710",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "BSD",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Makefile",
      "Dependencies": "boost / glut / glew / CGAL / MKL / Eigen / libigl / Pardiso / glui / CORE / Cg / WxWidgets",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 2,
      "Build/configure score {0=NA, 1,2,3,4,5}": 2,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "On Linux: multiple dependencies needed libmkl and pardiso for edit with ARAP. Was able to replicate a similar torus experiment. Many small examples already configured are provided in the example section of the code.\n\n-- Alternative test on windows --\nCould not compile on Windows despite the provided Visual Studio solution file. This is due to the very long list of dependencies and errors in the Visual Studio solution (some files do not exist like tribox2.cpp, some paths are hardcoded...). I assume it could be done with significant efforts.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Box cutter: atlas refinement for efficient packing via void elimination",
      "DOI": "10.1145/3197517.3201328",
      "Year": 2018,
      "ACM Keywords": [
        "Texturing",
        "Mesh geometry models",
        "Parametric curve and surface models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.ubc.ca/labs/imager/tr/2018/BoxCutter/Limper2018_BoxCutter.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.ubc.ca/labs/imager/tr/2018/BoxCutter/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://www.cs.ubc.ca/labs/imager/tr/2018/BoxCutter/BoxCutter_Executable.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "cb81cf27f2c56796e567a1eef55db74c",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "None",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "can produce paper-like result on the girl data.",
      "Misc. comments": "",
      "Software language": "Cannot answer"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Synthetic depth-of-field with a single-camera mobile phone",
      "DOI": "10.1145/3197517.3201329",
      "Year": 2018,
      "ACM Keywords": [
        "Computational photography",
        "Image processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://graphics.stanford.edu/papers/portrait/wadhwa-portrait-sig18.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1806.04171",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Dexterous manipulation and control with volumetric muscles",
      "DOI": "10.1145/3197517.3201330",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation",
        "Motion processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://mrl.snu.ac.kr/research/ProjectDexterous/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://mrl.snu.ac.kr/research/ProjectDexterous/Page.htm",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/lsw9021/DexterousManipulation",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "718ac3c8c470c94bebf0eb88c4dbbeeaec6004c7",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:a5537c5f067237706689393a1973396d9c85fcec;origin=https://github.com/lsw9021/DexterousManipulation/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "DART / Boost / Eigen / IPOPT / tinyxml / OpenGL / glut",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 3,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Several unspecified dependencies (tinyxml, OpenGL, glut...). I had to change few paths in the source code to locate OpenGL properly. Unable to check the output of the executables (no explanations in the readme). Note that the code is not mentioned in the project page but available on one of the authors github page. vmcon fails after a long series of NaN and nothing to render.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Progressive Parameterizations",
      "DOI": "10.1145/3197517.3201331",
      "Year": 2018,
      "ACM Keywords": [
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://www.dropbox.com/s/jqn1xnc7orpjze5/papers_306s4-file1.pdf?dl=0",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://staff.ustc.edu.cn/~fuxm/projects/ProgressivePara/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/ChunyangYe/PP",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "3edce1290117b77bbff67b322488ea5724e3d470",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:3edce1290117b77bbff67b322488ea5724e3d470;origin=https://github.com/ChunyangYe/PP/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "OpenMesh / Eigen",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 3,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 7,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "I did not used MinGW as recommended since Visual Studio was working well with the provided CMake, modulo minor edits in the project file (_USE_MATH_DEFINES and the .dll and .a were linked instead of the .lib files).",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Neural best-buddies: sparse cross-domain correspondence",
      "DOI": "10.1145/3197517.3201332",
      "Year": 2018,
      "ACM Keywords": [
        "Interest point and salient region detections",
        "Matching",
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://arxiv.org/pdf/1805.04140.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1805.04140",
      "Project URL": "https://kfiraberman.github.io/neural_best_buddies/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/kfiraberman/neural_best_buddies",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "8121bb9b084026fc8dd097899f66e632c0f2fde3",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:86bd6f8f1079ad60499600dccdea9e0099e5db2b;origin=https://github.com/kfiraberman/neural_best_buddies/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "CUDA / CuDNN / sklearn / numpy / torchvision / matplotlib",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "sklearn dependency was not explicitly mentioned in the README. To make the code working on recent pytorch, I needed to update in line of code :\n\n\n@@ -92,7 +92,7 @@ class vgg19(nn.Module):\n             deconvolved_feature_forward = self.forward(level=src_level, start_level=dst_level, set_as_var = False)\n             loss_perceptual = criterionPerceptual(deconvolved_feature_forward, src_layer)\n             loss_perceptual.backward()\n-            error = loss_perceptual.data[0]\n+            error = loss_perceptual.item()\n             self.update_last_losses(error)\n             if (i % 3 == 0) and (print_errors == True):\n                 print(\"error: \", error)",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "End-to-end Optimization of Optics and Image Processing for Achromatic Extended Depth of Field and Super-resolution Imaging",
      "DOI": "10.1145/3197517.3201333",
      "Year": 2018,
      "ACM Keywords": [
        "Computational photography",
        "Reconstruction"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://drive.google.com/file/d/1Xums2qyqSGP_z_24HnYpM9gbRm1_uAzY/view",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://vsitzmann.github.io/deepoptics/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/vsitzmann/deepoptics",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "21c244dbadc9fb686d5f51a81c5b08a298b36c98",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:d88bbd1829a757ab83fff94f5b0f8935ffddb1f8;origin=https://github.com/vsitzmann/deepoptics/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "tensorflow-gpu / protobuf / poppy",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data",
      "License of the data": "Data is provided \"as is\" and without any express or implied warranties, including, without limitation, the implied warranties of merchantability and fitness for a particular purpose. External provider: Inria.",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 5,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "I had to patch the environment.yml file to use up-to-date pip packages.\nI could train the network and see image results using tensorboard, however  it is not clear how this images should be compared with the results shown in the paper.",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Fluid directed rigid body control using deep reinforcement learning",
      "DOI": "10.1145/3197517.3201334",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://gamma.cs.unc.edu/DRL_FluidRigid/CoupleSolidFluidController.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://gamma.cs.unc.edu/DRL_FluidRigid/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 3,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "In the blink of an eye: leveraging blink-induced suppression for imperceptible position and orientation redirection in virtual reality",
      "DOI": "10.1145/3197517.3201335",
      "Year": 2018,
      "ACM Keywords": [
        "Virtual reality",
        "Perception"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://basilic.informatik.uni-hamburg.de/Publications/2018/LSLWB18/eye_blinks.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://basilic.informatik.uni-hamburg.de/Publications/2018/LSLWB18/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "macOS",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": false,
      "Is variant deprecated (boolean)": false,
      "Title": "Water surface wavelets",
      "DOI": "10.1145/3197517.3201336",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://pub.ist.ac.at/group_wojtan/projects/2018_Jeschke_WaterSurfaceWavelets/WaterSurfaceWavelets.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://visualcomputing.ist.ac.at/publications/2018/WSW/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/lecopivo/WaterSurfaceWavelets",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "69c88a77b1832b17f2e60e762128df465f7076ab",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT License",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "cmake,vcpkg",
      "Dependencies": "magnum (installed using VCPKG)",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "macOS catalina",
      "Build instructions/comments": "The build instructions are pretty simple. I just need to update a bit the vcpkg command to install magnum:\n ./vcpkg install \"magnum-integration[imgui]\"\n instead of\n./vcpkg install magnum-integration[imgui].\n\n The project cmake worked fine but I had a first issue with Eigen (installed using brew on mac). Adding a \n\n #include_directories(\"/usr/local/include\")\n\n in the CmakeLists.txt sovled the problem.\n A second issue was for a missing KHR/hhrplatform.h file. Downloading the file as mentionned here (https://stackoverflow.com/questions/50656174/error-when-building-with-mingw-on-ubtunu) solved the problem. Finally, the build succeeded but the runtime failed:\n\nPlatform::Sdl2Application: warning: the executable is not a HiDPI-enabled app bundle\nRenderer: AMD Radeon HD - FirePro D500 OpenGL Engine by ATI Technologies Inc.\nOpenGL version: 4.1 ATI-3.8.24\nUsing optional features:\n    GL_ARB_ES2_compatibility\n    GL_ARB_separate_shader_objects\n    GL_ARB_texture_filter_anisotropic\n    GL_ARB_texture_storage\n    GL_ARB_vertex_array_object\n    GL_EXT_debug_label\n    GL_EXT_debug_marker\nUsing driver workarounds:\n    no-layout-qualifiers-on-old-glsl\nShader::compile(): compilation of vertex shader 1 failed with the following message:\nERROR: 3:18: '' : syntax error: incorrect preprocessor directive\nERROR: 3:18: '' : syntax error: unexpected tokens following #if preprocessor directive - expected a newline\nShader::compile(): compilation of fragment shader 2 failed with the following message:\nERROR: 3:8: '' : syntax error: incorrect preprocessor directive\nERROR: 3:8: '' : syntax error: unexpected tokens following #if preprocessor directive - expected a newline\nAssertion GL::Shader::compile({vert, frag}) failed in /tmp/WaterSurfaceWavelets/src/visualization/waterSurface/WaterSurfaceShader.cpp on line 29",
      "Misc. comments": "The project page also contains a windows executable if was not able to run on mac",
      "Software language": "C++"
    },
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Water surface wavelets",
      "DOI": "10.1145/3197517.3201336",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://pub.ist.ac.at/group_wojtan/projects/2018_Jeschke_WaterSurfaceWavelets/WaterSurfaceWavelets.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://visualcomputing.ist.ac.at/publications/2018/WSW/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/lecopivo/WaterSurfaceWavelets",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "69c88a77b1832b17f2e60e762128df465f7076ab",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT License",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "cmake,vcpkg",
      "Dependencies": "magnum (installed using VCPKG)",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 2,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Ubuntu 18.04",
      "Build instructions/comments": "The compilation worked out-of-the-box following the readme instructions. However the Demo did not produce the expected result. The water and land appear but the waves seem to appear at a different rendering depth, and be decorrelated with the water/land distribution. Hence I was not able to reproduce the results (Ubuntu 18.04 - GeForce GTX 1050)",
      "Misc. comments": "",
      "Software language": "C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Fast winding numbers for soups and clouds",
      "DOI": "10.1145/3197517.3201337",
      "Year": 2018,
      "ACM Keywords": [
        "Mesh models",
        "Point-based models",
        "Volumetric models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.dgp.toronto.edu/projects/fast-winding-numbers/fast-winding-numbers-for-soups-and-clouds-siggraph-2018-barill-et-al.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.dgp.toronto.edu/projects/fast-winding-numbers/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/GavinBarill/fast-winding-number-soups",
      "Code URL2": "https://github.com/libigl/libigl",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "a2713f8513787a79bfb95c9f8a89c19345be858e",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:b392278ed54a694a329076de25bed97a891751b7;origin=https://github.com/GavinBarill/fast-winding-number-soups/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Mozilla Public License",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "libigl",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Mac OS",
      "Build instructions/comments": "The program outputs  a \".dmat\" (libigl dense matrix format) and there is no explanation. The 717 tutorial in libigl (dev branch)  provides an example of the fast triangule soup approach.\n\n\n-- Additionnal test on windows --\nTested on Windows, for both clouds and soups: CMakeFile not useful (insists on building dependencies for which I already downloaded precompiled binaries - for soups). Relatively easy to make a new Visual Studio solution (minor things to take care: _CRT_SECURE_NO_WARNINGS and _USE_MATH_DEFINES), and install several dependencies (glad, glfw, ...). Data from the paper not provided, but some examples are given. For the libIGL tutorial, it was easy to build but it was not documented that the fast winding number code was in the dev branch (not the master) and that the corresponding tutorial is tutorial 717 and not 702 (which also provides supports for winding numbers).",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "DSCarver: decompose-and-spiral-carve for subtractive manufacturing",
      "DOI": "10.1145/3197517.3201338",
      "Year": 2018,
      "ACM Keywords": [
        "Shape analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://homes.cs.washington.edu/~haisen/DSCarver/files/DSCarver.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://homes.cs.washington.edu/~haisen/DSCarver/index.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Parametric directional coding for precomputed sound propagation",
      "DOI": "10.1145/3197517.3201339",
      "Year": 2018,
      "ACM Keywords": [
        "Virtual reality",
        "Sound and music computing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.microsoft.com/en-us/research/uploads/prod/2018/10/paramd.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Bayesian online regression for adaptive direct illumination sampling",
      "DOI": "10.1145/3197517.3201340",
      "Year": 2018,
      "ACM Keywords": [
        "Machine learning",
        "Visibility"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://cgg.mff.cuni.cz/~jaroslav/papers/2018-bayesianlighting/2018-vevoda-bayesianlighting-paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://cgg.mff.cuni.cz/~jaroslav/papers/2018-bayesianlighting/index.htm",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://corona-renderer.com/",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Code License (if any)": "Cannot answer",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "part of a commercial software",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Commercial renderer, not tested.",
      "Misc. comments": "",
      "Software language": "Cannot answer"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "CoreCavity: interactive shell decomposition for fabrication with two-piece rigid molds",
      "DOI": "10.1145/3197517.3201341",
      "Year": 2018,
      "ACM Keywords": [
        "Mesh generation",
        "Graphical user interfaces",
        "Shape analysis",
        "Computer-aided manufacturing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://research-explorer.app.ist.ac.at/download/12/5360/IST-2018-1037-v1%2B1_CoreCavity-AuthorVersion.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://visualcomputing.ist.ac.at/publications/2018/CoreCavity/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Support-free volume printing by multi-axis motion",
      "DOI": "10.1145/3197517.3201342",
      "Year": 2018,
      "ACM Keywords": [
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.mae.cuhk.edu.hk/~cwang/pubs/SIG18RobotVolPrint.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.inria.fr/hal-01887571",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/daichengkai/VoxelMultiAxisAM",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "3e68c94d41cd63fd45e6b6d89a635f11310158a3",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:5ba9e155ec0a9c0bc68a3b41f75ea4d0d3496c58;origin=https://github.com/daichengkai/VoxelMultiAxisAM/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "LGPL",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "libigl / qhull",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 3,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The code needs to be updated due to an API change in the libigl viewer: main.cpp lines 50 and 349. Just commenting these two lines allows you to build the code and run simple examples (the camera is a bit odd but it's fine).",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Polyhedral Voronoi diagrams for additive manufacturing",
      "DOI": "10.1145/3197517.3201343",
      "Year": 2018,
      "ACM Keywords": [
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://hal.inria.fr/hal-01697103/file/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.inria.fr/hal-01697103",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "macOS",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Singularity-constrained octahedral fields for hexahedral meshing",
      "DOI": "10.1145/3197517.3201344",
      "Year": 2018,
      "ACM Keywords": [
        "Mesh models",
        "Mesh geometry models",
        "Volumetric models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://cgg.unibe.ch/media/papers/SCOF_SG2018.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://cgg.unibe.ch/publication/017/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Code URL": "https://graphics.rwth-aachen.de:9000/SCOF/SingularityConstrainedOctahedralFields",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "925bb7ed990ec3932f4b30d31740dd3c15a1127d",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "GPLv3",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "cmake",
      "Dependencies": "OpenVolumeMesh, GMM, Eigen (included during cmake)",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 2,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "macOS catalina",
      "Build instructions/comments": "Easy build from the building instructions. The example works perfectly from the provdied input file (the project page also contains additional input data). The software outputs an openvolumemesh file (.ovmn ascii file) which can be seen using OpenFlipper https://www.graphics.rwth-aachen.de/software/openflipper/. Using this tool, I was able to visualize a tetrahedrization of the input geometry but not the hexahedral one.\n\nComment from the Disqus: I think the code output the frames as rotation matrices. Getting the hexahedral mesh is not part of the project.",
      "Misc. comments": "",
      "Software language": "c++"
    },
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": false,
      "Is variant deprecated (boolean)": true,
      "Title": "Singularity-constrained octahedral fields for hexahedral meshing",
      "DOI": "10.1145/3197517.3201344",
      "Year": 2018,
      "ACM Keywords": [
        "Mesh models",
        "Mesh geometry models",
        "Volumetric models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://people.csail.mit.edu/jsolomon/assets/singularity_constrained_octahedral.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 2,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "An extended partitioned method for conservative solid-fluid coupling",
      "DOI": "10.1145/3197517.3201345",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://people.cs.clemson.edu/~vbz/papers/akbay_2018_XPM.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "A Material Point Method for Thin Shells with Frictional Contact",
      "DOI": "10.1145/3197517.3201346",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.math.ucla.edu/~jteran/papers/GHFGTT18.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Shape Representation by Zippables",
      "DOI": "10.1145/3197517.3201347",
      "Year": 2018,
      "ACM Keywords": [
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://igl.ethz.ch/projects/zippables/zippables-2018.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1711.02450",
      "Project URL": "https://igl.ethz.ch/projects/zippables/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Robust optimization for topological surface reconstruction",
      "DOI": "10.1145/3197517.3201348",
      "Year": 2018,
      "ACM Keywords": [
        "Mesh models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.wisdom.weizmann.ac.il/~ylipman/2018_topo.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/roeelazar/cross_section_topology_3D_reconstruction",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "e29ff72e8bf8c713d60479b555b2d2b4fb589eb0",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:e29ff72e8bf8c713d60479b555b2d2b4fb589eb0;origin=https://github.com/roeelazar/cross_section_topology_3D_reconstruction/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "matlab / mosek / yalmip",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 2,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Need MatlabR2018 to check the code. Has dependencies with YALMIP (~OSS) and uses MOSEK for fast LP solvers which can be obtained free of charge for academic purpose (make sure to request the free licence).\nThe code runs very easily but does not produce a usable mesh (it outputs the chosen patches). It would be difficult to use in practice : the paper builds patches using \"level sets of a scalar function at a set of scalar levels chosen to yield different surface topologies\", but the corresponding code is not provided, so it would be hard to reproduce any result from the paper.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "3D printing spatially varying color and translucency",
      "DOI": "10.1145/3197517.3201349",
      "Year": 2018,
      "ACM Keywords": [
        "Perception",
        "Graphics file formats"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://ntnuopen.ntnu.no/ntnu-xmlui/bitstream/handle/11250/2592720/AAM_Version_colorAndTranslucency.pdf?sequence=3&isAllowed=y",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://ntnuopen.ntnu.no/ntnu-xmlui/handle/11250/2592720",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "HeadOn: Real-time Reenactment of Human Portrait Videos",
      "DOI": "10.1145/3197517.3201350",
      "Year": 2018,
      "ACM Keywords": [
        "Computer vision",
        "Computer graphics"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://zollhoefer.com/papers/SG2018_HeadOn/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1805.11729",
      "Project URL": "http://zollhoefer.com/papers/SG2018_HeadOn/page.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Rendering specular microgeometry with wave optics",
      "DOI": "10.1145/3197517.3201351",
      "Year": 2018,
      "ACM Keywords": [
        "Rendering"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://cseweb.ucsd.edu/~ravir/waveoptics.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/lingqi/WaveOpticsBrdf",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "2722f0fd4c1cf1cff0435b08dcb2d7e160c6f54b",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:551d2be1152f8f6f0b24d38f90792b703adbaf74;origin=https://github.com/lingqi/WaveOpticsBrdf/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "GPL",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Makefile",
      "Dependencies": "openexr / eigen",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Pre-trained models / Hardcoded data / lookup tables /...",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Mac OS",
      "Build instructions/comments": "Missing Eigen dependency.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Scalable laplacian eigenfluids",
      "DOI": "10.1145/3197517.3201352",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.tkim.graphics/EIGENFLUID/ScalableEigenFluid.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.tkim.graphics/EIGENFLUID/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://www.tkim.graphics/EIGENFLUID/eigenfluid_src.zip",
      "Code URL2": "https://bitbucket.org/cqd123123/eigenfluidrelease/src/release/",
      "MD5 sum (for archives)": "c0fe9c28d26696749852d180d35fcc84",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "GPL",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "FFTW / glut /  opengl /  OpenMP / X11 / libjpeg",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Easy to setup and install.",
      "Misc. comments": "",
      "Software language": "C/C++, Other"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Tetrahedral meshing in the wild",
      "DOI": "10.1145/3197517.3201353",
      "Year": 2018,
      "ACM Keywords": [
        "Mesh generation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.toronto.edu/~jacobson/images/tetrahedral-meshing-in-the-wild-siggraph-2018-hu-et-al.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/Yixin-Hu/TetWild",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "55d770a97df1364921e70cc3a65f6079e8c13732",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:f220cdbdb7f4456991c1f39152fb72400d3bfb3a;origin=https://github.com/Yixin-Hu/TetWild/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Mozilla Public License",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "cgal/ gmp/mpfr / geogram",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Mac OS",
      "Build instructions/comments": "The authors provide all scripts to generate the paper figures. Note that even if the main code is under the MPL2 license, the code includes CGAL with a \"contaminating\" GNU GPL license.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Quadrangulation through morse-parameterization hybridization",
      "DOI": "10.1145/3197517.3201354",
      "Year": 2018,
      "ACM Keywords": [
        "Mesh generation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.geometry.caltech.edu/pubs/FBTDH18.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://www.cad.zju.edu.cn/home/hj/18/hybrid_quad_binary_Mint19_V20180731.7z",
      "Code URL2": "",
      "MD5 sum (for archives)": "ac0b70c8fed51de247594a4851f7bb55",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Few missing guidelines in the readme (path where to execute the script) but this is minor. Just a single example is given (one mesh+field+features set) but the binary works fine. The part of the paper that computes the framefield and the feature lines is not given so it is difficult to reproduce all paper results.",
      "Misc. comments": "",
      "Software language": "Cannot answer"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "What characterizes personalities of graphic designs?",
      "DOI": "10.1145/3197517.3201355",
      "Year": 2018,
      "ACM Keywords": [
        "Perception",
        "Neural networks"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://nxzhao.com/projects/design_personality/Graphic_Design_Personality_SIG18_zhao.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://nxzhao.com/projects/design_personality/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://nxzhao.com/projects/design_personality/personality_scoring_network_SIG18.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "5b0a261301f64d12ef9bb70a11ccd721",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "This code is copyrighted by the authors and is for non-commercial research purposes only. Please contact nanxuanzhao@gmail.com if you are interested in licensing for commercial purposes",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "keras/theano/h5py/tensorflow",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data, Pre-trained models / Hardcoded data / lookup tables /...",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The authors provide both the training data and the pretrained models. However, I obtained tensorflow errors when trying to test the model:\n\nValueError: Negative dimension size caused by subtracting 4 from 3 for 'MaxPool' (op: 'MaxPool') with input shapes: [?,3,300,64].",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Variational surface cutting",
      "DOI": "10.1145/3197517.3201356",
      "Year": 2018,
      "ACM Keywords": [
        "Continuous optimization",
        "Mesh geometry models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.cmu.edu/~kmcrane/Projects/VariationalCuts/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.cs.cmu.edu/~kmcrane/Projects/VariationalCuts/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/nmwsharp/variational-surface-cutting",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "4310b25a7785637f90f942548776148d1ac1d457",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:1e1215e3721d8b48f41dc02774ee4bb3cc625eaf;origin=https://github.com/nmwsharp/variational-surface-cutting/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "GPL",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "glm/ nanogui / eigen / nanovg / pybind / suitesparse",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Mac OS",
      "Build instructions/comments": "I had to comment the \"-Werror\" in the CMakeLists.txt because of numerous errors in Clang. Otherwise, no specific issues.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Looking to listen at the cocktail party: a speaker-independent audio-visual model for speech separation",
      "DOI": "10.1145/3197517.3201357",
      "Year": 2018,
      "ACM Keywords": [
        ""
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://arxiv.org/pdf/1804.03619.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1804.03619",
      "Project URL": "https://looking-to-listen.github.io",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Curved optimal delaunay triangulation",
      "DOI": "10.1145/3197517.3201358",
      "Year": 2018,
      "ACM Keywords": [
        "Mesh generation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.geometry.caltech.edu/pubs/FABDD18.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.inria.fr/hal-01826055",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Blended cured quasi-newton for distortion optimization",
      "DOI": "10.1145/3197517.3201359",
      "Year": 2018,
      "ACM Keywords": [
        "Continuous optimization",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://dannykaufman.io/projects/BCQN/BCQN_files/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.columbia.edu/~kaufman/BCQN/BCQN.html",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/mike323zyf/BCQN",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "40f301e963d8b1f7f81466190578d56ec5db88cd",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:40f301e963d8b1f7f81466190578d56ec5db88cd;origin=https://github.com/mike323zyf/BCQN",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Other script, Not applicable (python, Matlab..)",
      "Dependencies": "Matlab / libIGL",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "LibIGL has changed in the meantime (last commit at the time of the test: c645aac0c5852fad6fabe8c192fdc8675e607263). To compile, one has to edit some #include (removing #include igl/components.h in tutte_embedding_mex.cpp and adding #include igl/unique_rows.h in FastLsBuildUtils.cpp). To make it work on Windows with Visual Studio (2017), one has to edit the compileAllMex.m to add '-DWIN32' and '-D_USE_MATH_DEFINES' to the mex options.",
      "Misc. comments": "",
      "Software language": "C/C++, Matlab / Mathematica / .."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Stitch Meshing",
      "DOI": "10.1145/3197517.3201360",
      "Year": 2018,
      "ACM Keywords": [
        "Mesh geometry models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.utah.edu/~kwu/stitchmeshing/stitch_meshing_final.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.utah.edu/~kwu/stitchmodeling#stitchmeshing",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/kuiwuchn/stitchMeshing",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:ec792353eaa45f15ec9453aad62576cca5f7b3ec;origin=https://github.com/kuiwuchn/stitchMeshing/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "LGPL",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "Gurobi / nanogui / tbb / glfw / pcg32 / RPly",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Very easy to build on Windows with VS2017, as most dependencies are shipped (except Gurobi, free for research purpose) and the CMakeList is well done. Trivial fix to the CMakeList : change gurobi75.lib to the latest version available (gurobi90.lib currently).\nThe software is also very nice and easy to play with. However, it only implements part (but most) of the paper (up to section 7 included ; no yarn generation).",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Multi-Scale Simulation of Nonlinear Thin-Shell Sound with Wave Turbulence",
      "DOI": "10.1145/3197517.3201361",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation",
        "Sound and music computing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www-sop.inria.fr/reves/Basilic/2018/CQDGZ18/ThinShellSounds.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www-sop.inria.fr/reves/Basilic/2018/CQDGZ18/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Deep convolutional priors for indoor scene synthesis",
      "DOI": "10.1145/3197517.3201362",
      "Year": 2018,
      "ACM Keywords": [
        "Probabilistic reasoning",
        "Neural networks",
        "Computer graphics"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://dritchie.github.io/pdf/deepsynth.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/brownvc/deep-synth",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "b800e11290b763b58e7d3b30329769a7b77cd12a",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:291f7df8d834452214487240dea8f1a45c6e1d52;origin=https://github.com/brownvc/deep-synth/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "free for non commercial use",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "numpy/matplotlib/pytorch/CUDA/pybullet/numba/pyquaternion/scikit-learn/scipy",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Training data",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Could not run due to missing data: the SUNCG database is no longer available, and no pretrained model is given",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Gradient-domain Volumetric Photon Density Estimation",
      "DOI": "10.1145/3197517.3201363",
      "Year": 2018,
      "ACM Keywords": [
        "Ray tracing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cim.mcgill.ca/~derek/files/gdvpm_author.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://beltegeuse.github.io/research/publication/2018_gradientvolumetricpm/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/gradientpm/gvpm",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "5c9b5b8c49f415217f929e8b7c51c833a25c14f3",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:185c459fb313b95970b80e3d5d2266ab60c6e379;origin=https://github.com/gradientpm/gvpm/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "GPL",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Makefile, CMakeLists",
      "Dependencies": "mitsuba/boost/xerces/collada/eigen/fftw3/glew/IlmBase/OpenEXR",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 3,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 5,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Compiled and worked out of the box. Download a scene on the project website and run mitsuba name_of_your_scene.xml (mitsuba found in the \"binaries\" folder of the project).\nEasy to find/install dependencies: 2 because installing mitsuba on linux requires several changes on ubuntu 19.10.\n** In config.py I changed -std=c++11 into -std=gnu++11 ;\n** In mitsuba/build/release/mtsgui I changed QtCore, QtOpenGL (and so on) into Qt5Core, Qt5OpenGL (and so on)\n** in data/scons/qt5.py,line 392 changed QtCore into Qt5Core.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "High-fidelity facial reflectance and geometry inference from an unconstrained image",
      "DOI": "10.1145/3197517.3201364",
      "Year": 2018,
      "ACM Keywords": [
        "Mesh geometry models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://vgl.ict.usc.edu/Research/HFFRGI/siggraph2018HFFRGIFUI.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://vgl.ict.usc.edu/Research/HFFRGI/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Deep exemplar-based colorization",
      "DOI": "10.1145/3197517.3201365",
      "Year": 2018,
      "ACM Keywords": [
        "Computational photography",
        "Neural networks",
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.dongdongchen.bid/pubs/colorization_sig18.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1807.06587",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/msracver/Deep-Exemplar-based-Colorization",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "4aacbcc045e6435540c79d0e40fd8bccef20846d",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:65e11ced75cba1fa4e3345b31cc159d631256bcf;origin=https://github.com/msracver/Deep-Exemplar-based-Colorization.git/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "IDE Project (VS,..)",
      "Dependencies": "zlib / Caffe / protobuf / protoc / boost / Glog / HDF5 / LMDB / Gflags / levelDB / Snappy / Cuda / CudNN / OpenCV / ATLAS / PyTorch / cuda",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Pre-trained models / Hardcoded data / lookup tables /...",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "As reviewer 1, I could not build the provided Visual Studio solution (see details of my attemp below).\nHowever, it appears that the code is shipped with precompiled demos I didn't find at the first look.\nBefore running the demo, I had to install the following dependencies (tested with Python 3.6):\n>pip install image opencv-python scikit-image\nThen, to install pytorch, I followed the instructions given at https://pytorch.org/get-started/locally/, for me it was\n>pip install torch===1.4.0 torchvision===0.5.0 -f https://download.pytorch.org/whl/torch_stable.html\n\nThen you need to download and put the data as described here: https://github.com/msracver/Deep-Exemplar-based-Colorization#download-models\n\nAnd then simply run the script demo\\run.bat. It should output two colored images in demo\\examples\\res\\.\n\nCompilation attempt:\n=================\nI could however compile caffe and other dependencies using CK (https://codereef.ai/portal/c/032630d041b4fd8a:7d5e081bda47dcbc/), namely opencv, boost, gflags, glogs, hd5f, lmbd and protobuf. I had to install precompiled version of \n\n\n---- Review 2 -----\nCould not test on Windows because Caffe is unavailable for VS2017. I spent multiple hours trying to compile Caffe with VS2017, but stopped after compiling the 13th dependency, ATLAS, that compiles unix-style with cygwin. Pre-built binaries *may* be found for VS2015. Caffe is not maintained as of 2019.",
      "Misc. comments": "",
      "Software language": "C/C++, Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Mode-adaptive neural networks for quadruped motion control",
      "DOI": "10.1145/3197517.3201366",
      "Year": 2018,
      "ACM Keywords": [
        "Neural networks",
        "Motion capture"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://homepages.inf.ed.ac.uk/tkomura/dog.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/ShikamaruZhang/MANN",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "914f5ddb06a3853f2f60a09d156702154b084cb3",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:a6e8e30292b31e92ecf2a6e99a6a105d97f0bbb5;origin=https://github.com/ShikamaruZhang/MANN/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "This code implementation is only for research or education purposes, and (especially the learned data) not freely available for commercial use or redistribution. The intellectual property and code implementation belongs to the University of Edinburgh.",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "tensorflow",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Was able to launch the training, which ran smoothly, but I was unable to visualize the result. No readme was provided.",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Optimal cone singularities for conformal flattening",
      "DOI": "10.1145/3197517.3201367",
      "Year": 2018,
      "ACM Keywords": [
        "Continuous optimization",
        "Mesh geometry models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.cmu.edu/~kmcrane/Projects/OptimalCones/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.cs.cmu.edu/~kmcrane/Projects/OptimalCones/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 3,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Skaterbots: Optimization-based Design and Motion Synthesis for Robotic Creatures with Legs and Wheels",
      "DOI": "10.1145/3197517.3201368",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://crl.ethz.ch/papers/Skaterbots.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.ri.cmu.edu/publications/skaterbots-optimization-based-design-and-motion-synthesis-for-robotic-creatures-with-legs-and-wheels/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Computing a high-dimensional euclidean embedding from an arbitrary smooth riemannian metric",
      "DOI": "10.1145/3197517.3201369",
      "Year": 2018,
      "ACM Keywords": [
        "Parametric curve and surface models",
        "Volumetric models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://personal.utdallas.edu/~xxg061000/HDE.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 3,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Real-time data-driven interactive rough sketch inking",
      "DOI": "10.1145/3197517.3201370",
      "Year": 2018,
      "ACM Keywords": [
        "Gestural input",
        "Image manipulation",
        "Fine arts"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://esslab.jp/publications/SimoSerraSIGGRAPH2018.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://esslab.jp/~ess/en/research/inking/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/bobbens/line_thinning",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "6e03fe84088562e85863dd151152d655605a7e3f",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:ad3b18bbc66e246868af6c48f65f3e2dd4e20410;origin=https://github.com/bobbens/line_thinning/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "pillow/pytorch",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "Pre-trained models / Hardcoded data / lookup tables /...",
      "License of the data": "Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Code provided can reproduce paper-like examples of line thinning, but not the user-edit tool. Only the pre-trained model is available not the training algorithm.",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Visual Rhythm and Beat",
      "DOI": "10.1145/3197517.3201371",
      "Year": 2018,
      "ACM Keywords": [
        "Graphics input devices",
        "Sound-based input / output",
        "Computational photography",
        "Image processing",
        "Image-based rendering"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.abedavis.com/files/papers/VisualRhythm_Davis18.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://abedavis.com/visualbeat/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/abedavis/visbeat/",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "e6b7c5da1d2007b98fd53ba4b5ca6d58c75f17c0",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:2d2e048b547c32d61ff64422e06cd5a9a64f554b;origin=https://github.com/abedavis/visbeat/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Stanford",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "numpy/scipy/moviepy/librosa/bs4/librosa/imageio/requests/moviepy/termcolor/youtube-dl/matplotlib",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Mac OS",
      "Build instructions/comments": "Very easy to setup and play with on MacOS thanks to the \"pip install visbeat\" and the examples.\n\n\n-- Aternative build on windows --\n\nWhile the paper is accompanied by a very nice website to explore all results, and effort has been made to make code execution easy, I still did not manage to run the code. The docker file was not working. This is due to matplotlib and imageio-ffmpeg not supporting anymore Python 2.7 (Python 2.7 is being discontinued as of January 2020 anyway) and I am not familiar with docker to fix it. Going back to manual installation of the libraries, it turns out that only imageio version 2.4.1 is able to execute the required  imageio.ffmpeg.download() command (and pip install imageio-ffmpeg does not work on Python 2.7). It also turns out that installing matplotlib for Python 2.7 is also difficult (ended up upgrading my pip and setuptools \"python -m pip install -U pip setuptools\" before the pip install matplotlib, despite Python 2.7 being a fresh install -- I otherwise had \"Command python setup.py egg_info failed with error code 1\"). I also had to add \"sys.path.insert(0, \"../visbeat/\")\" in the dancefer.py example file for python to search in the correct folder. Ultimately, running the TLDR example results in the error \"AssertionError: Wrong number of files for ./VisBeatAssets/VideoSources\\fDWFVI8PQOI\\Versions\\\\Original\\maxheight_240\\\\Snap! - Rhythm is a Dancer-fDWFVI8PQOI.mp4 Found: []\". Thinking this could be due to mixes of slashes and backslashes I fixed that in the code to no avail. I realized this file actually did not exist : instead, there was a file called \"Snap! - Rhythm is a Dancer-fDWFVI8PQOI.f133.mp4\" which did not have audio, and a \"Snap! - Rhythm is a Dancer-fDWFVI8PQOI.f140.m4a\" which was the audio file. I merged both in Premiere to create the desired \"Snap! - Rhythm is a Dancer-fDWFVI8PQOI.f133.mp4\" file, ran the code again. This time, this resulted in \"Issue loading audio for ./VisBeatAssets/VideoSources/fDWFVI8PQOI/Versions/Original/maxheight_240/Snap! - Rhythm is a Dancer-fDWFVI8PQOI.mp4\". I tried again with MPEG audio instead of AAC. This didn't work either. I gave up after a day.",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Scale-aware black-and-white abstraction of 3D shapes",
      "DOI": "10.1145/3197517.3201372",
      "Year": 2018,
      "ACM Keywords": [
        "Computer graphics"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://cgv.cs.nthu.edu.tw/download/file?guid=dec5cad6-8f0c-11e8-a908-0011328fa92e",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://cgv.cs.nthu.edu.tw/projects/Shape_Analysis/BW_Abstraction",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/unlin/libbwabstraction",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "2b5968f8c7e02ec9e04bd9ed159d6677f40b44f7",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:aad9c77e9e4715f68702a308107ee8bd3752c0dc;origin=https://github.com/unlin/libbwabstraction/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMakeLists, IDE Project (VS,..)",
      "Dependencies": "Boost/ CGAL / Eigen/GLEW/GLFW/glm/OpenCV/opengm/OpenMesh/libgmp/libmpfr/cxxopts",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Mac OS",
      "Build instructions/comments": "All decencies were available on brew except opengm (installed from the github master, I needed to disable the test examples because of boost issues, fine for the library). I cannot run the CLI because no camera/obj examples were provided but the Qt GUI works fine (minor edit of the qtgui.pro to detect the libbwabstraction).",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Rapid deployment of curved surfaces via programmable auxetics",
      "DOI": "10.1145/3197517.3201373",
      "Year": 2018,
      "ACM Keywords": [
        "Mesh geometry models",
        "Computer-aided design",
        "Computer-aided manufacturing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://lgg.epfl.ch/publications/2018/ProgrammableAuxetics/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://lgg.epfl.ch/publications/2018/ProgrammableAuxetics/index.php",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "A high-performance software graphics pipeline architecture for the GPU",
      "DOI": "10.1145/3197517.3201374",
      "Year": 2018,
      "ACM Keywords": [
        "Massively parallel algorithms",
        "Rasterization",
        "Graphics processors"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.markussteinberger.net/papers/cuRE.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/GPUPeople/cuRE",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "ccba6a29bba4445300cbb630befe57e31f0d80cb",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:ccba6a29bba4445300cbb630befe57e31f0d80cb/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "IDE Project (VS,..), Not applicable (python, Matlab..)",
      "Dependencies": "CUDA",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 3,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 3,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "To compile the software, a number of steps need to be performed:\n\n- In dependencies/image_tools/source/dds.cpp (line 11) and pfm.cpp (line 10) change \n#include <core/utils/io> to #include \"io.h\"\n\n- In pfm.cpp, line 32: change read(data(img) + w * (h - 1 - j), file, w); to read(file, data(img) + w * (h - 1 - j), w);\n- In dds.cpp, line 77: change return read(buffer, file, width * pixel_size); to return read(file, buffer, width * pixel_size);\n- In dds.cpp, line 83: change read(buffer + y * width * pixel_size, file, width * pixel_size); to read(file, buffer + y * width * pixel_size, width * pixel_size);\n- In dds.cpp, line 97: change read<char, 4>(magic_num, file); to  read<char, 4>(file, magic_num);\n\n- In dependencies/config_tools/include/configfile/Stream.h (line 15), Database.h (line 11), log.h (line 12), change\n#include <core/interface> to #include \"../../../core_tools/include/core/interface.h\"\n- in configfile.cpp, line 11: \nchange #include <core/utils/memory> to #include \"../../../core_tools/include/core/utils/memory.h\"\n- In source/cure/materials/OceanMaterial.cpp and source/cure/Geometry.cpp\nchange #include <core/utils/memory> to #include \"../build/dependencies/core_tools/include/core/utils/memory.h\"\n\n- In the library paths of cuREREnderer, add the path to CUPTI, which was for me:\nC:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.2\\extras\\CUPTI\\lib64\n\n- In cure.vcxproj, cudaraster.vcxproj and freepipe.vcxproj, edit \n<Import Project=\"$(VCTargetsPath)\\BuildCustomizations\\CUDA 10.0.props\" />\nto your actual CUDA props path ; mine is:\n<Import Project=\"C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.2\\extras\\visual_studio_integration\\MSBuildExtensions\\CUDA 10.2.props\" />\nand same thing for the corresponding .targets.\n\nAfter that, the software compiles fine with Visual Studio and runs fine with my NVIDIA GeForce RTX 2080.\n\nHowever it has been tested with a Quadro M1000M (under Linux) and only the OpenGL renderer worked (probably the graphics card is not supported). There were no error message indicating why the different plugins could be loaded.",
      "Misc. comments": "",
      "Software language": "C/C++, Shader language"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Integer-only cross field computation",
      "DOI": "10.1145/3197517.3201375",
      "Year": 2018,
      "ACM Keywords": [
        "Mesh models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.technion.ac.il/~mirela/publications/ioq.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "http://www.cs.technion.ac.il/~mirela/code/ioq.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "61FEC827546EC73CB208F078BC13564A",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Other script, Not applicable (python, Matlab..)",
      "Dependencies": "matlab / libigl",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Minor fixes to the code: when running the examples from the examples directory, you need to replace './data/bunny.off' by '../data/bunny.off' in the demo files, and similarly change the '.' to '..' in the vis_vector_field.m file in addOptional(p, 'BinaryPath', fullfile('..', 'bin', 'vis_vector_field', 'vis_vector_field_bin.exe')); \nI also had to add my visual studio bin directory to my PATH.\nAlso, the readme mentions a code snippet to compute cross fields. There is an error in the routine to display the result : it is not m.draw(CF, alpha) but m.plot(CF, alpha) (the method draw is not a method of the class Mesh, and 'draw_face_field' is not correct either).\nA single example (bunny) is provided, though I believe it should work similarly well on other examples.\nIt took me significant time making this code run only because I had to perform a fresh cuda install -- it otherwise trivially installs.",
      "Misc. comments": "",
      "Software language": "Matlab / Mathematica / .., Shader language"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Computational design of nanostructural color for additive manufacturing",
      "DOI": "10.1145/3197517.3201376",
      "Year": 2018,
      "ACM Keywords": [
        "Computer-aided manufacturing",
        "Emerging optical and photonic technologies"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://vccimaging.org/Publications/Auzinger2018NanoStructuralColor/Auzinger2018NanoStructuralColor.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://visualcomputing.ist.ac.at/publications/2018/StructCol/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Deep context-aware descreening and rescreening of halftone images",
      "DOI": "10.1145/3197517.3201377",
      "Year": 2018,
      "ACM Keywords": [
        "Computational photography"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://github.com/thnkim/thnkim.github.com/raw/master/DeepHalftoneDescreening.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://github.com/thnkim/thnkim.github.com",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "Ubuntu 20.04 LTS",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Single-image SVBRDF capture with a rendering-aware deep network",
      "DOI": "10.1145/3197517.3201378",
      "Year": 2018,
      "ACM Keywords": [
        "Reflectance modeling",
        "Image processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www-sop.inria.fr/reves/Basilic/2018/DADDB18/Deep%20Material%20Acquisition%20Authors_version.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www-sop.inria.fr/reves/Basilic/2018/DADDB18/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://repo-sam.inria.fr/fungraph/deep-materials/",
      "Code URL2": "https://repo-sam.inria.fr/fungraph/deep-materials/InferenceCode_DeepMaterials.zip",
      "MD5 sum (for archives)": "6e3e9e8e2b13eb24a938fb27dae5bd9c",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "For research only, not for commercial use. Do not distribute. (The license is temporary)",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "N/A",
      "Dependencies": "tensorflow",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "pretrained models",
      "License of the data": "For research only, not for commercial use. Do not distribute.",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "macOS catalina",
      "Build instructions/comments": "Pretrained models are provided in the code archive. Results, datasets and supplemental materials are available on a second project page (https://team.inria.fr/graphdeco/projects/deep-materials/). This review corresponds to a new version of the code with a special fix to make it work with recent tensorflow (>2). Just edit the first lines of material_net_test.py (lines 18-19) to enable tensorflow>2. Once fixed, I was able to reproduce most results of the paper.",
      "Misc. comments": "",
      "Software language": "python"
    },
    {
      "Variant name": "macOS Catalina",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": false,
      "Is variant deprecated (boolean)": false,
      "Title": "Single-image SVBRDF capture with a rendering-aware deep network",
      "DOI": "10.1145/3197517.3201378",
      "Year": 2018,
      "ACM Keywords": [
        "Reflectance modeling",
        "Image processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www-sop.inria.fr/reves/Basilic/2018/DADDB18/Deep%20Material%20Acquisition%20Authors_version.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www-sop.inria.fr/reves/Basilic/2018/DADDB18/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://repo-sam.inria.fr/fungraph/deep-materials/",
      "Code URL2": "https://repo-sam.inria.fr/fungraph/deep-materials/InferenceCode_DeepMaterials.zip",
      "MD5 sum (for archives)": "6e3e9e8e2b13eb24a938fb27dae5bd9c",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "For research only, not for commercial use. Do not distribute. (The license is temporary)",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "N/A",
      "Dependencies": "tensorflow",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "pretrained models",
      "License of the data": "For research only, not for commercial use. Do not distribute.",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "macOS catalina",
      "Build instructions/comments": "Pretrained models are provided in the code archive. Results, datasets and supplemental materials are available on a second project page (https://team.inria.fr/graphdeco/projects/deep-materials/). This review corresponds to a new version of the code with a special fix to make it work with recent tensorflow (>2). Just edit the first lines of material_net_test.py (lines 18-19) to enable tensorflow>2. Once fixed, I was able to reproduce most results of the paper.\n\nOn Catalina, you may have an issue with protobuf. The following upgrade of the packages solves the problem:\n  python -m pip install --upgrade pip\n  python -m pip uninstall tensorflow tensorflow_estimator protobuf\n  python -m pip install tensorflow\n  python -m pip install lxml\n",
      "Misc. comments": "",
      "Software language": "python"
    },
    {
      "Variant name": "Ubuntu 20.04 LTS",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": false,
      "Is variant deprecated (boolean)": true,
      "Title": "Single-image SVBRDF capture with a rendering-aware deep network",
      "DOI": "10.1145/3197517.3201378",
      "Year": 2018,
      "ACM Keywords": [
        "Reflectance modeling",
        "Image processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www-sop.inria.fr/reves/Basilic/2018/DADDB18/Deep%20Material%20Acquisition%20Authors_version.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www-sop.inria.fr/reves/Basilic/2018/DADDB18/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://repo-sam.inria.fr/fungraph/deep-materials/",
      "Code URL2": "https://repo-sam.inria.fr/fungraph/deep-materials/InferenceCode_DeepMaterials.zip",
      "MD5 sum (for archives)": "2da19dfe747fdf1498be6a236a8a8b1b",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "For research only, not for commercial use. Do not distribute. (The license is temporary)",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "N/A",
      "Dependencies": "tensorflow",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "pretrained models",
      "License of the data": "For research only, not for commercial use. Do not distribute.",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 3,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "macOS catalina",
      "Build instructions/comments": "Pretrained models are provided in the code archive. Results, datasets and supplemental materials are available on a second project page (https://team.inria.fr/graphdeco/projects/deep-materials/). No dependency issue (just tensorflow installed using conda, version 2.1, the authors do not give the exact tensorflow version they are using) but the runExampleTest.sh does not work directly (tensorflow API issues). After performing these edits:\n\n148c148\n<         resized_images = tf.image.resize(batch_input, [in_height * 2, in_width * 2], method = tf.image.ResizeMethod.NEAREST_NEIGHBOR)\n---\n>         resized_images = tf.image.resize_images(batch_input, [in_height * 2, in_width * 2], method = tf.image.ResizeMethod.NEAREST_NEIGHBOR)\n248c248\n<     image_string = tf.io.read_file(filename)\n---\n>     image_string = tf.read_file(filename)\n294c294\n<         r = tf.image.resize(r, [a.scale_size, a.scale_size], method=tf.image.ResizeMethod.AREA)\n---\n>         r = tf.image.resize_images(r, [a.scale_size, a.scale_size], method=tf.image.ResizeMethod.AREA)\n382c382\n<     return  (tf.math.log(tf.add(tensor,0.01)) - tf.math.log(0.01)) / (tf.math.log(1.01)-tf.math.log(0.01))\n---\n>     return  (tf.log(tf.add(tensor,0.01)) - tf.log(0.01)) / (tf.log(1.01)-tf.log(0.01))\n616c616\n<     tf.random.set_seed(a.seed)\n---\n>     tf.set_random_seed(a.seed)\n\n\nI ended up with an issue I was not able to solve:\n\nTraceback (most recent call last):\n  File  material_net_test.py , line 752, in <module>\n    main()\n  File  material_net_test.py , line 644, in main\n    examples = load_examples(a.input_dir, a.mode ==  train )\n  File  material_net_test.py , line 330, in load_examples\n    iterator = batched_dataset.make_initializable_iterator()\nAttributeError:  BatchDataset  object has no attribute  make_initializable_iterator \n\nEditing line 330 with \n    iterator = tf.compat.v1.data.make_initializable_iterator(batched_dataset)\nproduces\n    RuntimeError: dataset.make_initializable_iterator is not supported when eager execution is enabled. Use  or element in dataset  instead.\n\nThis a more complex issue than just some API changes (and I am not expert in tensorflow).\n\nI was not able to create a conda env with a 1.7 or 1.8 tensorflow (which may correspond to the tensorflow the authors used) due to CUDA incompatibility issues.",
      "Misc. comments": "",
      "Software language": "python"
    },
    {
      "Variant name": "macOS catalina",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": false,
      "Is variant deprecated (boolean)": true,
      "Title": "Single-image SVBRDF capture with a rendering-aware deep network",
      "DOI": "10.1145/3197517.3201378",
      "Year": 2018,
      "ACM Keywords": [
        "Reflectance modeling",
        "Image processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www-sop.inria.fr/reves/Basilic/2018/DADDB18/Deep%20Material%20Acquisition%20Authors_version.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www-sop.inria.fr/reves/Basilic/2018/DADDB18/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://repo-sam.inria.fr/fungraph/deep-materials/",
      "Code URL2": "https://repo-sam.inria.fr/fungraph/deep-materials/InferenceCode_DeepMaterials.zip",
      "MD5 sum (for archives)": "2da19dfe747fdf1498be6a236a8a8b1b",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "For research only, not for commercial use. Do not distribute. (The license is temporary)",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "N/A",
      "Dependencies": "tensorflow",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "pretrained models",
      "License of the data": "For research only, not for commercial use. Do not distribute.",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "macOS catalina",
      "Build instructions/comments": "Pretrained models are provided in the code archive. Results, datasets and supplemental materials are available on a second project page (https://team.inria.fr/graphdeco/projects/deep-materials/). No dependency issue (just tensorflow installed using pip, version 2.1.0, the authors do not give the exact tensorflow version they are using) but the runExampleTest.sh crashes on my system with the following error code (which I was not able to solve):\n\n[libprotobuf ERROR google/protobuf/descriptor_database.cc:394] Invalid file descriptor data passed to EncodedDescriptorDatabase::Add().\n[libprotobuf FATAL google/protobuf/descriptor.cc:1356] CHECK failed: GeneratedDatabase()->Add(encoded_file_descriptor, size):\nlibc++abi.dylib: terminating with uncaught exception of type google::protobuf::FatalException: CHECK failed: GeneratedDatabase()->Add(encoded_file_descriptor, size):\n./runExampleTest.sh: line 2: 25883 Abort trap: 6           python3 material_net_test.py --input_dir inputExamples/ --mode eval --output_dir examples_outputs --checkpoint . --imageFormat png --scale_size 256\n\n",
      "Misc. comments": "",
      "Software language": "python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Laplacian kernel splatting for efficient depth-of-field and motion blur synthesis or reconstruction",
      "DOI": "10.1145/3197517.3201379",
      "Year": 2018,
      "ACM Keywords": [
        "Massively parallel algorithms",
        "Rasterization",
        "Image-based rendering"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://laplaciansplatting.mpi-inf.mpg.de/laplacian_splatting.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://laplaciansplatting.mpi-inf.mpg.de/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Slang: language mechanisms for extensible real-time shading systems",
      "DOI": "10.1145/3197517.3201380",
      "Year": 2018,
      "ACM Keywords": [
        "Graphics systems and interfaces"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://graphics.cs.cmu.edu/projects/slang/he18_slang.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://graphics.cs.cmu.edu/projects/slang/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/shader-slang/slang",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "a2d4d447639a1860f9de4ba9e2435f1d40ff3669",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:a2d4d447639a1860f9de4ba9e2435f1d40ff3669;origin=https://github.com/shader-slang/slang/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Makefile, IDE Project (VS,..), premake",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 1,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Overall I managed to build the project with VS2017 very easily, and ran the model-viewer demo within minutes. However, I did not manage to run the simpler cpu-hello-world demo due to a couple of bugs. In Line 217 of slang-win-visual-studio-util.cpp, I had to add a condition : if (lines.getCount() && lines[0].size()!=0) instead of if (lines.getCount()) because my Visual Studio vswhere gives a blank line when the requested version is not found (instead of no line at all), which was messing up with the VS version selector afterwards. Then, after fixing this issue, since the program was still looking for the 'Generic C/C++ Compiler' (and did not consider my VS2017 to be generic enough ? though it found it), I had to force Visual Studio to be passed through in line 113 of the main.cpp, using spSetPassThrough(slangRequest, SlangPassThrough(5));\nUltimately, after these fixes, I got a link error : \"Visual Studio 15.0: shader.slang (0): link error LNK1107:  invalid or corrupt file: cannot read at 0x16F\" when running the code, which I cannot debug much further.\nIn short, it nicely reproduced results on the GPU, but I could not run the code on the CPU.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Metamolds: computational design of silicone molds",
      "DOI": "10.1145/3197517.3201381",
      "Year": 2018,
      "ACM Keywords": [
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://vcg.isti.cnr.it/Publications/2018/AMGPBC18/2018%20ACM%20TOG%20Metamolds%20-%20personal.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://vcg.isti.cnr.it/Publications/2018/AMGPBC18/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "An empirical rig for jaw animation",
      "DOI": "10.1145/3197517.3201382",
      "Year": 2018,
      "ACM Keywords": [
        "Computer vision",
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://s3-us-west-1.amazonaws.com/disneyresearch/wp-content/uploads/20180730115224/An-Empirical-Rig-for-Jaw-Animation-Paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://la.disneyresearch.com/publication/empirical-jaw-rig/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Differentiable Programming for Image Processing and Deep Learning in Halide",
      "DOI": "10.1145/3197517.3201383",
      "Year": 2018,
      "ACM Keywords": [
        "Image processing",
        "Machine learning"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://people.csail.mit.edu/tzumao/gradient_halide/gradient_halide.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://people.csail.mit.edu/tzumao/gradient_halide/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/halide/Halide",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "19e66f9673c0a153f57c42c1b2f1c7696914582d",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:7701ebdf4ecfb61c405d281284e088d522114c20;origin=https://github.com/halide/Halide/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Makefile, CMakeLists",
      "Dependencies": "llvm",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "I was able to perform automatic differentiation (gamma correction example in the paper) however most filter examples in the paper did not come with code to reproduce and I was unable to reproduce them in a timely manner.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Instant 3D photography",
      "DOI": "10.1145/3197517.3201384",
      "Year": 2018,
      "ACM Keywords": [
        "Computational photography",
        "Reconstruction",
        "Image-based rendering"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://visual.cs.ucl.ac.uk/pubs/instant3d/instant3d_siggraph_2018.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://visual.cs.ucl.ac.uk/pubs/instant3d/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Interactive exploration of design trade-offs",
      "DOI": "10.1145/3197517.3201385",
      "Year": 2018,
      "ACM Keywords": [
        "Graphics systems and interfaces",
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://homes.cs.washington.edu/~adriana/tradeoffs/aschulz2018.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://homes.cs.washington.edu/~adriana/tradeoffs/index.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Numerical Coarsening using Discontinuous Shape Functions",
      "DOI": "10.1145/3197517.3201386",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.geometry.caltech.edu/pubs/CBWDH18.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Hyper-reduced projective dynamics",
      "DOI": "10.1145/3197517.3201387",
      "Year": 2018,
      "ACM Keywords": [
        "Real-time simulation",
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://graphics.tudelft.nl/~klaus/papers/hrpd.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://graphics.tudelft.nl/Publications-new/2018/BEH18/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://graphics.tudelft.nl/~klaus/code/HRPD.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "8C113B05A49334FC2F48D1F7F4A93CE2",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "None",
      "Dependencies": "libigl / glad / tetgen / eigen / glfw",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 5,
      "Operating system for the test": "Windows",
      "Build instructions/comments": "Minor adjustments to make it work : viewer.core().is_animating instead of view.core.is_animating (HDRP.cpp line 237 probably due to a change in igl). Also, it has to be compiled with the eigen provided with igl. Compiling it with the latest Eigen produces an error \"THE_EVAL_EVALTO_FUNCTION_SHOULD_NEVER_BE_CALLED_FOR_DENSE_OBJECTS\" in Eigen.\nA single example (armadillo) is provided for the demo, but I believe it should reproduce the examples shown in the paper as the result is reasonable.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Denoising with kernel prediction and asymmetric loss functions",
      "DOI": "10.1145/3197517.3201388",
      "Year": 2018,
      "ACM Keywords": [
        "Ray tracing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://graphics.pixar.com/library/MLDenoising2018/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://graphics.pixar.com/library/MLDenoising2018/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Generalized motorcycle graphs for imperfect quad-dominant meshes",
      "DOI": "10.1145/3197517.3201389",
      "Year": 2018,
      "ACM Keywords": [
        "Texturing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://cims.nyu.edu/gcl/papers/2018-GMG.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://nyuscholars.nyu.edu/en/publications/generalized-motorcycle-graphs-for-imperfect-quad-dominant-meshes",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/NSchertler/GeneralizedMotorcycleGraph",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "14c2a385ad6c104dbad1b4eea5ecca31f046bf33",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:d53a6a8522526b4c8b71b68750ade486e147647c;origin=https://github.com/NSchertler/GeneralizedMotorcycleGraph/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Makefile, CMakeLists",
      "Dependencies": "boots/glu",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Compilation successful and interface launched well but not able to load a mesh (nothing appears, many opengl invalid framebuffer errors).",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Optimizing for aesthetically pleasing qadrotor camera motion",
      "DOI": "10.1145/3197517.3201390",
      "Year": 2018,
      "ACM Keywords": [
        "Robotic planning",
        "Motion path planning",
        "Computer graphics",
        "Robotics"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://ait.ethz.ch/projects/2018/optimize-quad-cam-motion/downloads/gebhardt2018.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1906.11686",
      "Project URL": "https://ait.ethz.ch/projects/2018/optimize-quad-cam-motion/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Scene-aware audio for 360° videos",
      "DOI": "10.1145/3197517.3201391",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation",
        "Mixed / augmented reality",
        "Virtual reality"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.columbia.edu/cg/360audio/scene-aware-360-audio-siggraph-2018-Li-et-al.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1805.04792",
      "Project URL": "http://www.cs.columbia.edu/cg/360audio/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "A multi-scale model for simulating liquid-fabric interactions",
      "DOI": "10.1145/3197517.3201392",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://www.cs.columbia.edu/cg/wetcloth/main.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://www.cs.columbia.edu/cg/wetcloth/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/nepluno/libWetCloth",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "439e93f8bc9950049bc45e4dca9ff30397e7fe7a",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:993102ac261e3ce8954c409e2bad9d3a1c287a46;origin=https://github.com/nepluno/libwetcloth/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Clear BSD License but further  restricted to academic and non-commercial use",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMakeLists",
      "Dependencies": "Eigen  / RapidXML / tclap / libIGL / AntTweakBar / Intel TBB / GLUT / libPNG",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "Mac OS",
      "Build instructions/comments": "No real issues. Many dependencies but all are fine on mac os with brew.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Faceshop: deep sketch-based face image editing",
      "DOI": "10.1145/3197517.3201393",
      "Year": 2018,
      "ACM Keywords": [
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://home.inf.unibe.ch/~porteni/projects/faceshop/files/paper_final_author_version.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://home.inf.unibe.ch/~porteni/projects/faceshop/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Scanner: efficient video analysis at scale",
      "DOI": "10.1145/3197517.3201394",
      "Year": 2018,
      "ACM Keywords": [
        "Image manipulation",
        "Graphics systems and interfaces"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://graphics.stanford.edu/papers/scanner/poms18_scanner.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1805.07339",
      "Project URL": "http://scanner.run/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/scanner-research/scanner",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "645fb2388341bc90300e2645fe4f9d0374baa537",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:8cb1e6945fb08e2e77cf3d4ddaaaeef68708cab2;origin=https://github.com/scanner-research/scanner/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Apache License 2.0",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Makefile, CMakeLists, Not applicable (python, Matlab..)",
      "Dependencies": "tensorflow/caffe/opencv/eigen3/ffmpeg/boost/openpose/halide/storehouse/hwang/pybind/grpc/protobuf/libpqxx/cuda/cudnn",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 5,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "I used the docker setting, it worked well (cpu). Was not able to install from source because of a problem with hwang (installed by deps.sh although optional dependency). A jupyter notebook extremely detailed is provided and helps understand the code, so it would be very easy to adapt. I did not reproduce all the results in the paper (grayscale conversion worked well with docker).",
      "Misc. comments": "",
      "Software language": "C/C++, Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Physical Simulation of Environmentally Induced Thin Shell Deformation",
      "DOI": "10.1145/3197517.3201395",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "https://drive.google.com/file/d/1UKaF4ISw5JSP3SuCrtTzf2litcRPmg9R/view",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://users.oden.utexas.edu/~hsiaoyu/project/moistsim/moistsim.html",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/evouga/libshell",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "f95ca8913433e8d2ae25ae009a3e870e0c479fea",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:912bf4eef05d421a380b461f2d45f6f52b0474c5;origin=https://github.com/evouga/libshell/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "Mozilla Public License, version 2.0",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Makefile, CMakeLists",
      "Dependencies": "eigen/libigl",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 1,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "The github states that the method of the paper is implemented as part of libshell. An example program in libshell works fine, but no indication is given as to how to replicate the results for moisture/heat. The results do not look like the ones from the paper, but it's probably because it was not doing a moisture/heat simulation.",
      "Misc. comments": "",
      "Software language": "C/C++"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Voxel Cores: Efficient, robust, and provably good approximation of 3D medial axes",
      "DOI": "10.1145/3197517.3201396",
      "Year": 2018,
      "ACM Keywords": [
        "Shape analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cse.wustl.edu/~taoju/research/voxelma.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://yajieyan.github.io/project/voxelcore/",
      "Code URL2": "",
      "MD5 sum (for archives)": "b6009383591ec91d2785c26d76b852a8",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Code License (if any)": "unspecified",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Not applicable (python, Matlab..)",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "Produces paper-like results, but no script to reproduce the examples and input data not given.",
      "Misc. comments": "",
      "Software language": "Cannot answer"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Learning symmetric and low-energy locomotion",
      "DOI": "10.1145/3197517.3201397",
      "Year": 2018,
      "ACM Keywords": [
        "Learning paradigms",
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cc.gatech.edu/~turk/paper_pages/2018_symmetric_locomotion/symmetric_low_energy_locomotion.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1801.08093",
      "Project URL": "https://www.cc.gatech.edu/~turk/paper_pages/2018_symmetric_locomotion/",
      "Code available (boolean)": true,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "https://github.com/VincentYu68/SymmetryCurriculumLocomotion",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "b50478f8eca673730e3ce1a5441b1948b31a5187",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:fa936fa9da4f75e51d2fb6aa97940c59166a48d1;origin=https://github.com/VincentYu68/SymmetryCurriculumLocomotion/",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "Other script",
      "Dependencies": "libeigen3-dev libassimp-dev libccd-dev libfcl-dev libboost-regex-dev libboost-system-dev libopenscenegraph-dev libbullet-dev liburdfdom-dev libnlopt-dev libxi-dev libxmu-dev freeglut3-dev libtinyxml2-dev  swig tensorflow numpy dart pydart",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 2,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Operating system for the test": "Linux",
      "Build instructions/comments": "All scripts are provided for reproducing the examples in the paper.\nThe dependencies can be easily installed using a script, but on ubuntu 19.10 I had to install libnlopt-cxx-dev.\nThe policy learning went well, but I was not able to produce the results of the paper, due to the failure of the test_policy function with error: Attempted to look up malformed environment ID: b'../data/precomp_data/dog_run1/policy_params.pkl'. (Currently all IDs must be of the form ^(?:[\\w:-]+\\/)?([\\w:.-]+)-v(\\d+)$.)\nThis occured also when testing the provided precomputed policies.\n\nI also tried with an older release of dart-env (v0.7.4 - 2017) which seems to be handling registration but the same problem occured.",
      "Misc. comments": "",
      "Software language": "Python"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Example-based Turbulence Style Transfer",
      "DOI": "10.1145/3197517.3201398",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://nishitalab.org/user/syuhei/TurbuStyleTrans/paper.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://nishitalab.org/user/syuhei/TurbuStyleTrans/turbu_styletrans.html",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 2,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Online optical marker-based hand tracking with deep labels",
      "DOI": "10.1145/3197517.3201399",
      "Year": 2018,
      "ACM Keywords": [
        "Machine learning",
        "Modeling and simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://research.fb.com/wp-content/uploads/2018/06/Online-Optical-Marker-based-Hand-Tracking-with-Deep-Labels.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://github.com/Beibei88/Mocap_SIG18_Data/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "The trained neural network is provided together with a yml file with the network architecture but no training or testing script and not trivial to set up.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Fabricating reflectors for displaying multiple images",
      "DOI": "10.1145/3197517.3201400",
      "Year": 2018,
      "ACM Keywords": [
        "Reflectance modeling",
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://ksakurai.sakura.ne.jp/SG18/SG18_pv/fabricating_reflector_sig2018_fin2.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "http://ksakurai.sakura.ne.jp/SG18/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Deep appearance models for face rendering",
      "DOI": "10.1145/3197517.3201401",
      "Year": 2018,
      "ACM Keywords": [
        "Neural networks",
        "Image-based rendering",
        "Virtual reality",
        "Mesh models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://research.fb.com/wp-content/uploads/2018/08/Deep-Appearance-Models-for-Face-Rendering.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1808.00362",
      "Project URL": "https://research.fb.com/publications/deep-appearance-models-for-face-rendering/",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Magnetization dynamics for magnetic object interactions",
      "DOI": "10.1145/3197517.3201402",
      "Year": 2018,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF URL": "",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "",
      "Code available (boolean)": false,
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "git/hg/svn commit hash or revision number": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": "",
      "Build/configure score {0=NA, 1,2,3,4,5}": "",
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": "",
      "Replicate paper results score {0=NA, 1,2,3,4,5}": "",
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": "",
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": " Ubuntu 20.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Accurate appearance preserving prefiltering for rendering displacement-mapped surfaces ",
      "DOI": "10.1145/3306346.3322936",
      "Year": 2019,
      "ACM Keywords": [
        " Rendering "
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://cseweb.ucsd.edu/~liw086/multires-surface-s19/multires.pdf",
      "Project URL": "",
      "Code available (boolean)": true,
      "Code URL": "http://cseweb.ucsd.edu/~liw086/multires-surface-s19/prefilter_disp_map.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "75409ed3ebace219a5593fb8213a2e1d",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++,python",
      "Code License (if any)": "GPL3",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "scons",
      "Dependencies": "build-essential, scons, mercurial, qt4-dev-tools, libpng12-dev, libjpeg-dev, libilmbase-dev, libxerces-c-dev, libboost-all-dev, libopenexr-dev, libglewmx-dev, libxxf86vm-dev, libpcrecpp0, libeigen3-devlibfftw3-dev, libglew-mx, python3 (scipy, numpy, opencv)",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 2,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 2,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 6,
      "Build instructions/comments": "Several changes have to be made for it to compile on linux (command line only). To build (once you've fixed all files, see below) go to the mitsuba folder and \"cp build/config-linux-gcc.py  config.py\"  then run scons.\n Install mitsuba required dependencies (see above)\n Required code changes: \n * mitsuba/include/mitsuba/core/tls.h : add #include \"../../../dependencies/include/GL/glew.h\" \n * mitsuba/src/shapes/shellmap_heightfield.cpp :\n line 376 cast p.z into (double)p.z\n * mitsuba/src/utils/precomp/bsdfSimulator_proc.cpp:\n line 106: cast normal.z into (double)normal.z;\n line 113:  cast dot(normal, m_wi)) into (double)dot(normal, m_wi))\n * mitsuba/src/utils/precomp/effBrdfEstimator.cpp :\n line 133: change Float w into double w ; line;\n line 225: cast normal.z into (double)normal.z;\n line 232:  cast dot(normal, m_wi)) into (double)dot(normal, m_wi))\n * mitsuba/src/utils/precomp/normalMipmap.cpp:\n lines 223 and 286 replace kappa by (double)kappa\n * mitsuba/src/utils/precomp/multi_vmf.h change Float(rand()) / Float(RAND_MAX) into  (double)(Float(rand()) / Float(RAND_MAX))\n Then go to data/render_twill/ and run LD_LIBRARY_PATH=../../mitsuba/dist/ ../../mitsuba/dist/mitsuba env_shellmap_1.xml (for example)\n For running the python script, in mitsuba/build/SConscript.configure, make your python version (3.8 in my case) you're running is listed in python_versions line 34 and in data/scons/detect_python do the same on line 60 and add 'boost_python%s' % version to the base paths line 45.\n In file prefilter_twill.py: lines 39 and 79 replace slashes by backslashes (but not the escaping-slashes)\n Finally do not forget to source setpath.sh after setting MITSUBA_PYVER to your python version number",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Wave-Based Non-Line-of-Sight Imaging using Fast f-k Migration",
      "DOI": "10.1145/3306346.3322937",
      "Year": 2019,
      "ACM Keywords": [
        "3D imaging",
        "Computational photography"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://www.computationalimaging.org/wp-content/uploads/2019/05/nlos_fk.pdf",
      "Project URL": "http://www.computationalimaging.org/publications/nlos-fk/",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/computational-imaging/nlos-fk",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "ab2ff7c342b8114653c49831db5e40d310379d4c",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "matlab",
      "Code License (if any)": "Specific license",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "Matlab",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Build instructions/comments": "Works out of the box.",
      "Misc. comments": "I could replicate the statue reconstruction using the demo.m file."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Tangent-space optimization for interactive animation control",
      "DOI": "10.1145/3306346.3322938",
      "Year": 2019,
      "ACM Keywords": [
        "Animation",
        "Graphics Systems and Interfaces"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://cgl.ethz.ch/Downloads/Publications/Papers/2019/Cic19a/Cic19a.pdf",
      "Project URL": "https://cgl.ethz.ch/publications/papers/paperCic19a.php",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "PlanIT: planning and instantiating indoor scenes with relation graph and spatial prior networks ",
      "DOI": "10.1145/3306346.3322941",
      "Year": 2019,
      "ACM Keywords": [
        "Probabilistic reasoning",
        "Computer graphics",
        "Neural networks"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://drive.google.com/file/d/1CJCM6EQyeUWwxdk6tl8cVxEIhV7s3DoA/view",
      "Project URL": "",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/brownvc/planit",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "b42bfda1f7cd7c0e07874728ae7b809c09a3e6b7",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:5beb70169b7a0396c8e4bfb339d4994f6350120b;origin=https://github.com/brownvc/planit;visit=swh:1:snp:a3c298ae1199d97b23b00949037c588aef43d5cd;anchor=swh:1:rev:b42bfda1f7cd7c0e07874728ae7b809c09a3e6b7;path=//",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "python",
      "Code License (if any)": "All rights reserved to Brown",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "NA",
      "Dependencies": "Not listed",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "pretrained model or training dataset",
      "License of the data": "Data not provided.",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Build instructions/comments": "Could not run due to missing data: the dataset is no longer available, and no pretrained model is given. The necessary packages are not listed in the readme file.",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Tensor maps for synchronizing heterogeneous shape collections",
      "DOI": "10.1145/3306346.3322944",
      "Year": 2019,
      "ACM Keywords": [
        "Redundancy",
        "Embedded systems",
        "Robotics",
        "Network Reliability"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://www.cs.utexas.edu/~huangqx/Tensor.pdf",
      "Project URL": "",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Compact snapshot hyperspectral imaging with diffracted rotation",
      "DOI": "10.1145/3306346.3322946",
      "Year": 2019,
      "ACM Keywords": [
        "Hyperspectral imaging"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://vccimaging.org/Publications/Jeon2019Hyperspectral/Jeon2019Hyperspectral.pdf",
      "Project URL": "http://vclab.kaist.ac.kr/siggraph2019/index.html",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "Ubuntu 20.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Distortion-free wide-angle portraits on camera phones",
      "DOI": "10.1145/3306346.3322948",
      "Year": 2019,
      "ACM Keywords": [
        "Computational photography",
        "Image processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://people.csail.mit.edu/yichangshih/wide_angle_portrait/shih_sig19_lowres.pdf",
      "Project URL": "https://people.csail.mit.edu/yichangshih/wide_angle_portrait/#supp",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "CD-MPM: continuum damage material point methods for dynamic fracture animation",
      "DOI": "10.1145/3306346.3322949",
      "Year": 2019,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://www.seas.upenn.edu/~cffjiang/research/wolper2019fracture/wolper2019fracture.pdf",
      "Project URL": "",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/penn-graphics-research/ziran2019",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "8d3d27cd17bbceab18c317820dbe595178f6312a",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:0bca7744a7dff8d83093fa013e99d7086cfdf8f3;origin=https://github.com/penn-graphics-research/ziran2019;visit=swh:1:snp:60d230fd23a15f9241785ee90478bf9722d99dac;anchor=swh:1:rev:8d3d27cd17bbceab18c317820dbe595178f6312a;path=//",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMake/Make",
      "Dependencies": "eigen3, gfortran, libmetis, libopenvdb, libboost, libilmbase, libtbb2, libz, clang-format",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 3,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Build instructions/comments": "To make it compile, I removed the -Werror=all . In Lib/MPM/MpmSimulationBase.cpp, I replaced all lines \"if constexpr (!USE_APIC_BLEND_RPIC)\" with \"if (!USE_APIC_BLEND_RPIC)\"; \"if constexpr (USE_APIC_BLEND_RPIC)\" with \"if (USE_APIC_BLEND_RPIC)\"; \"if constexpr (!USE_MPM_DEGREE_ONE)\" with \"if (!USE_MPM_DEGREE_ONE)\".",
      "Misc. comments": "The code corresponds to two siggraph 2019 papers. It is not explicit which code corresponds to which paper, I assumed \"fracture\" corresponds to this paper.  I could reproduce the dino and bread experiments. I visualized the bgeo files with the partview tool available here: \"https://github.com/wdas/partio\", it can also be done using Houdini. To know which test number corresponds to which experiment, refer to the FractureInit3D.h file."
    },
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": false,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "CD-MPM: continuum damage material point methods for dynamic fracture animation",
      "DOI": "10.1145/3306346.3322949",
      "Year": 2019,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://www.seas.upenn.edu/~cffjiang/research/wolper2019fracture/wolper2019fracture.pdf",
      "Project URL": "",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/penn-graphics-research/ziran2019",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "8d3d27cd17bbceab18c317820dbe595178f6312a",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:0bca7744a7dff8d83093fa013e99d7086cfdf8f3;origin=https://github.com/penn-graphics-research/ziran2019;visit=swh:1:snp:60d230fd23a15f9241785ee90478bf9722d99dac;anchor=swh:1:rev:8d3d27cd17bbceab18c317820dbe595178f6312a;path=//",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMake/Make",
      "Dependencies": "eigen3, gfortran, libmetis, libopenvdb, libboost, libilmbase, libtbb2, libz, clang-format",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Build instructions/comments": "Compiles out of the box.",
      "Misc. comments": "The code corresponds to two siggraph 2019 papers. It is not explicit which code corresponds to which paper, I assumed \"fracture\" corresponds to this paper. I could reproduce the dino and bread experiments. I visualized the bgeos files with the partview tool available here: \"https://github.com/wdas/partio\", it can also be done using Houdini.  To know which test number corresponds to which experiment, refer to the FractureInit3D.h file."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "A Monte Carlo framework for rendering speckle statistics in scattering media",
      "DOI": "10.1145/3306346.3322950",
      "Year": 2019,
      "ACM Keywords": [
        "Ray tracing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1901.06931",
      "PDF URL": "https://webee.technion.ac.il/people/anat.levin/papers/SpeckleRenderingSIGGRAPH2019.pdf",
      "Project URL": "https://imaging.cs.cmu.edu/publications/a-monte-carlo-framework-for-rendering-speckle-statistics-in-scattering-media/",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/cmu-ci-lab/mcspeckle",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "c4ecf78f32558cba5e45ab0c43a0995a20f2c85b",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:a850fae5be70dcf06f7a5128670fec06bdfb2bc0;origin=https://github.com/cmu-ci-lab/mcspeckle;visit=swh:1:snp:3a35cdb24ad67a89d2a1abf099040aff3c71b7b4;anchor=swh:1:rev:c4ecf78f32558cba5e45ab0c43a0995a20f2c85b;path=//",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "Matlab",
      "Code License (if any)": "Not specified",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "NA",
      "Dependencies": "Matlab",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 2,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 2,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Build instructions/comments": "There is an example directory with many stored experiments, none are really commented but it is possible to compare the results obtained with the ones in the pdf corresponding to each script.\n Several scripts did not work (Matlab 2019b):\n farFieldCov, evaluateTabulatedScatterVsHG, sampleTabulatedScatterVsHG, require an 'ampfunc0' field in struct scatter which is not available. Without any comment in the code, I was not able to correct it.\n multipleAndSingleScattering works provided one removes line 44 \"'means', false, ...\".\n testHetroCov requires tmpdata/ampfunc05lmbd1 a file which is not available\n nearFieldCov, memoryEffectMeasurements, renderSpecklesImages (reproduces Fig. 12), samplingFromCovMatrix work out of the box. I did not test the other scripts testRefocus3D, testSmpXHetro, testWoodcock. testRefocus.",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "Ubuntu 20.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Decomposed optimization time integrator for large-step elastodynamics",
      "DOI": "10.1145/3306346.3322951",
      "Year": 2019,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://dannykaufman.io/projects/DOT/doc/li2019dot.pdf",
      "Project URL": "http://dannykaufman.io/projects/DOT/DOT.html",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/penn-graphics-research/DOT",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "26525fba815fb081e90676321e42d0a60ecb0cb1",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "python script calling cmake and make",
      "Dependencies": "xorg-dev,libglu1-mesa-dev, SuiteSparse (shipped with the code)",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Build instructions/comments": "I had to add \"SuiteSparse/CHOLMOD/Include\" to the include_directories in the CMakeLists.txt.",
      "Misc. comments": "To run the program, copy the bunny5K_LTSS_DOT.txt or/and bar17K_twist_DOT.txt files in directory input/ to a new directory input/1/ or input/8/ (the number 1 or 8 being the number of threads used for the linear solvers). Results are written to the output/ folder."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "RedMax: efficient & flexible approach for articulated dynamics",
      "DOI": "10.1145/3306346.3322952",
      "Year": 2019,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://faculty.cs.tamu.edu/sueda/projects/redmax/WWBHKS2019.pdf",
      "Project URL": "http://faculty.cs.tamu.edu/sueda/projects/redmax/",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/sueda/redmax",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "299d70d9713385661ce94ee5f2011470002b46bf",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:3251bcb93cd91a892a8a056b6536a295b0ed80be;origin=https://github.com/sueda/redmax;visit=swh:1:snp:7a235a6948ea44d6bc90942c935c9234831ee01e/",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++ and matlab",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "CMake/make",
      "Dependencies": "eigen,pardiso,intel mkl, jsoncpp, glm, glfw, glew",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 2,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 3,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Build instructions/comments": "To build the C++ version: In c++/PCG/cmake/FindPardiso.cmake: rename the file to FindPARDISO.cmake), change the name of the library on line 48 (for me it was libpardiso600-GNU720-X86-64.so) -> however there was a linking problem with pardiso maybe due to inteference with MKL.\n In c++/PCG/cmake/FindJSONCPP.cmake, line 49 change ${JSONCPP_ROOT_DIR}/include/ to ${JSON_CPP_ROOT_DIR} (at least when the lib is installed with apt-get).\n In c++/PCG/CMakeLists.txt, change the ROOT_DIR. Mine were the following: SET(EIGEN3_ROOT_DIR \"/usr/include/eigen3\")\n SET(MKL_ROOT_DIR \"/opt/intel/mkl\")\n SET(PARDISO_ROOT_DIR \"$HOME/softs/\")\n SET(JSONCPP_ROOT_DIR \"/usr/include/jsoncpp/\").\n I was not able to compile with PARDISO so I set the REDMAX_WITH_PARDISO option to OFF.\n",
      "Misc. comments": "I was able to run ./Redmax ../resources, the bridge scene showed up but nothing happens even after 1940 timesteps.\n The matlab-simple/testRedMax.m and matlab/testRedMax.m scripts worked well  - except scene 17 and 18 for matlab/testRedMax.m with a \"Unable to resolve the name reduced.JointFree3D.\" error"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Spectral coarsening of geometric operators",
      "DOI": "10.1145/3306346.3322953",
      "Year": 2019,
      "ACM Keywords": [
        "Shape analysis",
        "Computation on matrices"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://www.lix.polytechnique.fr/~maks/papers/S19_OptPreserve_camera.pdf",
      "Project URL": "",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/HTDerekLiu/SpecCoarsen_MATLAB",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "749b4bf2aa89143c0b50c9a2a50a6fbd6b115919",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:eabb9f3dc62f79b48b9d4cafd24090ee2f0d3be8;origin=https://github.com/HTDerekLiu/SpecCoarsen_MATLAB;visit=swh:1:snp:a1013d4756ace673ef0f4f6526b4bd32ab191bc4;anchor=swh:1:rev:749b4bf2aa89143c0b50c9a2a50a6fbd6b115919;path=//",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "Matlab",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "Matlab, gptoolbox",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Build instructions/comments": "To link with gptoolbox edit demo.m by changing the path to your gptoolbox location (line3: for example: addpath(genpath('./gptoolbox')).",
      "Misc. comments": ""
    }
  ],
  [
    {
      "##": "This field is displayed even if no replicability test could have been performed.",
      "Variant name": "Ubuntu 18.04 ",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Interactive hand pose estimation using a stretch-sensing soft glove",
      "DOI": "10.1145/3306346.3322957",
      "Year": 2019,
      "ACM Keywords": [
        "Interaction devices",
        "Motion capture",
        "Computer graphics",
        "Machine learning"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://cims.nyu.edu/gcl/papers/2019-Capacitive.pdf",
      "Project URL": "https://igl.ethz.ch/projects/stretch-glove/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": "The project website has a documented dataset of captured hand positions sequences."
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Real-time pose and shape reconstruction of two interacting hands with a single depth camera",
      "DOI": "10.1145/3306346.3322958",
      "Year": 2019,
      "ACM Keywords": [
        "Tracking",
        "Neural Networks"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://handtracker.mpi-inf.mpg.de/projects/TwoHands/content/TwoHands_SIGGRAPH2019.pdf",
      "Project URL": "https://handtracker.mpi-inf.mpg.de/projects/TwoHands/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": "The project's webpage provides two datasets: \"Real Painted Hands Dataset\" and \"Dense Hands Dataset\", that are used in the paper."
    }
  ],
  [
    {
      "Variant name": "Ubuntu 20.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Using moments to represent bounded signals for spectral rendering",
      "DOI": "10.1145/3306346.3322964",
      "Year": 2019,
      "ACM Keywords": [
        "Reflectance Modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://momentsingraphics.de/Media/Siggraph2019/Peters2019-CompactSpectra.pdf",
      "Project URL": "http://momentsingraphics.de/Siggraph2019.html",
      "Code available (boolean)": true,
      "Code URL": "http://momentsingraphics.de/Media/Siggraph2019/Peters2019-CompactSpectraCode.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "549fe8072afd365d07b44df59ee26bf3",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++, python",
      "Code License (if any)": "BSD",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "none given",
      "Dependencies": "libpthread",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Build instructions/comments": "For building the LookUpTableCode, I used the following CMakeLists.txt linking with pthreads:\n cmake_minimum_required(VERSION 3.10)\n PROJECT(lut)\n SET(CMAKE_CXX_FLAGS \"-O3\")\n ADD_EXECUTABLE(lut main.cpp Grid3D.cpp NearestNeighborIndex.cpp)\n set(THREADS_PREFER_PTHREAD_FLAG ON)\n find_package(Threads REQUIRED)\n target_link_libraries(lut PRIVATE Threads::Threads)\n\n I was able to generate the lut for Fourier coeffs to XYZ and test other configurations. The python scripts worked out of the box and produced paper-like results.",
      "Misc. comments": "Notice that the lut generation requires a lot of RAM (around 12Go)."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Silly rubber: an implicit material point method for simulating non-equilibrated viscoelastic and elastoplastic solids",
      "DOI": "10.1145/3306346.3322968",
      "Year": 2019,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://www.seas.upenn.edu/~cffjiang/research/fang2019visco/fang2019visco.pdf",
      "Project URL": "",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/penn-graphics-research/ziran2019",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "8d3d27cd17bbceab18c317820dbe595178f6312a",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:0bca7744a7dff8d83093fa013e99d7086cfdf8f3;origin=https://github.com/penn-graphics-research/ziran2019;visit=swh:1:snp:60d230fd23a15f9241785ee90478bf9722d99dac;anchor=swh:1:rev:8d3d27cd17bbceab18c317820dbe595178f6312a;path=//",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMake/Make",
      "Dependencies": "eigen3, gfortran, libmetis, libopenvdb, libboost, libilmbase, libtbb2, libz, clang-format",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 3,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 4,
      "Build instructions/comments": "To make it compile, I removed the -Werror=all . In Lib/MPM/MpmSimulationBase.cpp, I replaced all lines \"if constexpr (!USE_APIC_BLEND_RPIC)\" with \"if (!USE_APIC_BLEND_RPIC)\"; \"if constexpr (USE_APIC_BLEND_RPIC)\" with \"if (USE_APIC_BLEND_RPIC)\"; \"if constexpr (!USE_MPM_DEGREE_ONE)\" with \"if (!USE_MPM_DEGREE_ONE)\".",
      "Misc. comments": "The code corresponds to two siggraph 2019 papers. It is not explicit which code corresponds to which paper, I assumed \"admm\" project corresponds to this paper, while \"fracture\" corresponds to \"CD-MPM: Continuum Damage Material Point Methods for Dynamic Fracture Animation\". I could reproduce the twisted bar and car crash experiments. I visualized the bgeo files with the partview tool available here: \"https://github.com/wdas/partio\", it can also be done using Houdini. To know which test number corresponds to which experiment, refer to the AdmmInit3D.h file."
    },
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": false,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Silly rubber: an implicit material point method for simulating non-equilibrated viscoelastic and elastoplastic solids",
      "DOI": "10.1145/3306346.3322968",
      "Year": 2019,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://www.seas.upenn.edu/~cffjiang/research/fang2019visco/fang2019visco.pdf",
      "Project URL": "",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/penn-graphics-research/ziran2019",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "8d3d27cd17bbceab18c317820dbe595178f6312a",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:0bca7744a7dff8d83093fa013e99d7086cfdf8f3;origin=https://github.com/penn-graphics-research/ziran2019;visit=swh:1:snp:60d230fd23a15f9241785ee90478bf9722d99dac;anchor=swh:1:rev:8d3d27cd17bbceab18c317820dbe595178f6312a;path=//",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "CMake/Make",
      "Dependencies": "eigen3, gfortran, libmetis, libopenvdb, libboost, libilmbase, libtbb2, libz, clang-format",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Build instructions/comments": "The code compules out of the box",
      "Misc. comments": "The code corresponds to two siggraph 2019 papers. It is not explicit which code corresponds to which paper, I assumed \"admm\" project corresponds to this paper, while \"fracture\" corresponds to \"CD-MPM: Continuum Damage Material Point Methods for Dynamic Fracture Animation\". I could reproduce the twisted bar and car crash experiments. I visualized the bgeo files with the partview tool available here: \"https://github.com/wdas/partio\", it can also be done using Houdini.  To know which test number corresponds to which experiment, refer to the AdmmInit3D.h file."
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "NeuroSkinning: automatic skin binding for production characters with deep graph networks",
      "DOI": "10.1145/3306346.3322969",
      "Year": 2019,
      "ACM Keywords": [
        "Animation",
        "Neural networks"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://www.youyizheng.net/docs/neuroskinning-final-opt.pdf",
      "Project URL": "http://fuxi.163.com/en/thesis/NeuroSkinning.html",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": "The datasets can be obtained here: http://fuxi.163.com/en/thesis/NeuroSkinning.html."
    }
  ],
  [
    {
      "Variant name": "macOS",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS Catalina",
      "Title": "SurfaceBrush: from virtual reality drawings to manifold surfaces",
      "DOI": "10.1145/3306346.3322970",
      "Year": 2019,
      "ACM Keywords": [
        "Virtual reality",
        "Mesh geometry models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1904.12297",
      "PDF URL": "http://www.cs.ubc.ca/labs/imager/tr/2019/SurfaceBrush/doc/SurfaceBrush_AuthorVersion.pdf",
      "Project URL": "http://www.cs.ubc.ca/labs/imager/tr/2019/SurfaceBrush/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": "The project page provides some input and result data."
    }
  ],
  [
    {
      "Variant name": "macOS",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS",
      "Title": "Visual smoothness of polyhedral surfaces",
      "DOI": "10.1145/3306346.3322975",
      "Year": 2019,
      "ACM Keywords": [
        "Shape Modeling",
        "Optimization algorithms"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://www.dmg.tuwien.ac.at/geom/ig/publications/energies/energies.pdf",
      "Project URL": "",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "macOS",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macos",
      "Title": "Creating impactful characters: correcting human impact accelerations using high rate IMUs in dynamic activities",
      "DOI": "10.1145/3306346.3322978",
      "Year": 2019,
      "ACM Keywords": [
        "Motion capture",
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://dl.acm.org/doi/pdf/10.1145/3306346.3322978",
      "Project URL": "",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": "PDF only available through ACM Digital Library"
    }
  ],
  [
    {
      "##": "This field is displayed even if no replicability test could have been performed.",
      "Variant name": "MacOS Catalina",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS Catalina",
      "Title": "Navigating intrinsic triangulations",
      "DOI": "10.1145/3306346.3322979",
      "Year": 2019,
      "ACM Keywords": [
        "Mesh generation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://www.cs.cmu.edu/~kmcrane/Projects/NavigatingIntrinsicTriangulations/paper.pdf",
      "Project URL": "https://www.cs.cmu.edu/~kmcrane/Projects/NavigatingIntrinsicTriangulations/index.html",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/nmwsharp/navigating-intrinsic-triangulations-demo",
      "Code URL2": "http://geometry-central.net",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "5e35bc0234f5bd945cafd6020e0cdb57c5aa68ad",
      "git/hg/svn commit hash or revision number URL2": "52a133a5c9d0a4f33239e81de9be2ffe3b5cea8d",
      "Software Heritage permalink": "pending",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "c++",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "cmake",
      "Dependencies": "geometry-central,polyscope,glfw,eigen",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Build instructions/comments": "The main code is available in the geometry-central library. The provided code in the project page is a demo code with graphical and CLI interface to the intrinsic triangulation. The cmake script installs all dependencies in a very convenient way. No issue to build the project.\nOn Mac, there is an issue when building geometry-central:\n\n make[2]: *** No rule to make target `../deps/geometry-central/deps/-lm', needed by `bin/int_tri'.  Stop.\n\n Note that this bug has been fixed in the geometry-central master (not the same version as the git submodule in the deps folder).\nTo fix the issue, just upgrade the submodule to the master:\n\n cd deps/geometry-central/ ; git checkout master ; cd ../../build ; make\n\nBeside this issue, most paper results can be reproduced from the code.",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Volume-aware design of composite molds",
      "DOI": "10.1145/3306346.3322981",
      "Year": 2019,
      "ACM Keywords": [
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://vcg.isti.cnr.it/Publications/2019/AMGBCP19/composite_molds_authorsversion.pdf",
      "Project URL": "http://vcg.isti.cnr.it/Publications/2019/AMGBCP19/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Direct Delta Mush Skinning and Variants",
      "DOI": "10.1145/3306346.3322982",
      "Year": 2019,
      "ACM Keywords": [
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://media.contentapi.ea.com/content/dam/ea/seed/presentations/direct-delta-mush-and-variants.pdf",
      "Project URL": "https://www.ea.com/seed/news/siggraph2019-direct-delta-mush",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": "There seems to be an independent implementation here: https://github.com/2TallTim."
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Hand modeling and simulation using stabilized magnetic resonance imaging",
      "DOI": "10.1145/3306346.3322983",
      "Year": 2019,
      "ACM Keywords": [
        "Physical Simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://barbic.usc.edu/hand-mri/WangMatcukBarbic-SIGGRAPH2019.pdf",
      "Project URL": "http://barbic.usc.edu/hand-mri/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": "The Hand MRI dataset can be downloaded here: http://barbic.usc.edu/hand-mri/."
    }
  ],
  [
    {
      "Variant name": "macOS",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS Catalina",
      "Title": "Luminance-contrast-aware foveated rendering",
      "DOI": "10.1145/3306346.3322985",
      "Year": 2019,
      "ACM Keywords": [
        "Perception",
        "Image manipulation",
        "Rendering"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://www.pdf.inf.usi.ch/projects/AdaptiveFoveation/AdaptiveFoveation.pdf",
      "Project URL": "https://www.pdf.inf.usi.ch/projects/AdaptiveFoveation/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "##": "This field is displayed even if no replicability test could have been performed.",
      "Variant name": "macOS",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Harmonic triangulations",
      "DOI": "10.1145/3306346.3322986",
      "Year": 2019,
      "ACM Keywords": [
        "Mesh geometry models",
        "Discrete optimization",
        "Mesh generation",
        "Computational geometry"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "http://cybertron.cg.tu-berlin.de/~alexa/hts.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.cg.tu-berlin.de/research/harmonic-triangulations/",
      "Code available (boolean)": true,
      "Code URL": "http://s000.tinyupload.com/?file_id=08995223138880152359",
      "Code URL2": "",
      "MD5 sum (for archives)": "50c53cf2d535b6ce7af04ce7e4461759",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "none just a compilation line in the README",
      "Dependencies": "CGAL, GMP, CLI11",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 2,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Operating system for the test": "macOS Catalina",
      "Build instructions/comments": "The zip file contains a single c++ and a README with a g++ command line instruction. To avoid build issues (the given command line does not work on my macOS Catalina), I have created a small CMakeLists.txt (after renaming the harm_simple.cp to harm_simple.cpp): \n\nproject(harmonic)\nfind_package(CGAL REQUIRED COMPONENTS Core)\nadd_executable(harm_simple harm_simple.cpp)\ntarget_link_libraries(harm_simple CGAL::CGAL  CGAL::CGAL_Core)\n\n Once compiled, I was able to produce some optimized tetrahedral meshes but I was not able to check the results (the tetview viewer does not work anymore on macOS Catalina).",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Computational design of fabric formwork",
      "DOI": "10.1145/3306346.3322988",
      "Year": 2019,
      "ACM Keywords": [
        "Computer-aided design",
        "Shape modeling",
        "Modeling and simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.inria.fr/hal-02397265",
      "PDF URL": "http://cs-people.bu.edu/whiting/resources/pubs/Zhang2019_FabricFormwork.pdf",
      "Project URL": "https://shape.bu.edu/fabric",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "##": "This field is displayed even if no replicability test could have been performed.",
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": " Ubuntu 18.04",
      "Title": "Procedural phasor noise",
      "DOI": "10.1145/3306346.3322990",
      "Year": 2019,
      "ACM Keywords": [
        "Texturing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.archives-ouvertes.fr/hal-02118508/",
      "PDF URL": "https://hal.archives-ouvertes.fr/hal-02118508/file/ProceduralPhasorNoise.pdf",
      "Project URL": "",
      "Code available (boolean)": true,
      "Code URL": "https://www.shadertoy.com/user/ThibaultTricard",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Software type {Code, Binary, Partial Code}": "Partial Code",
      "Software language": "GLSL",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Build instructions/comments": "",
      "Misc. comments": "The code is available on shadertoy and permits to replicate three images of the paper. The code has almost no comments."
    }
  ],
  [
    {
      "##": "This field is displayed even if no replicability test could have been performed.",
      "Variant name": "macOS Catalina",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Wallpaper pattern alignment along garment seams",
      "DOI": "10.1145/3306346.3322991",
      "Year": 2019,
      "ACM Keywords": [
        "Texturing",
        "Mesh geometry models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://igl.ethz.ch/projects/aligned-seams/Aligned-Seams-2019.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://igl.ethz.ch/projects/aligned-seams/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": "No code available for this paper.",
      "Software language": ""
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Geometry-aware scattering compensation for 3D printing",
      "DOI": "10.1145/3306346.3322992",
      "Year": 2019,
      "ACM Keywords": [
        "Computer-aided manufacturing",
        "Reflectance modeling",
        "Volumetric models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Fabrication",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://reality.cs.ucl.ac.uk/projects/texture-repro/sumin19geometry-aware-lowres.pdf",
      "Project URL": "http://reality.cs.ucl.ac.uk/projects/texture-repro/sumin19geometry-aware.html",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Variational implicit point set surfaces",
      "DOI": "10.1145/3306346.3322994",
      "Year": 2019,
      "ACM Keywords": [
        "Point-based models",
        "Volumetric models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://www.cse.wustl.edu/~taoju/research/vipss.pdf",
      "Project URL": "",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/adshhzy/VIPSS",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "2717c4ad8edd0fc8552b437512b165a14185b617",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:0dac2184cf0abdd4e45536522405e74eecd48b8d;origin=https://github.com/adshhzy/VIPSS;visit=swh:1:snp:416b2d138b45cb2802453235f1dabd6b268aa79a;anchor=swh:1:rev:2717c4ad8edd0fc8552b437512b165a14185b617;path=//",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "CMake,Make",
      "Dependencies": "Armadillo, NLopt",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Build instructions/comments": "Both required libraries (armadillo and NLopt) can be found via apt-get. In the CMakeLists, In had to change line 6 from find_package(nlopt REQUIRED) to find_package(NLopt REQUIRED). In file vipss/src/surfacer/ImplicitedSurfacing.cpp, I added #include <chrono>, and then the compilation went fine.",
      "Misc. comments": "A script is provided to replicate the figures in the paper, however it complains that some input are missing (eg ../data/noise_kitten/kitten_h0.04/input.xyz). I got a \"core dump\" for all the examples I tested (using the command lines provided by the authors)."
    }
  ],
  [
    {
      "Variant name": "MacOs",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macos",
      "Title": "Hyperparameter optimization in black-box image processing using differentiable proxies",
      "DOI": "10.1145/3306346.3322996",
      "Year": 2019,
      "ACM Keywords": [
        "Computational photography"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://www.cs.princeton.edu/~fheide/ProxyOpt.pdf",
      "Project URL": "https://www.cs.princeton.edu/~fheide/proxyopt",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "Ubuntu 20.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Affine interpolation in a lie group framework",
      "DOI": "10.1145/3306346.3322997",
      "Year": 2019,
      "ACM Keywords": [
        "Animation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "",
      "Project URL": "",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/sumukhbansal/AffineInterpolation",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "7f34e82709cca1b01c195671eaff67db2c4ef5ff",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "Matlab",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "matlab/communication toolbox",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 2,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Build instructions/comments": "The code needs vec2mat from the communication toolbox. Since I don't have this toolbox, I used the following script:\n function [ mat, npadded ] = vec2mat( vec, N )\n v = vec(:);\n nelem = size(v,1);\n nrows = ceil(nelem/N);\n npadded = nrows*N - nelem;\n newv = [v; zeros(npadded,1)];\n mat=reshape(newv,N, nrows)'; \n end\n. The program worked but created unexpected complex values and the patch function could not run, for the example given in the readme. For the same example but replacing the translation by [1 1 1] gave me an interpolation result which does  not look plausible and it appears that the created variables have a lot of NaN values (I had a warning that the matrix is singular to working precision, so that could explain it). Another reason could be my own implementation of vec2mat given above.",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "InteractionFusion: real-time reconstruction of hand poses and deformable objects in hand-object interactions",
      "DOI": "10.1145/3306346.3322998",
      "Year": 2019,
      "ACM Keywords": [
        "Shape Modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://xufeng.site/publications/2019/zhang2019interaction_online.pdf",
      "Project URL": "",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Computational peeling art design",
      "DOI": "10.1145/3306346.3323000",
      "Year": 2019,
      "ACM Keywords": [
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://rec.ustc.edu.cn/share/ac9d35e0-c7e0-11e9-bb40-cbe1766b385f",
      "Project URL": "http://staff.ustc.edu.cn/~fuxm/projects/Peeling/index.html",
      "Code available (boolean)": true,
      "Code URL": "http://rec.ustc.edu.cn/share/18701740-c874-11e9-9102-499069dc0a47",
      "Code URL2": "",
      "MD5 sum (for archives)": "f2b7a03a66e39daa3e4a50e0d804cd26",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Build instructions/comments": "The code runs with wine on ubuntu: wine Surface_Mesh.exe and reproduces the results, following the readme file. However given that it is only a binary, the code cannot be adapted.",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "",
      "Reviewer name": "David Coeurjolly <david.coeurjolly liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS",
      "Title": "Atlas refinement with bounded packing efficiency",
      "DOI": "10.1145/3306346.3323001",
      "Year": 2019,
      "ACM Keywords": [
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://rec.ustc.edu.cn/share/30966f70-785c-11e9-b9d5-979f349c9dc1",
      "Project URL": "http://staff.ustc.edu.cn/~fuxm/projects/AAAtlas/index.html",
      "Code available (boolean)": true,
      "Code URL": "https://rec.ustc.edu.cn/share/bfea16e0-9706-11e9-89b4-4506398097b4",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Build instructions/comments": "Code and dataset are available on the project page. However, the link to the archive redirects to a website that produces some server error when trying to download the archive:\n<Error xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'>\n <Code>InternalError</Code>\n <Message>\n The system encountered an internal error, please try again.\n </Message>\n <Resource>\n /importfile/20200113_043e551e1bac6c5ecce76b6f08df6c00\n </Resource>\n <HostId>0004</HostId>\n <RequestId>rkqV2V9sH0DmBc7OSxEHR1GGJFHIqZrK</RequestId>\n </Error>",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "PuppetMaster: robotic animation of marionettesx ",
      "DOI": "10.1145/3306346.3323003",
      "Year": 2019,
      "ACM Keywords": [
        "Robotic control",
        "Physical simulation",
        "Nonconvex optimization"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://crl.ethz.ch/papers/puppetMaster.pdf",
      "Project URL": "",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Optimal transport-based polar interpolation of directional fields ",
      "DOI": "10.1145/3306346.3323005",
      "Year": 2019,
      "ACM Keywords": [
        "Shape analysis",
        "Interpolation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://people.csail.mit.edu/jsolomon/assets/vecinterp.pdf",
      "Project URL": "",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Stylizing video by example",
      "DOI": "10.1145/3306346.3323006",
      "Year": 2019,
      "ACM Keywords": [
        "Motion Processing",
        "Image Processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://dcgi.fel.cvut.cz/home/sykorad/Jamriska19-SIG.pdf",
      "Project URL": "https://dcgi.fel.cvut.cz/home/sykorad/ebsynth.html",
      "Code available (boolean)": true,
      "Code URL": "https://ebsynth.com/EbSynth-Win.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "6fd17db317e01550b6dfe3466f8371b7",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Binary",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "To make it work on linux just run \"wine EbSynth.exe\". A sample project is provided. Although there is no readme file, an html points to a 10 min long video tutorial on youtube. The small UI is quite simple to use. The sample project reproduces Fig. 9.",
      "Misc. comments": ""
    }
  ],
  [
    {
      "##": "This field is displayed even if no replicability test could have been performed.",
      "Variant name": "Windows 10",
      "Reviewer name": "Nicolas Bonneel <nicolas.bonneel@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Windows",
      "Title": "Optimal Multiple Importance Sampling",
      "DOI": "10.1145/3306346.3323009",
      "Year": 2019,
      "ACM Keywords": [
        "Rendering",
        "Probability and statistics"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://graphics.cg.uni-saarland.de/papers/konda-2019-siggraph-optimal-mis.pdf",
      "Project URL": "https://cgg.mff.cuni.cz/~jaroslav/papers/2019-optimal-mis/",
      "Code available (boolean)": true,
      "Code URL": "https://graphics.cg.uni-saarland.de/papers/konda-2019-siggraph-optimal-mis-supplemental.zip",
      "Code URL2": "https://cgg.mff.cuni.cz/~jaroslav/papers/2019-optimal-mis/2019-kondapaneni-optimal-mis-src.zip",
      "MD5 sum (for archives)": "9A8DDAF3293C39EED9A9CFE17EDE209D",
      "MD5 sum (for archives) URL2": "A77B372F34FB236A9FD59346AF2BFDCB",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "pbrt,eigen,glog,openexr,ptex,zlib",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "There is no documentation to build and run the code, but it is quite easy anyway since it relies on PBRT. I pulled PBRT v3 (aaa552a4b9cbf9dccb71450f47b268e0ed6370e2) with recursive dependencies, replaced PBRT files with those provided in supplementary materials, ran CMake (worked directly), and added integrators/optmis.cpp and core/guiding.cpp in imgtool, bsdftest, pbrt_test, and pbrt_exe Visual Studio projects (you may as well edit the CMakeLists.txt). Compiling worked directly. Example scenes with pbrt scripts already set up to run the proposed MIS strategy are given in supplementary materials, for instance in supplemental/results/dining-room/scene (run pbrt.exe dining-room.pbrt as usual). It produces results comparable to those advertised. \n\nAdditional scripts to reproduce plots (some rely on Mathematica, others on Matlab ; I did not evaluate them) and to compare image results from different methods are provided.",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Implicit untangling: a robust solution for modeling layered clothing",
      "DOI": "10.1145/3306346.3323010",
      "Year": 2019,
      "ACM Keywords": [
        "Collision detection",
        "Volumetric models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.archives-ouvertes.fr/hal-02129156/",
      "PDF URL": "https://hal.archives-ouvertes.fr/hal-02129156/file/main.pdf",
      "Project URL": "",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "##": "This field is displayed even if no replicability test could have been performed.",
      "Variant name": "macOs",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "TriWild: robust triangulation with curve constraints",
      "DOI": "10.1145/3306346.3323011",
      "Year": 2019,
      "ACM Keywords": [
        "Mesh generation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.cs.toronto.edu/~jacobson/images/triwild-robust-triangulation-with-curve-constraints-siggraph-2019-compressed-hu-et-al.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://research.adobe.com/publication/triwild-robust-triangulation-with-curve-constraints/",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/wildmeshing/TriWild",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "899bcbf4e50fa1da89b5a52db5c598a2ac0136d9",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:e913490fd09666b7b093ef6f095e85e979ff9b6c;origin=https://github.com/wildmeshing/TriWild;visit=swh:1:snp:5e609118562d2e565d46b60a320163cd90e1c578;anchor=swh:1:rev:899bcbf4e50fa1da89b5a52db5c598a2ac0136d9;path=//",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "c++",
      "Code License (if any)": "MPL",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "cmake",
      "Dependencies": "All dependencies are included",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "macOS Catalina",
      "Build instructions/comments": "No problem to build de code. The authors provide all scripts and data to reproduce all image if the paper. The README is complete and gives a good overview of the tool.",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "macOS",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS",
      "Title": "Progressive embedding",
      "DOI": "10.1145/3306346.3323012",
      "Year": 2019,
      "ACM Keywords": [
        "Shape modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://cs.nyu.edu/~zhongshi/files/ProgressiveEmbedding.pdf",
      "Project URL": "https://cs.nyu.edu/~zhongshi/publication/progressive-embedding/",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/hankstag/progressive_embedding",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "02b7596a3b1d182616bfc415d4d1f8351ae6486e",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:c56b9d955e00f99007af64c108b3f37241bf1959;origin=https://github.com/hankstag/progressive_embedding;visit=swh:1:snp:c131774f9f1f54950e36c6365205042dd9e44f71;anchor=swh:1:rev:02b7596a3b1d182616bfc415d4d1f8351ae6486e;path=//",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++",
      "Code License (if any)": "Mozilla Public License 2.0",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "cmake",
      "Dependencies": "libIGL (custom fork), CGAL, TRIANGLE, OpenGL, TBB",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 3,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 3,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Build instructions/comments": "To compile the code, you need a special branch of libigl. This is mentioned in the README.md. Make sure to follow the instructions AFTER having cloned the Progressive Embedding project:\n  git clone https://github.com/hankstag/progressive_embedding.git\n  cd progressive_embedding\nthen the then libigl cloning instructions.\nThe CMakeLists has several issues. First, a source file is missing (test_local_smoothing.cpp), so you would need to comment out the line 91 and 101 of the CMakeLists.txt. Then, there is a tbb link issue: line 93\n   target_link_libraries(progressive_embedding igl::core igl::triangle igl::opengl_glfw igl::cgal igl::opengl_glfw_imgui tab_static)\nmust be replaced by\n   target_link_libraries(progressive_embedding igl::core igl::triangle igl::opengl_glfw igl::cgal igl::opengl_glfw_imgui tbb_static)\n\n After that, everything builds perfectly. There is no precise description nor documentation of the executables but using the provided data and the given examples, I was able to reproduce some results that seem to match with the paper ones.",
      "Misc. comments": "The authors provide all the result data of their paper (google drive link: https://drive.google.com/file/d/1caGIzPd9trlx0EvBbE06S2L3g1kHvIwJ/view?usp=sharing, 1.4Go (ZIP))."
    }
  ],
  [
    {
      "Variant name": "Ubuntu 20.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Anisotropic elasticity for inversion-safety and element rehabilitation",
      "DOI": "10.1145/3306346.3323014",
      "Year": 2019,
      "ACM Keywords": [
        "Physical simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://graphics.pixar.com/library/AnisotropicElasticitySIGGRAPH2019/paper.pdf",
      "Project URL": "http://graphics.pixar.com/library/AnisotropicElasticitySIGGRAPH2019/",
      "Code available (boolean)": true,
      "Code URL": "http://graphics.pixar.com/library/AnisotropicElasticitySIGGRAPH2019/matlab.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "6e0912a7d138312f542f8d514cf8f164",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "matlab",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "matlab/octave",
      "Dependencies": "Matlab Symbolic package / Octave Symbolic package",
      "Does the software require paywall/proprietary software/material (boolean)?": true,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 2,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Build instructions/comments": "",
      "Misc. comments": "Replicates only the convergence verification of I5 closed forms. The code for the applications is not given."
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Synthetic defocus and look-ahead autofocus for casual videography",
      "DOI": "10.1145/3306346.3323015",
      "Year": 2019,
      "ACM Keywords": [
        "Computational photography",
        "Image-based rendering"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1905.06326",
      "PDF URL": "https://arxiv.org/pdf/1905.06326",
      "Project URL": "https://ceciliavision.github.io/vid-auto-focus/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": "The authors provide an interactive website showing results of the paper. They also distribute a dataset (Aperture Dataset) with images (1278 pairs and 607 triplets) and ground truth shallow DOF images."
    }
  ],
  [
    {
      "##": "This field is displayed even if no replicability test could have been performed.",
      "Variant name": "linux (ubuntu)",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Finding hexahedrizations for small quadrangulations of the sphere",
      "DOI": "10.1145/3306346.3323017",
      "Year": 2019,
      "ACM Keywords": [
        "Mesh geometry models",
        "Combinatorial optimization",
        "Permutations and combinations"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://arxiv.org/pdf/1904.11229",
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1904.11229",
      "Project URL": "https://www.hextreme.eu/paper-hex-small-sphere/",
      "Code available (boolean)": true,
      "Code URL": "https://www.hextreme.eu/Download/topological-hex-0.3.0.tar.gz",
      "Code URL2": "",
      "MD5 sum (for archives)": "68cbc40dc966ef20def16f4b77e805c8",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C",
      "Code License (if any)": "GPL",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "cmake",
      "Dependencies": "openmp",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Operating system for the test": "linux",
      "Build instructions/comments": "No problem to build the code from the README.md information. There is only some typos in the README in order to run the example:\n  ./topological_hex ../input/single-hex.mesh -H 16 -V 14\n   ./topological-hex ../input/single-hex.mesh 16  14. The programs output text messages than could be postprocessed to generate the figures.",
      "Misc. comments": "Some results, slides and video are provided in the project or ACM page."
    }
  ],
  [
    {
      "Variant name": "macOS",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS",
      "Title": "Hierarchical russian roulette for vertex connections",
      "DOI": "10.1145/3306346.3323018",
      "Year": 2019,
      "ACM Keywords": [
        "Ray tracing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://www.jp.square-enix.com/tech/library/pdf/Hierarchical_Russian_Roulette_for_Vertex_Connections.pdf",
      "Project URL": "http://www.jp.square-enix.com/tech/publications.html",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 4,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Build instructions/comments": "",
      "Misc. comments": "The authors detail an example (C++) code of their hierarchical Russian roulette system in supplementary material. From that code, it should not be difficult to reimplement the paper in other context."
    }
  ],
  [
    {
      "##": "This field is displayed even if no replicability test could have been performed.",
      "Variant name": "macOS",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Title": "Parametrization quantization with free boundaries for trimmed quad meshing",
      "DOI": "10.1145/3306346.3323019",
      "Year": 2019,
      "ACM Keywords": [
        "Mesh geometry models",
        "Mesh models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF URL": "https://www.graphics.rwth-aachen.de/media/papers/300/LyonCampenBommesKobbelt_Siggraph2019_TrimmedQuadMeshing.pdf",
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "Project URL": "https://www.meshing.rwth-aachen.de/publication/03300/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Operating system for the test": "",
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Nicolas Mellado <nmellado0@gmail.com>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "SPOT: Sliced Partial Optimal Transport ",
      "DOI": "10.1145/3306346.3323021",
      "Year": 2019,
      "ACM Keywords": [
        "Image manipulation",
        "Point-based models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://hal.archives-ouvertes.fr/hal-02111220",
      "PDF URL": "https://perso.liris.cnrs.fr/nbonneel/spot/spot.pdf",
      "Project URL": "https://perso.liris.cnrs.fr/nbonneel/spot/",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/nbonneel/spot",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "724d2dfd65481b1c8393dfc8347a0b206cfe5b13",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:724d2dfd65481b1c8393dfc8347a0b206cfe5b13;origin=https://github.com/nbonneel/spot.git;visit=swh:1:snp:ca8fd86723587e5e782fcffc84e6f586f7f74412/",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++",
      "Code License (if any)": "BSD-2-Clause",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "make",
      "Dependencies": "stbimage",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Build instructions/comments": "Build instructions are straighforward to follow, dependencies are embedded in the repository. Two executables are provided:\n - FIST: compute scale, translation and rotation between two random point-clouds (so I cannot set a replicability score of 5). Even if it runs, it is impossible to know if the computed transformation is good or not.\n - colorTransfer: I had to fix a minor bug to make it run: the input images are not located at the place the software attempts to load them. I fixed it by adding a shortcut in my filesystem:\n ~/git/spot$ ln -s Datasets/Images/ data/.\n Results are totally fine for this program.",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Semantic photo manipulation with a generative image prior",
      "DOI": "10.1145/3306346.3323023",
      "Year": 2019,
      "ACM Keywords": [
        "Image representations",
        "Neural networks",
        "Image manipulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/2005.07727",
      "PDF URL": "http://ganpaint.io/Bau_et_al_Semantic_Photo_Manipulation_preprint.pdf",
      "Project URL": "http://ganpaint.io/",
      "Code available (boolean)": true,
      "Code URL": "http://ganpaint.io/demo/?project=church",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Online demo",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 1,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Build instructions/comments": "",
      "Misc. comments": "An online demo is provided with test pictures. I was not able to delete doors and add domes in a convincing way, but adding grass and trees worked. Sometimes removing clouds only produces a blur. Tested on July 27th 2020."
    }
  ],
  [
    {
      "Variant name": "Ubuntu 20.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Handheld multi-frame super-resolution",
      "DOI": "10.1145/3306346.3323024",
      "Year": 2019,
      "ACM Keywords": [
        "Computational photography",
        "Image processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1905.03277",
      "PDF URL": "https://drive.google.com/file/d/1T1u2Mhm8ay6reHHouM1wO0TegvRJbJV_/view",
      "Project URL": "https://sites.google.com/view/handheld-super-res/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": "A re-implementation (i.e. not provided by a paper author) is available at https://github.com/kunzmi/ImageStackAlignator"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "A null-scattering path integral formulation of light transport",
      "DOI": "10.1145/3306346.3323025",
      "Year": 2019,
      "ACM Keywords": [
        "Ray tracing ... "
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://cs.dartmouth.edu/~wjarosz/publications/miller19null.pdf",
      "Project URL": "https://cs.dartmouth.edu/~wjarosz/publications/miller19null.html",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "macOS",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS",
      "Title": "Gaussian-product subdivision surfaces",
      "DOI": "10.1145/3306346.3323026",
      "Year": 2019,
      "ACM Keywords": [
        "Mesh geometry models",
        "Parametric curve and surface models",
        "Mixture models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://perso.telecom-paristech.fr/boubek/papers/GPS/GPS.pdf",
      "Project URL": "https://www.cg.tuwien.ac.at/research/publications/2019/Preiner_2019/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Text-based editing of talking-head video",
      "DOI": "10.1145/3306346.3323028",
      "Year": 2019,
      "ACM Keywords": [
        "Reconstruction",
        "Computational photography",
        "Motion processing",
        "Graphics systems and interfaces",
        "Speech / audio search",
        "Video search"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://www.ohadf.com/projects/text-based-editing/data/text-based-editing.pdf",
      "Project URL": "https://www.ohadf.com/projects/text-based-editing/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": "A supplementary material is available with a lot of additional experiments, comparisons and the full network architecture."
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Symmetric Moving Frames",
      "DOI": "10.1145/3306346.3323029",
      "Year": 2019,
      "ACM Keywords": [
        "Mesh generation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://www.cs.cmu.edu/~kmcrane/Projects/SymmetricMovingFrames/paper.pdf",
      "Project URL": "https://www.cs.cmu.edu/~kmcrane/Projects/SymmetricMovingFrames/index.html",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "VR facial animation via multiview image translation",
      "DOI": "10.1145/3306346.3323030",
      "Year": 2019,
      "ACM Keywords": [
        "Computer Vision",
        "Animation",
        "Unsupervised learning",
        "Virtual reality"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Virtual Reality",
      "Co-authors from academia (boolean)": false,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://research.fb.com/wp-content/uploads/2019/06/VR-Facial-Animation-via-Multiview-Image-Translation.pdf",
      "Project URL": "https://research.fb.com/publications/vr-facial-animation-via-multiview-image-translation/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Fractional gaussian fields for modeling and rendering of spatially-correlated media",
      "DOI": "10.1145/3306346.3323031",
      "Year": 2019,
      "ACM Keywords": [
        "Reflectance modeling"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://sites.cs.ucsb.edu/~lingqi/publications/paper_fgf.pdf",
      "Project URL": "",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "##": "This field is displayed even if no replicability test could have been performed.",
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": " Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Beyond trilinear interpolation: higher quality for free",
      "DOI": "10.1145/3306346.3323032",
      "Year": 2019,
      "ACM Keywords": [
        "Image processing",
        "Texturing",
        "Volumetric models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://dl.acm.org/doi/pdf/10.1145/3306346.3323032",
      "Project URL": "",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 4,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Vibration-minimizing motion retargeting for robotic characters",
      "DOI": "10.1145/3306346.3323034",
      "Year": 2019,
      "ACM Keywords": [
        "Physical Simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://s3-us-west-1.amazonaws.com/disneyresearch/wp-content/uploads/20190729144202/VibSupPaper_2.pdf",
      "Project URL": "https://la.disneyresearch.com/publication/publication-process-vibration-minimizing-motion-retargeting-for-robotic-characters/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "A symmetric objective function for ICP",
      "DOI": "10.1145/3306346.3323037",
      "Year": 2019,
      "ACM Keywords": [
        "Shape analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://gfx.cs.princeton.edu/pubs/Rusinkiewicz_2019_ASO/symm_icp.pdf",
      "Project URL": "https://gfx.cs.princeton.edu/pubs/Rusinkiewicz_2019_ASO/index.php",
      "Code available (boolean)": true,
      "Code URL": "https://gfx.cs.princeton.edu/pubs/Rusinkiewicz_2019_ASO/icptests-1.0.zip",
      "Code URL2": "",
      "MD5 sum (for archives)": "f32b69edbc7fcb489d36a8f51f2769ee",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C",
      "Code License (if any)": "GPLv2",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "Makefile",
      "Dependencies": "trimesh2",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 4,
      "Build/configure score {0=NA, 1,2,3,4,5}": 4,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Build instructions/comments": "The code is in the library trimesh2 which should be downloaded here: https://gfx.cs.princeton.edu/proj/trimesh2/. If the path to the code is $location/icptests/ the trimesh2 folder should be $location/trimesh2/. Compile the library with make, then icptests with make. All tests can be run using the bash scripts as explained in the README.",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Synthetic silviculture: multi-scale modeling of plant ecosystems",
      "DOI": "10.1145/3306346.3323039",
      "Year": 2019,
      "ACM Keywords": [
        "Interactive simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://storage.googleapis.com/pirk.io/papers/Makowski.etal-2019-Synthetic-Silviculture.pdf",
      "Project URL": "https://storage.googleapis.com/pirk.io/projects/synthetic_silviculture/index.html",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Photon surfaces for robust, unbiased volumetric density estimation",
      "DOI": "10.1145/3306346.3323041",
      "Year": 2019,
      "ACM Keywords": [
        "Ray tracing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Rendering",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://cs.dartmouth.edu/~wjarosz/publications/deng19photon-small.pdf",
      "Project URL": "https://cs.dartmouth.edu/~wjarosz/publications/deng19photon.html",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": "There seems to be an implementation of the method, independent of the paper authors, at https://github.com/beltegeuse/rustlight"
    }
  ],
  [
    {
      "Variant name": "macOS ",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS Catalina",
      "Title": "Weaving geodesic foliations",
      "DOI": "10.1145/3306346.3323043",
      "Year": 2019,
      "ACM Keywords": [
        "Mesh geometry models",
        "Continuous simulation",
        "Geometric topology"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://www.cs.utexas.edu/~josh/papers/weaving.pdf",
      "Project URL": "https://www.cs.utexas.edu/~josh/",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/evouga/RibbonSim",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "273b7e0b463196f184e34bc211df95d2baca63e6",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:6c09fd1feaa7003303064b096d9c61e94b0fac6b;origin=https://github.com/evouga/RibbonSim;visit=swh:1:snp:62673a6fcbc21d599eb194c642bfab6f267bac40;anchor=swh:1:rev:d7e2040a831a9bccdca1d97c9162fa2670268bc2;path=//",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++",
      "Code License (if any)": "Mozilla Public License 2.0",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "cmake",
      "Dependencies": "libigl",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 4,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 3,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Build instructions/comments": "The code is pretty easy to compile. I only have to edit few files to update the LibIGL viewer API (see diff below). From the code, one can optimize some rod structres (many of the strucres presented in the paper are given as examples). However, the direction field part of the paper does not seem to be presented in the code (the author mentions another, no-yet-available, project for the field design.\n\n\ndiff --git a/RodsHook.cpp b/RodsHook.cpp\nindex ae8de98..11c6d49 100644\n--- a/RodsHook.cpp\n+++ b/RodsHook.cpp\n@@ -144,8 +144,8 @@ void RodsHook::drawGUI(igl::opengl::glfw::imgui::ImGuiMenu &menu)\n     menu.callback_draw_custom_window = [&]()\n     {\n         // Define next window position + size\n-        ImGui::SetNextWindowPos(ImVec2(180.f * menu.menu_scaling(), 10), ImGuiSetCond_FirstUseEver);\n-        ImGui::SetNextWindowSize(ImVec2(0, 0), ImGuiSetCond_FirstUseEver);\n+      ImGui::SetNextWindowPos(ImVec2(180.f * menu.menu_scaling(), 10), ImGuiCond_FirstUseEver);\n+      ImGui::SetNextWindowSize(ImVec2(0, 0), ImGuiCond_FirstUseEver);\n         ImGui::Begin(\n             \"Stats\", nullptr,\n             ImGuiWindowFlags_NoSavedSettings\n@@ -190,9 +190,9 @@ bool RodsHook::mouseClicked(igl::opengl::glfw::Viewer &viewer, int button)\n     Eigen::Vector3f bc;\n     // Cast a ray in the view direction starting from the mouse position\n     double x = viewer.current_mouse_x;\n-    double y = viewer.core.viewport(3) - viewer.current_mouse_y;\n-    if (igl::unproject_onto_mesh(Eigen::Vector2f(x, y), viewer.core.view,\n-        viewer.core.proj, viewer.core.viewport, this->Q, this->F, fid, bc))\n+    double y = viewer.core().viewport(3) - viewer.current_mouse_y;\n+    if (igl::unproject_onto_mesh(Eigen::Vector2f(x, y), viewer.core().view,\n+        viewer.core().proj, viewer.core().viewport, this->Q, this->F, fid, bc))\n     {\n         int prevId = 0;\n         int nextId = 0;\n@@ -1531,7 +1531,7 @@ void RodsHook::renderRenderGeometry(igl::opengl::glfw::Viewer &viewer)\n         viewer.data().set_points(Eigen::MatrixXd(0, 3), Eigen::MatrixXd(0, 3));\n     }\n\n-    viewer.core.lighting_factor = 0.;\n+    viewer.core().lighting_factor = 0.;\n     viewer.data().set_colors(faceColors);\n\n     if(constraintEdges.rows() > 0)\ndiff --git a/main.cpp b/main.cpp\nindex 39dc709..d99844f 100755\n--- a/main.cpp\n+++ b/main.cpp\n@@ -72,10 +72,10 @@ int main(int argc, char *argv[])\n\n     hook = new RodsHook();\n\n-    viewer.core.background_color = Eigen::Vector4f(.9, .9, .7, 1);\n+    viewer.core().background_color = Eigen::Vector4f(.9, .9, .7, 1);^M\n\n     viewer.data().set_face_based(true);\n-    viewer.core.is_animating = true;\n+    viewer.core().is_animating = true;^M\n     viewer.callback_key_pressed = keyCallback;\n     viewer.callback_mouse_down = mouseDownCallback;\n     viewer.callback_pre_draw = drawCallback;",
      "Misc. comments": ""
    }
  ],
  [
    {
      "##": "This field is displayed even if no replicability test could have been performed.",
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Accurate Markerless Jaw Tracking for Facial Performance Capture",
      "DOI": "10.1145/3306346.3323044",
      "Year": 2019,
      "ACM Keywords": [
        "Motion capture",
        "Motion processing"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://s3.amazonaws.com/disney-research-data/wp-content/uploads/2019/06/25125445/Accurate-Markerless-Jaw-Tracking-for-Facial-Performance-Capture.pdf",
      "Project URL": "https://studios.disneyresearch.com/2019/07/12/accurate-markerless-jaw-tracking-for-facial-performance-capture/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": "",
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Physically-based statistical simulation of rain sound",
      "DOI": "10.1145/3306346.3323045",
      "Year": 2019,
      "ACM Keywords": [
        "Sound and music computing",
        "Computer graphics"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://dl.acm.org/doi/pdf/10.1145/3306346.3323045",
      "Project URL": "",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Interactive and automatic navigation for 360° video playback",
      "DOI": "10.1145/3306346.3323046",
      "Year": 2019,
      "ACM Keywords": [
        "Computational photography"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": false,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://kyoungkookkang.github.io/Project/SIG_2019_Interactive360/paper.pdf",
      "Project URL": "https://kyoungkookkang.github.io/Project/SIG_2019_Interactive360/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": "The project's webpage states that the code will be available soon (retrieved on July 22nd 2020)."
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS",
      "Title": "Octahedral Frames for Feature-Aligned Cross Fields Share on",
      "DOI": "10.1145/3374209",
      "Year": 2020,
      "ACM Keywords": [
        "Shape analysis",
        "Mesh models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/2007.09740",
      "PDF URL": "https://people.csail.mit.edu/jsolomon/assets/crossfields.pdf",
      "Project URL": "",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.Fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS",
      "Title": "Monte Carlo geometry processing: a grid-free approach to PDE-based methods on volumetric domains",
      "DOI": "10.1145/3386569.3392374",
      "Year": 2020,
      "ACM Keywords": [
        "Shape Analysis"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://www.cs.cmu.edu/~kmcrane/Projects/MonteCarloGeometryProcessing/paper.pdf",
      "Project URL": "http://www.cs.cmu.edu/~kmcrane/Projects/MonteCarloGeometryProcessing/index.html",
      "Code available (boolean)": true,
      "Code URL": "http://www.cs.cmu.edu/~kmcrane/Projects/MonteCarloGeometryProcessing/WoSLaplace2D.cpp.html",
      "Code URL2": "http://www.cs.cmu.edu/~kmcrane/Projects/MonteCarloGeometryProcessing/WoSPoisson2D.cpp.html",
      "MD5 sum (for archives)": "67657f1e1e644306f5c13877b5719694",
      "MD5 sum (for archives) URL2": "0c062fa8480038de6a3b82d4caf08c10",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Partial Code",
      "Software language": "c++",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "none",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 4,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 2,
      "Build instructions/comments": "The authors provide two 'quick and dirty/naive' c++ version of their Monte-Carlo PDE solver (Laplace and Poisson problems). The codes build and run perfectly outputing some CSV 2D map that must be converted to an image to 'visualize' the output. Per se, the provided code can only partially reproduce some paper results but interested readers should be able to quickly reimplement the core contributions of the paper (see Misc. comments). Some applications mentionned in the paper may require additional efforts (VF, Helmholtz Decomposition and Shape Deformation).",
      "Misc. comments": "In the project page, the authors also provide links to many shadertoy scripts that reproduce some paper results (scripts not from the authors)."
    }
  ],
  [
    {
      "Variant name": "macOS",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS Catalina",
      "Title": "Fast tetrahedral meshing in the wild",
      "DOI": "10.1145/3386569.3392385",
      "Year": 2020,
      "ACM Keywords": [
        "Mesh generation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/1908.03581",
      "PDF URL": "https://arxiv.org/pdf/1908.03581.pdf",
      "Project URL": "",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/wildmeshing/fTetWild",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "4c66f57380342e6868f912890c974cc093d505f5",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:d337a7646c63859e26e2877129a89043302d85ae;origin=https://github.com/wildmeshing/fTetWild;visit=swh:1:snp:deaef5698049bc8584dcebb6736e8f7fd3ca1a0a;anchor=swh:1:rev:dca0676985c987c5c15156330e8d08779c211b20;path=//",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++",
      "Code License (if any)": "MPL 2.0",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "cmake",
      "Dependencies": "libigl,gmp,tbb,geogram",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 3,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Build instructions/comments": "The build instructions are straightforward to follow (all dependencies are smoothly built at the cmake step). The authors also provide all scripts to replicate all figures of the paper.",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr> ",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS",
      "Title": "Discrete differential operators on polygonal meshes",
      "DOI": "10.1145/3386569.3392389",
      "Year": 2020,
      "ACM Keywords": [
        "Mesh models",
        "Discretization"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://graphics.pixar.com/library/PolyDDG/paper.pdf",
      "Project URL": "http://graphics.pixar.com/library/PolyDDG/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": "Talk available here: https://vimeo.com/454852005"
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS",
      "Title": "Inter-surface maps via constant-curvature metrics",
      "DOI": "10.1145/3386569.3392399",
      "Year": 2020,
      "ACM Keywords": [
        "Mesh geometry models",
        "Mesh models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://www.graphics.rwth-aachen.de/media/papers/309/intersurface.pdf",
      "Project URL": "https://www.graphics.rwth-aachen.de/publication/03309/",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "macOS",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS Catalina",
      "Title": "Exact and efficient polyhedral envelope containment check",
      "DOI": "10.1145/3386569.3392426",
      "Year": 2020,
      "ACM Keywords": [
        "Mesh generation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://cs.nyu.edu/~yixinhu/exact_envelope.pdf",
      "Project URL": "",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/wangbolun300/fast-envelope",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "0d58124c589bed510acb83567674b8531e71a7e5",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:d3ae12d6c77cb685467977d8ee11bb91c9ac6def;origin=https://github.com/wangbolun300/fast-envelope.git;visit=swh:1:snp:85ad1113ac16bdaf3d2dd727ae1ed7baa224647b;anchor=swh:1:rev:0d58124c589bed510acb83567674b8531e71a7e5;path=//",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++",
      "Code License (if any)": "MIT",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "cmake",
      "Dependencies": "libigl,geogram,eigen",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Build instructions/comments": "When building the project, I got a first issue during the cmake when downloading the Eigen depency (wrong URL). This was easy to fix (just edit the cmake/FastEnvelopeDownloadExternal.cmake file and change the line 30 (GIT_TAG for libigl) to 21acee15fe4451e828b52bedcdba53b79d846376).\n\n The cmake is now ok but when building the project there is a missing file 'numerics.h' in the 'indirectPredicates' folder.",
      "Misc. comments": "The github project refers to a specific website (https://archive.nyu.edu/handle/2451/61221) to download the meshes that have been used in the paper."
    }
  ],
  [
    {
      "Variant name": "Ubuntu 18.04",
      "Reviewer name": "Pierre Bourquat <pierre.bourquat@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 18.04",
      "Title": "Quad-mesh based isometric mappings and developable surfaces",
      "DOI": "10.1145/3386569.3392430",
      "Year": 2020,
      "ACM Keywords": [
        "Shape modeling",
        "Optimization algorithms"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://www.dmg.tuwien.ac.at/geom/ig/publications/isometries/isometries.pdf",
      "Project URL": "",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 2,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "macOS",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS Catalina",
      "Title": "A level-set method for magnetic substance simulation",
      "DOI": "10.1145/3386569.3392445",
      "Year": 2020,
      "ACM Keywords": [
        "Physics",
        "Physical Simulation"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Animation and Simulation",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://www.dartmouth.edu/~boolzhu/papers/ferrofluid.pdf",
      "Project URL": "",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly <david.Coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS",
      "Title": "Principal symmetric meshes",
      "DOI": "10.1145/3386569.3392446",
      "Year": 2020,
      "ACM Keywords": [
        "Shape modeling",
        "Optimization algorithms"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://www.dmg.tuwien.ac.at/geom/ig/publications/snets/snets.pdf",
      "Project URL": "https://repository.kaust.edu.sa/handle/10754/662972",
      "Code available (boolean)": false,
      "Code URL": "",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "",
      "If code not available, pseudo-code available (boolean)": true,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 1,
      "Software type {Code, Binary, Partial Code}": "",
      "Software language": "",
      "Code License (if any)": "",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 0,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "Linux",
      "Reviewer name": "David Coeurjolly <david.coeurjolly@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "linux",
      "Title": "LoopyCuts: practical feature-preserving block decomposition for strongly hex-dominant meshing",
      "DOI": "10.1145/3386569.3392472",
      "Year": 2020,
      "ACM Keywords": [
        "Shape analysis",
        "Volumetric models",
        "Mesh models",
        "Mesh geometry models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "http://pers.ge.imati.cnr.it/livesu/papers/LPPSC20/LPPSC20.pdf",
      "Project URL": "",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/mlivesu/LoopyCuts",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "3f3f6090084374dedaca3294b7b39446cf9cbe82",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:d74cbe22a4f0fec8b997a964ad9940e798361f1c;origin=https://github.com/mlivesu/LoopyCuts.git;visit=swh:1:snp:095439b407778c9f418710557f1e6ec99fed3df9;anchor=swh:1:rev:3f3f6090084374dedaca3294b7b39446cf9cbe82/",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++",
      "Code License (if any)": "GPLv3",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "qmake",
      "Dependencies": "tetgen,qt",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": false,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 0,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 0,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 0,
      "Build instructions/comments": "The instructions are clear to download and build the dependencies but the `make` generates many openGL errors as reported in https://github.com/mlivesu/LoopyCuts/issues/1",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "David Coeurjolly",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "macOS",
      "Title": "Surface multigrid via intrinsic prolongation",
      "DOI": "10.1145/3450626.3459768",
      "Year": 2021,
      "ACM Keywords": [
        "Applied Computing",
        "Mesh models"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": true,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/2104.13755",
      "PDF URL": "https://www.dgp.toronto.edu/projects/intrinsic-prolongation/surfMG_65mb.pdf",
      "Project URL": "https://www.dgp.toronto.edu/projects/intrinsic-prolongation/",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/HTDerekLiu/surface_multigrid_code",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "a827578755d864df68b103c71048c7da7a00ce59",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:04de9a9e9fc06b7f546022225cbf44e7c2f2529e;origin=https://github.com/HTDerekLiu/surface_multigrid_code;visit=swh:1:snp:305eb440af79665be5aa5ffef3da20fea5bf25a2;anchor=swh:1:rev:a827578755d864df68b103c71048c7da7a00ce59",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "C++",
      "Code License (if any)": "GPLv3",
      "Are the code authors explicit? (boolean)": true,
      "Build/Configure mechanism": "cmake",
      "Dependencies": "libigl",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 3,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 5,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 1,
      "Build instructions/comments": "Very clear instructions to build the code and replicate most results from the paper. The project page also contains the siggraph21 presentation video",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Nicolas Bonneel",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Windows",
      "Title": "General Virtual Sketching Framework for Vector Line Art",
      "DOI": "10.1145/3450626.3459833",
      "Year": 2021,
      "ACM Keywords": [
        "Parametric curve and surface models",
        "Neural networks"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Images",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": true,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": false,
      "Arxiv/OAI page URL": "",
      "PDF URL": "https://esslab.jp/publications/HaoranSIGGRAPH2021.pdf",
      "Project URL": "https://markmohr.github.io/virtual_sketching/",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/MarkMoHR/virtual_sketching",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "958efe45a9120b9d467ba7701efba28c11e38f8f",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:rev:958efe45a9120b9d467ba7701efba28c11e38f8f;origin=https://github.com/MarkMoHR/virtual_sketching;visit=swh:1:snp:cf2dcf4e7f4ce568119e6768da981adaa1305fcc",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "Python",
      "Code License (if any)": "Apache License 2.0",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "",
      "Dependencies": "Tensorflow,opencv,pillow,scipy,gizeh",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": true,
      "Nature of the data (pretrained model, LUT...)": "pretrained models and training data (images) provided",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 2,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 5,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 4,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 5,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 3,
      "Build instructions/comments": "Instructions are clear, dependencies were easily installed with pip. I only ran into a CudNN issue: \"E tensorflow/stream_executor/cuda/cuda_dnn.cc:319] Loaded runtime CuDNN library: 7.5.0 but source was compiled with: 7.6.0.\" which was easily fixed by reinstalling CudNN. \n The code produces many warnings, during initialization (e.g., \"WARNING:tensorflow:From test_vectorization.py:325: The name tf.global_variables_initializer is deprecated. Please use tf.compat.v1.global_variables_initializer instead.\"  or \"WARNING:tensorflow:From NeuralRenderer.py:69: The name tf.depth_to_space is deprecated. Please use tf.compat.v1.depth_to_space instead\" or \"WARNING:tensorflow:From VGG16.py:80: max_pooling2d (from tensorflow.python.layers.pooling) is deprecated and will be removed in a future version. Instructions for updating: Use keras.layers.MaxPooling2D instead.\") and runtime (e.g., \"test_vectorization.py:74: RuntimeWarning: invalid value encountered in true_divide\" or \"W tensorflow/core/common_runtime/colocation_graph.cc:983] Failed to place the graph without changing the devices of some resources. Some of the operations (that had to be colocated with resource generating operations) are not supported on the resources' devices. Current candidate devices are [  /job:localhost/replica:0/task:0/device:CPU:0].\"), but nothing that prevents from getting reasonable outputs.\n\n The deprecated functions might indicate that the code may not run in the near future.\n\nA small difference with the paper is acknowledged : the stroke thickness in the exported svg files is constant, while it is varying in the paper. While it precludes direct and exact comparisons, the effect of the varying stroke thickness in the paper is very subtle. ",
      "Misc. comments": ""
    }
  ],
  [
    {
      "Variant name": "main",
      "Reviewer name": "Julie Digne <julie.digne@liris.cnrs.fr>",
      "Is master variant (boolean)": true,
      "Is variant deprecated (boolean)": false,
      "Operating system for the test": "Ubuntu 20.04",
      "Title": "Orienting point clouds with dipole propagation",
      "DOI": "10.1145/3450626.3459835",
      "Year": 2021,
      "ACM Keywords": [
        "Mesh models",
        "Point-based models",
        "Neural networks"
      ],
      "Topic {Rendering, Animation and Simulation, Geometry, Images, Virtual Reality, Fabrication}": "Geometry",
      "Co-authors from academia (boolean)": true,
      "Co-authors from industry (boolean)": false,
      "ACM Open Access (boolean)": false,
      "PDF on the authors' webpage / institution (boolean)": true,
      "PDF on Arxiv or any openarchive initiatives (boolean)": true,
      "Arxiv/OAI page URL": "https://arxiv.org/abs/2105.01604",
      "PDF URL": "https://arxiv.org/pdf/2105.01604.pdf",
      "Project URL": "https://galmetzer.github.io/dipole-normal-prop/",
      "Code available (boolean)": true,
      "Code URL": "https://github.com/galmetzer/dipole-normal-prop",
      "Code URL2": "",
      "MD5 sum (for archives)": "",
      "MD5 sum (for archives) URL2": "",
      "git/hg/svn commit hash or revision number": "0887b893b153f4ce6b09e4dd485f9b042f15b706",
      "git/hg/svn commit hash or revision number URL2": "",
      "Software Heritage permalink": "https://archive.softwareheritage.org/swh:1:dir:1ace3985b7c1a75822d15501f0a98f97c5857f09;origin=https://github.com/galmetzer/dipole-normal-prop;visit=swh:1:snp:93fc6a5b4bb8e4ce305be51eb01d4cf02f3fdadc;anchor=swh:1:rev:0887b893b153f4ce6b09e4dd485f9b042f15b706",
      "If code not available, pseudo-code available (boolean)": false,
      "If pseudo-code, could the paper be trivially implemented? {0..4}": 0,
      "Software type {Code, Binary, Partial Code}": "Code",
      "Software language": "python",
      "Code License (if any)": "no",
      "Are the code authors explicit? (boolean)": false,
      "Build/Configure mechanism": "NA",
      "Dependencies": "pytorch,pytorch-geometric,argparse,Open3D",
      "Does the software require paywall/proprietary software/material (boolean)?": false,
      "Does the code need data (not examples) (boolean)": false,
      "Nature of the data (pretrained model, LUT...)": "",
      "License of the data": "",
      "Able to perform a replicability test (boolean)": true,
      "If not able to perform a test, was it due to missing hardware/software? (boolean)": false,
      "Documentation score {0=NA,1,2,3}": 1,
      "Dependencies score {0=NA, 1,2,3,4,5}": 5,
      "Build/configure score {0=NA, 1,2,3,4,5}": 0,
      "Fixing bugs score (if any) {0=NA, 1,2,3,4,5}": 0,
      "Replicate paper results score {0=NA, 1,2,3,4,5}": 5,
      "Adaptability score to other contexts {0=NA, 1,2,3,4,5}": 0,
      "Time spent for the test (code download to first successful run, [0,10], 10min slots, 100min max)": 10,
      "Build instructions/comments": "I installed python 3.6, pytorch1.8 and pytorch-geometric with anaconda (instructions similar to script install_cu102.sh).",
      "Misc. comments": "I was able to run the program on several models: lion, hand, fandisk."
    }
  ]
]
